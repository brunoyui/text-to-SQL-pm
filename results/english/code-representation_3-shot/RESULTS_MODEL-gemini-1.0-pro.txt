SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource AS "Resource" FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC;
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_actions FROM event_log WHERE activity LIKE '%travel declaration%' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) AS "Number of Actions" FROM event_log WHERE resource = 'Peter';
SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2018-03-01' AND '2018-04-01';
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-04-01';
SELECT idcase FROM event_log WHERE timestamp IN ( SELECT MAX(timestamp) FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', timestamp) = '2018-03' );
SELECT idcase FROM event_log where activity = 'End trip' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log where activity = 'End trip' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log GROUP BY idcase HAVING max(timestamp) < '2018-04-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource = 'Douglas';
SELECT "idcase" FROM "event_log" WHERE "activity" = 'Declaration rejected by pre-approver' AND "resource" <> 'Douglas'
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by pre-approver' AND e2.activity = 'Declaration submitted' AND e2.resource <> 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT idcase) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource;
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT "idcase" FROM "event_log" WHERE "cost" > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count_events FROM event_log WHERE activity LIKE '%Declaration%' GROUP BY resource ORDER BY count_events DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity = 'Processing declaration' GROUP BY resource ORDER BY num_declarations DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS count_actions FROM event_log WHERE activity LIKE '%Declaration%' GROUP BY resource ORDER BY count_actions DESC;
SELECT * FROM event_log WHERE cost <> 0
SELECT * FROM event_log WHERE cost > 0
SELECT * FROM event_log WHERE cost > 0;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost <> 0;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT id, activity, resource, cost FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment';
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Request payment');
SELECT el1.id, el1.activity AS start_trip_activity, el1.timestamp AS start_trip_timestamp, el2.id, el2.activity AS payment_request_activity, el2.timestamp AS payment_request_timestamp FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Start trip' AND el2.activity = 'Request payment';
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE idcase LIKE '%declaration%' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%Declaration%' ORDER BY timestamp;
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration processing' AND timestamp BETWEEN '2018-04-12' AND '2018-04-13' );
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count_actions FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count_actions DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase HAVING event_count <= 20;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5;
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS num_declarations FROM event_log WHERE activity = 'DECLARE' GROUP BY resource ORDER BY num_declarations DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, SUM(cost) AS total_cost FROM event_log GROUP BY resource ORDER BY total_cost DESC LIMIT 5;
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY num_start_trips DESC;
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY num_start_trips DESC;
SELECT resource, COUNT(*) AS num_start_trips FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY num_start_trips DESC;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource ORDER BY total_occurrences DESC;
SELECT COUNT(*) AS "Number of Actions", resource FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT COUNT(*) AS "Number of Activities", resource FROM event_log WHERE activity LIKE '%Start trip%' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Total Occurrences", resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Number of Rejections", resource AS "Supervisor" FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource ORDER BY "Number of Rejections" DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN ( SELECT COUNT(activity) FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10 ) ORDER BY COUNT(activity) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' );
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' AND e.resource = 'Sara' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' );
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' AND e.resource = 'Sara' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') AND resource = 'Sara'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' );
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598'
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) AS activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY idcase DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by idcase DESC
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT SUM(cost) FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT SUM(cost) FROM event_log GROUP BY idcase
SELECT SUM(cost) FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource HAVING total_actions >= 100 ORDER BY total_actions DESC;
SELECT idcase, activity, timestamp, resource, cost FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, activity, timestamp, resource, cost FROM event_log ORDER BY idcase, timestamp;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*) AS "Total Occurrences", resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Performance Events", resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Approvals", resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT activity, count(*) AS activity_count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND strftime('%Y', timestamp) = '2017' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count_actions FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) AS "Number of Occurrences" FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) AS "Workload" FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%declaration processing%' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_performance_date FROM event_log GROUP BY activity ORDER BY latest_performance_date DESC;
SELECT activity, MAX(timestamp) AS last_performance_timestamp FROM event_log GROUP BY activity ORDER BY last_performance_timestamp DESC;
SELECT activity, MAX(timestamp) AS latest_performance FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity ORDER BY most_recent_date DESC;
SELECT activity, MAX(timestamp) AS last_timestamp FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity;
SELECT COUNT(*) AS "Number of times the 'declaration approved by supervisor' activity was performed in 2017" FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(*) AS "Number of times the 'permit rejected by employee' activity was performed in 2018" FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(DISTINCT idcase) AS "Declaration approved by supervisor" FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT idcase) AS "Permit rejected by employee" FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(DISTINCT idcase) AS "Declaration approved by supervisor" FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT idcase) AS "Permit rejected by employee" FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(*) FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(DISTINCT idcase) AS "Number of Declaration Approvals", resource AS "Supervisor" FROM event_log WHERE activity = 'Declaration approved by supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY resource UNION SELECT COUNT(DISTINCT idcase) AS "Number of Permit Rejections", resource AS "Employee" FROM event_log WHERE activity = 'Permit rejected by employee' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31' GROUP BY resource;
SELECT activity, MAX(timestamp) AS end_date, idcase FROM event_log GROUP BY activity, idcase ORDER BY end_date;
SELECT activity, MAX(timestamp) AS performance_end_date, id FROM event_log GROUP BY activity ORDER BY performance_end_date;
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log WHERE activity LIKE '%declaration%' GROUP BY activity ORDER BY end_date;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration submitted by employee' AND resource = 'Thomas';
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration submitted by employee'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration Request';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) <> '2018-01'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' );
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' ) AND resource = 'Charles'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND NOT idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-01-31' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) <> '2018-01';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log GROUP BY idcase
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ), DurationEvents AS ( SELECT activity, ( strftime('%s', next_timestamp) - strftime('%s', timestamp) ) AS duration FROM RankedEvents WHERE next_timestamp IS NOT NULL ) SELECT idcase, SUM(duration) AS total_duration FROM DurationEvents GROUP BY idcase;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase;
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ), DurationEvents AS ( SELECT activity, ( strftime('%s', next_timestamp) - strftime('%s', timestamp) ) AS duration FROM RankedEvents WHERE next_timestamp IS NOT NULL ) SELECT idcase, SUM(duration) AS case_duration FROM DurationEvents GROUP BY idcase;
SELECT idcase, ( SELECT MAX(timestamp) FROM event_log WHERE idcase = el.idcase ) - ( SELECT MIN(timestamp) FROM event_log WHERE idcase = el.idcase ) AS duration FROM event_log AS el GROUP BY idcase ORDER BY duration DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31' ORDER BY resource;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e2.timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY activity;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 ON e1.idcase=e2.idcase WHERE e1.activity LIKE '%rejected%' ORDER BY e2.timestamp;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)) AND cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = ( SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1 ) ) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase
SELECT event_log.activity, event_log.cost, event_log.idcase FROM event_log JOIN ( SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING max_cost > 0 ) AS max_cost_subquery ON event_log.idcase = max_cost_subquery.idcase ORDER BY event_log.cost DESC;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE max_cost > 0 GROUP BY idcase
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' OR activity = 'Payment handled' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' OR activity = 'Payment handled' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled' FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' OR activity = 'Payment handled' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' OR activity = 'Payment handled' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', CASE WHEN p.activity = 'End trip' THEN 'End trip' WHEN x.activity = 'Declaration rejected by employee' THEN 'Declaration rejected by employee' WHEN y.activity = 'Payment handled' THEN 'Payment handled' END AS 'Final activity' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled', p.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled';
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS elapsed_time FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled')
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'End trip', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaration rejected by employee', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Payment handled' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'End trip' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT * FROM event_log WHERE activity = 'Request payment';
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' )
SELECT e.cost, e.activity, e.idcase FROM event_log AS e ORDER BY e.cost DESC;
SELECT activity, AVG(duration) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(duration) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(duration) AS mean_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(duration) AS avg_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(duration) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - timestamp) AS avg_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - strftime('%s', start_time)) AS avg_duration FROM event_log JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) AS start_times ON event_log.idcase = start_times.idcase WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY activity
SELECT "idcase" FROM "event_log" WHERE "cost" = (SELECT MAX("cost") FROM "event_log");
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT "idcase" FROM "event_log" WHERE "cost" = (SELECT MAX("cost") FROM "event_log");
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase ORDER BY max_cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost IN ( SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5 );
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT id, activity, resource, cost FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT activity FROM event_log WHERE cost = ( SELECT MAX(cost) FROM event_log );
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity = 'Start trip';
SELECT COUNT(*) AS "Total Records", activity AS "Activity" FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Total Performances", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Number of Occurrences", activity FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Number of Performances", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT count(id), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "Number of Events", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT count(*) AS "Number of Occurrences", activity FROM event_log GROUP BY activity
SELECT COUNT(*) AS "Number of Performances", activity FROM event_log GROUP BY activity;
SELECT activity, count(*) AS num_interventions FROM event_log GROUP BY activity ORDER BY num_interventions DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity ORDER BY num_interventions DESC;
SELECT activity, COUNT(*) AS num_interventions FROM event_log WHERE activity IN ( 'Declaration received', 'Declaration analyzed', 'Declaration approved by analyst', 'Declaration rejected by analyst', 'Declaration approved by director', 'Declaration rejected by director' ) GROUP BY activity;
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_interventions FROM event_log WHERE activity IN ( 'Declaration received', 'Declaration assigned to analyst', 'Declaration analyzed', 'Declaration approved by analyst', 'Declaration rejected by analyst', 'Declaration approved by director', 'Declaration rejected by director' ) GROUP BY activity;
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity ORDER BY total_cost DESC;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT * FROM event_log WHERE activity = 'Permit'
SELECT * FROM event_log WHERE activity = 'permit';
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT * FROM event_log WHERE activity LIKE '%permit%'
SELECT event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity LIKE '%permit%' ORDER BY event_log.timestamp;
SELECT activity, resource, cost, idcase FROM event_log WHERE activity LIKE 'Permit%'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity LIKE 'Permit%'
SELECT event_log.activity FROM event_log JOIN event_log AS permit_log ON event_log.idcase = permit_log.idcase WHERE event_log.activity LIKE '%declaration%' AND permit_log.activity LIKE '%permit%'
SELECT activity, timestamp, resource, cost FROM event_log WHERE activity LIKE '%permit%' AND idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaration%' )
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log where resource = 'Sara' OR resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas';
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource;
SELECT COUNT(*) AS "Number of Activities", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Activities", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource;
SELECT COUNT(*) AS "Number of Events", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource;
SELECT COUNT(*) AS "Number of Rejections", resource AS "Employee Name", idcase AS "Case ID" FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource ORDER BY "Number of Rejections" DESC;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*) AS "Number of Occurrences", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource ORDER BY "Number of Occurrences" DESC;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaration processed') GROUP BY resource;
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG (cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start Trip', 'End Trip');
SELECT activity, timestamp, resource, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, timestamp, resource, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT id, activity, "timestamp", resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT cost, activity FROM event_log ORDER BY cost DESC LIMIT 5
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING count > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02' ) ORDER BY timestamp;
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02' AND activity LIKE '%intervention%';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity, timestamp, cost, idcase FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity, idcase, COUNT(*) AS count FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3 ORDER BY idcase, count DESC;
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT count(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300'
SELECT count(*) FROM event_log WHERE idcase = '56300'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 ) AND timestamp < '2017-10-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS num_events FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY num_events DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT resource,COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource,COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_process_instances FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Number of Interventions", resource FROM event_log WHERE activity LIKE '%intervention%' GROUP BY resource;
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' AND activity LIKE '%intervention%' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%intervention%' AND resource NOT IN ('Joshua', 'Teresa') )
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Intervention' AND e1.resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Start trip' OR activity = 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT e.idcase FROM event_log AS e LEFT JOIN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') ) AS r ON e.idcase = r.idcase WHERE r.idcase IS NULL AND e.activity IN ('Start activity', 'Complete activity');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled');
SELECT * FROM event_log WHERE resource IS NULL;
SELECT activity FROM event_log WHERE resource IS NULL
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT * FROM event_log WHERE resource IS NULL
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT * FROM event_log WHERE resource IS NULL;
SELECT resource, COUNT(*) AS num_interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01'
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) AND timestamp < '2017-03-01';
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01'
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT DISTINCT(idcase) FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT(idcase) FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Start trip' ) );
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase ) );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01';
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource HAVING num_occurrences > 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5 ORDER BY num_actions DESC;
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY num_actions DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5 ORDER BY num_events DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5) GROUP BY resource HAVING COUNT(DISTINCT idcase) > 1 ORDER BY num_cases DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(*) AS num_interventions FROM event_log GROUP BY resource HAVING num_interventions > 5 AND idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1)
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%declaration%' GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT(idcase)) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%budget holder%' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Approve' AND resource IN ('Eugene', 'Marie');
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667';
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667';
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 76667';
SELECT * FROM event_log WHERE id = 49464 EXCEPT SELECT * FROM event_log WHERE id = 76667;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee';
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING performance_count > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING performance_count > 2 ORDER BY performance_count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count DESC;
SELECT resource, count(*) AS num_occurrences FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING num_occurrences > 2 ORDER BY num_occurrences DESC;
SELECT resource, count(*) AS num_events FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING num_events > 2 ORDER BY num_events DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity = 'Declare' GROUP BY resource HAVING num_declarations > 2 ORDER BY num_declarations DESC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Request payment' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) AS num_resources, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND resource <> 'Christopher' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND resource <> 'Christopher' );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = ( SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Christopher' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE resource <> 'Christopher' );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 AND DATE(timestamp) = DATE('now', '-1 day')
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1 AND MIN(timestamp) = MAX(timestamp)
SELECT COUNT(*) AS "Number of Zero-Cost Events", resource, idcase FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT idcase, resource, COUNT(*) AS num_zero_cost_events FROM event_log WHERE cost = 0 GROUP BY idcase, resource;
SELECT COUNT(*) AS "Number of Zero-Cost Events", resource AS "Resource", idcase AS "Case ID" FROM event_log WHERE cost = 0 GROUP BY resource, idcase ORDER BY resource, idcase;
SELECT COUNT(*) AS "Number of Zero-Cost Events", resource, idcase FROM event_log WHERE cost = 0 GROUP BY resource, idcase
SELECT COUNT(DISTINCT id) AS "Number of Zero-Cost Events", resource, idcase FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS zero_cost_events FROM event_log WHERE cost = 0 GROUP BY resource, idcase HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource ORDER BY interventions_without_cost DESC;
SELECT resource, COUNT(*) AS num_interventions_without_cost FROM event_log WHERE activity = 'intervention' AND cost IS NULL GROUP BY resource;
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity LIKE '%Permit rejected by director%'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity LIKE '%Permit rejected by director%'
SELECT activity FROM event_log WHERE activity LIKE '%rejected by director%'
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day ORDER BY day;
SELECT strftime('%Y-%m-%d', timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY date ORDER BY date;
SELECT event_log.id, event_log.activity, event_log.resource, event_log.cost FROM event_log JOIN employee ON event_log.resource = employee.name WHERE event_log.cost > 1000 AND employee.role IN ('Supervisor', 'Director');
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity;
SELECT event_log.activity, event_log.cost FROM event_log JOIN resource ON event_log.resource = resource.name WHERE event_log.cost > 1000 AND resource.type IN ('supervisor', 'director');
SELECT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%director%') AND cost > 1000;
SELECT event_log.activity FROM event_log JOIN resource ON event_log.resource = resource.name WHERE event_log.cost > 1000 AND resource.role IN ('supervisor', 'director');
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Number of Events", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Number of Events", idcase AS "Process Instance ID" FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) FROM event_log GROUP BY idcase
SELECT COUNT(*) AS "Number of Tasks" FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Tasks" FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_tasks FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", idcase AS "Case ID" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT event_log.activity, event_log.idcase FROM event_log WHERE event_log.resource = 'Alexis' GROUP BY event_log.idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_actions FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permit final approved by supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' );
SELECT COUNT(*) FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Permit final approved by supervisor' AND el2.activity = 'Start trip' AND el1.timestamp < el2.timestamp;
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Permit final approved by supervisor' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permit final approved by supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Permit final approved by supervisor' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Start trip' AND timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' AND idcase = event_log.idcase );
SELECT COUNT(*) FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity LIKE 'Permit%' AND el2.activity = 'Trip start' AND el1.timestamp < el2.timestamp;
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Start trip' AND e1.timestamp < e2.timestamp AND e1.activity = 'Supervisor approval';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' UNION SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-12-12' AND '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Events", resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count_actions FROM event_log GROUP BY resource ORDER BY count_actions DESC;
SELECT count (*), resource FROM event_log group by resource
SELECT COUNT(*) AS "Number of Activities", resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT activity FROM event_log WHERE resource <> 'Virginia' AND activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT DISTINCT activity FROM event_log WHERE resource NOT IN ( SELECT resource FROM event_log WHERE activity LIKE '%Virginia%' );
SELECT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource != 'Virginia';
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667';
SELECT activity FROM event_log WHERE resource = 'Virginia' GROUP BY activity HAVING COUNT(*) = 0;
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejected%'
SELECT AVG(el.cost) FROM event_log AS el JOIN ( SELECT idcase FROM event_log WHERE activity = 'Rejected' ) AS rejected_cases ON el.idcase = rejected_cases.idcase;
SELECT AVG(total_cost) FROM (select SUM(cost) as total_cost, idcase from event_log WHERE activity = 'rejected' group by idcase)
SELECT AVG(el.cost) AS mean_cost FROM event_log AS el WHERE el.idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejected%' );
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'rejected' )
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Reject' );
SELECT AVG(event_log.cost) FROM event_log JOIN travel_declarations ON event_log.idcase = travel_declarations.id WHERE travel_declarations.status = 'rejected';
SELECT e1.idcase, e2.timestamp - e1.timestamp AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Declaration rejected by supervisor' ORDER BY e1.idcase;
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Declaration rejected by supervisor' ORDER BY e1.timestamp;
SELECT e1.idcase, e2.timestamp - e1.timestamp AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Declaration final approved by director';
SELECT e1.idcase, e2.timestamp - e1.timestamp AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Declaration final approved by supervisor' ORDER BY e1.idcase;
SELECT e1.idcase, e2.timestamp - e1.timestamp AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Declaration final approved by supervisor' ORDER BY e1.idcase;
SELECT e.activity, e.timestamp, e.resource, e.cost FROM event_log e WHERE e.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration approved by supervisor' ) ORDER BY e.timestamp;
SELECT e1.idcase, strftime('%s', e1.timestamp) - strftime('%s', e2.timestamp) as 'Time to approve' FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration submitted' ORDER by e2.timestamp
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' ORDER BY e1.resource;
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' ORDER BY e1.resource;
SELECT e1.idcase, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' ORDER BY e1.resource, e1.timestamp;
SELECT event_log.idcase, event_log.timestamp, event_log.resource FROM event_log WHERE event_log.activity = 'End trip' ORDER BY event_log.resource;
SELECT e1.idcase, e1.timestamp, e2.resource AS employee_responsible FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'End trip' ORDER BY e2.resource;
SELECT e1.idcase, e2.timestamp AS end_trip_date, e2.resource AS employee_who_ended_trip FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'End trip' ORDER BY e2.resource;
SELECT COUNT(*) AS "Number of Events", idcase AS "Case ID" FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Event Count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Number of Events", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Number of Events", idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "Number of Actions", idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Intervention' GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT e1.idcase, e1.resource, e1.id, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase, e1.activity
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.id, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp, e2.timestamp AS completion_date FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Send reminder' ORDER BY completion_date;
SELECT e1.idcase, e1.id, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.id, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp;
SELECT e1.idcase, e1.resource, e1.timestamp AS completion_date FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT resource FROM event_log GROUP BY resource ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT resource FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'processing declarations'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'processing declaration';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity = 'Processing Declaration';
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaration%' );
SELECT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity ORDER BY mean_cost;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL GROUP BY idcase HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declare%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT event_log.activity FROM event_log JOIN declarations ON event_log.idcase = declarations.idcase WHERE declarations.type = 'explicit' AND event_log.activity LIKE '%Permit%'
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration of rejection of responsibility of the director'
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC
SELECT resource, count(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) AS "Number of Actions Performed" FROM event_log WHERE resource = 'Peter';
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%request payment%' GROUP BY idcase ORDER BY num_events ASC;
SELECT e.idcase, COUNT(e.id) AS num_events FROM event_log AS e WHERE e.activity = 'Request payment' GROUP BY e.idcase ORDER BY num_events ASC;
SELECT e.idcase, COUNT(e.id) AS event_count FROM event_log AS e WHERE e.activity = 'Request payment' GROUP BY e.idcase ORDER BY event_count ASC;
SELECT e.idcase, COUNT(e.id) AS num_events FROM event_log AS e WHERE e.activity = 'Request payment' GROUP BY e.idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_activities ASC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_actions ASC;
SELECT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp ASC;
SELECT DISTINCT e1.timestamp FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'End trip' OR e1.activity = 'Declaration rejected by employee' ORDER by e2.timestamp
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp
SELECT DISTINCT DATE(timestamp) AS date FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY date ASC;
SELECT timestamp FROM event_log WHERE activity IN ('End trip', 'Closed') ORDER BY timestamp;
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee') ORDER BY date ASC;
SELECT DISTINCT e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' OR e2.activity = 'Declaration rejected by employee' ORDER BY e1.timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('End trip', 'Reject declaration') AND timestamp BETWEEN '2016-01-01' AND '2017-12-31' ORDER BY timestamp;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_activity_performances FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Number of Activities", resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Number of Activity Performances", resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource ORDER BY resource;
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%' AND resource LIKE 'E%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE 'E%'
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost DESC;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee';
SELECT resource FROM event_log WHERE activity = 'saved'
SELECT resource FROM event_log WHERE activity = 'save' GROUP BY resource
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12' AND '2018-04-12';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59'
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12' AND activity IN ( SELECT activity FROM event_log WHERE activity = 'End trip' );
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59' AND activity LIKE '%task%';
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp DESC;
SELECT "id", "activity", "timestamp" FROM "event_log" WHERE "activity" IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY "timestamp" DESC;
SELECT event_log.id, event_log.activity, event_log.timestamp FROM event_log WHERE event_log.activity IN ('Permit final approved by director', 'Declaration final approved by supervisor') ORDER BY event_log.timestamp DESC;
SELECT event_log.id, event_log.activity, event_log.timestamp FROM event_log WHERE event_log.activity LIKE '%permit%' OR event_log.activity LIKE '%declaration%' ORDER BY event_log.timestamp DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT (*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT count(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director'
SELECT id, activity, timestamp FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit final approved by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Final permit approved by director';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'Start trip' AND "resource" LIKE '%s'
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'Start trip' AND "resource" LIKE '%s'
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'Start trip' AND "resource" LIKE '%s'
SELECT DISTINCT DATE(timestamp) FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT DATE(timestamp) FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT resource, activity, SUM(cost) AS total_cost FROM event_log GROUP BY resource, activity
SELECT SUM(cost) FROM event_log WHERE activity = 'Activity A' AND resource = 'Resource B';
SELECT SUM(cost) AS total_cost, activity, resource FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT COUNT(*) FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT COUNT(*) AS "Number of Occurrences", activity FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT COUNT(*) AS "Number of Occurrences", e1.activity AS "Activity" FROM event_log AS e1 WHERE e1.activity IN ('Start trip', 'End trip') GROUP BY e1.activity;
SELECT COUNT(*) FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT COUNT(*) AS "Number of Occurrences" FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT COUNT(*) AS "Number of Occurrences", activity FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY activity;
SELECT COUNT(*) AS "Number of Occurrences" FROM event_log WHERE activity IN ('Start trip', 'End trip');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ('Start trip', 'End trip') GROUP BY idcase HAVING COUNT(*) = 2
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Start trip' AND e2.activity = 'End trip'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3 )
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity LIKE 'Travel declaration%') GROUP BY activity HAVING count > 3 ORDER BY count DESC;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource, MAX(timestamp) AS last_performed_timestamp FROM event_log GROUP BY activity, resource
SELECT activity, resource FROM event_log WHERE id = ( SELECT MAX(id) FROM event_log );
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log);
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log);
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT e1.resource, e1.activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = e1.idcase );
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.resource, e1.timestamp;
SELECT el1.idcase, el1.timestamp, el1.resource AS resource_end_trip, el2.activity, el2.resource AS resource_activity FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.resource, el1.timestamp;
SELECT el1.idcase, el1.timestamp, el1.resource AS resource_end_trip, el2.activity, el2.timestamp, el2.resource AS resource_other_activity FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.resource, el1.timestamp;
SELECT el1.activity AS event_after_end_trip, el1.resource AS resource_after_end_trip, el1.timestamp AS timestamp_after_end_trip, el2.activity AS end_trip_activity, el2.resource AS resource_end_trip, el2.timestamp AS timestamp_end_trip FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.timestamp > el2.timestamp AND el2.activity = 'End trip';
SELECT el1.activity AS "Event after end trip", el1.timestamp AS "Timestamp of event after end trip", el1.resource AS "Resource responsible for event after end trip", el2.activity AS "End trip event", el2.timestamp AS "Timestamp of end trip event", el2.resource AS "Resource responsible for end trip event" FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.timestamp > el2.timestamp AND el2.activity = 'End trip' ORDER BY el1.resource, el1.timestamp;
SELECT el1.idcase, el1.activity, el1.timestamp, el1.resource, el2.resource AS resource_end_trip FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el2.activity = 'End trip' AND el1.timestamp > el2.timestamp ORDER BY el1.idcase, el1.timestamp;
SELECT el.idcase, el.activity, el.timestamp, el.resource FROM event_log AS el JOIN event_log AS el2 ON el.idcase = el2.idcase WHERE el2.activity = 'End trip' AND el.timestamp > el2.timestamp ORDER BY el.idcase, el.timestamp;
SELECT el.idcase, el.activity, el.timestamp, el.resource FROM event_log AS el JOIN event_log AS el2 ON el.idcase = el2.idcase WHERE el2.activity = 'End trip' AND el.timestamp > el2.timestamp ORDER BY el.idcase, el.timestamp;
SELECT el1.activity AS "Event 1", el1.resource AS "Resource 1", el2.activity AS "Event 2", el2.resource AS "Resource 2" FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.resource, el2.timestamp;
SELECT el1.activity AS "Event after end trip", el1.resource AS "Resource after end trip", el1.timestamp AS "Timestamp after end trip" FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el2.activity = 'End trip' AND el1.timestamp > el2.timestamp ORDER BY el1.idcase, el1.timestamp;
SELECT el1.idcase, el1.activity AS end_trip_activity, el1.timestamp AS end_trip_timestamp, el1.resource AS end_trip_resource, el2.activity, el2.timestamp, el2.resource FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el2.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT el1.idcase, el1.timestamp AS end_trip_timestamp, el1.resource AS end_trip_resource, el2.activity, el2.timestamp AS subsequent_event_timestamp, el2.resource AS subsequent_event_resource FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el2.timestamp;
SELECT el1.idcase, el1.timestamp AS end_trip_timestamp, el1.resource AS end_trip_resource, el2.activity, el2.timestamp AS subsequent_event_timestamp, el2.resource AS subsequent_event_resource FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'End trip' AND el2.timestamp > el1.timestamp ORDER BY el1.idcase, el2.timestamp;
SELECT activity, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End of trip registration' ) AND timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'End of trip registration' ) ORDER BY idcase, timestamp;
SELECT el.idcase, el.timestamp, el.activity, el.resource FROM event_log AS el JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'End trip' GROUP BY idcase ) AS et ON el.idcase = et.idcase AND el.timestamp > et.max_timestamp ORDER BY el.resource, el.timestamp;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS "Number of events" FROM event_log WHERE activity <> 'End trip' GROUP BY resource
SELECT COUNT(*) AS "Number of events", resource FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'resource_1' AND activity <> 'End trip';
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS "Number of events" FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS "Number of events", resource AS "Resource" FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) AS event_count FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity <> 'End trip' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT LIKE '%End trip%' AND resource IN ( SELECT resource FROM event_log WHERE activity LIKE '%End trip%' );
SELECT resource, COUNT(*) AS action_count FROM event_log WHERE activity NOT LIKE '%End trip%' GROUP BY resource;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT idcase, MIN(timestamp) AS registration_date FROM event_log GROUP BY idcase ORDER BY registration_date;
SELECT idcase FROM event_log ORDER BY timestamp
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment';
SELECT idcase FROM event_log WHERE activity='Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1
SELECT idcase, MAX(timestamp) FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase ORDER BY MAX(timestamp) DESC LIMIT 1
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY activity_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, count(*) AS num_approvals FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY num_approvals DESC LIMIT 1;
SELECT resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log WHERE activity = ( SELECT activity FROM event_log ORDER BY timestamp LIMIT 1 ) GROUP BY resource;
SELECT resource,COUNT(*) FROM ( SELECT resource,idcase,MIN(timestamp) AS first_timestamp FROM event_log GROUP BY resource,idcase ) GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 ) GROUP BY resource;
SELECT COUNT(*) AS "Number of Times Resource Acted on First Event" FROM event_log WHERE activity = 'Start' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'First Activity' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'First action' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Start' GROUP BY resource
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT DATE(timestamp) AS day, COUNT(*) AS rejected_activities FROM event_log WHERE activity LIKE '%rejected%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_rejected_instances FROM event_log WHERE activity = 'rejected' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS date, COUNT(*) AS num_rejected_activities FROM event_log WHERE activity LIKE '%rejected%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS date, COUNT(*) AS rejected_activity_count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_declarations FROM event_log WHERE activity LIKE '%rejected%' GROUP BY date ORDER BY date;
SELECT COUNT(DISTINCT idcase) AS "Number of Declarations with Rejection Actions" FROM event_log WHERE activity = 'Declaration rejected by director' GROUP BY DATE(timestamp)
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING event_count >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT el.idcase, strftime('%s', MAX(el.timestamp)) - strftime('%s', MIN(el.timestamp)) AS duration FROM event_log AS el GROUP BY el.idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT el.idcase, strftime('%s', MAX(el.timestamp)) - strftime('%s', MIN(el.timestamp)) AS duration FROM event_log AS el WHERE el.idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY el.idcase ORDER BY duration DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time FROM event_log GROUP BY idcase ORDER BY processing_time DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time, COUNT(*) AS num_actions FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(activity) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity <> 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Processing declaration' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT "idcase" FROM "event_log" GROUP BY "idcase" HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Payment handled' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Payment handled';
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%payment handled%' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%payment handled%' AND timestamp < '2018-01-01'
SELECT AVG (cost) FROM event_log WHERE activity LIKE '%payment%' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT COUNT(id) FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permit_activities FROM event_log WHERE activity LIKE '%Permit%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration approved by supervisor' AND e2.activity = 'Permit final approved by director';
SELECT count(*) FROM event_log WHERE activity LIKE '%permit%' GROUP BY idcase
SELECT e1.idcase, e1.resource FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER BY e2.timestamp;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", GROUP_CONCAT(DISTINCT resource) AS "Resources" FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource ORDER BY "Number of Cases" DESC;
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Number of Occurrences", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS num_cases, resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", resource AS "Resource" FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Number of Declarations Rejected", resource AS "Supervisor" FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT e1.idcase) AS "Number of Declarations Rejected", e1.resource AS "Supervisor" FROM event_log AS e1 JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' GROUP BY e1.resource ORDER BY "Number of Declarations Rejected" DESC;
SELECT COUNT(DISTINCT idcase) AS case_count, activity FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", activity FROM event_log GROUP BY activity;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", activity FROM event_log GROUP BY activity;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_declarations FROM event_log GROUP BY activity ORDER BY num_declarations DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT e1.id FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'R%' AND e2.activity LIKE 'D%' AND e1.timestamp > e2.timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT e1.activity AS "action_after" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e1.activity LIKE 'R%' AND e2.activity LIKE 'D%';
SELECT activity FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY count DESC;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY activity, resource;
SELECT COUNT(*) AS "Number of Activities Performed", resource AS "Resource" FROM event_log GROUP BY resource ORDER BY "Number of Activities Performed" DESC;
SELECT resource, activity, COUNT(*) AS count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY activity, count DESC;
SELECT COUNT(*), resource, activity FROM event_log GROUP BY resource, activity
SELECT COUNT(DISTINCT event_log.id) AS "Number of Times Activity Performed", event_log.activity AS "Activity", employee.university AS "University" FROM event_log JOIN employee ON event_log.resource = employee.id GROUP BY event_log.activity, employee.university ORDER BY "Number of Times Activity Performed" DESC;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-03-12' ) GROUP BY activity;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE resource = 'Wayne' GROUP BY resource ORDER BY event_count DESC;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase ) AND timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp = '2018-03-12' ) GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp >= '2018-03-12' AND timestamp < '2018-03-13' ) GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-12' ) GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase ) AND timestamp BETWEEN '2018-03-12' AND '2018-03-12' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' ) GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp < '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE activity LIKE 'Permit%' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' AND sequence_number = 1;
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%Permit%' AND id IN (SELECT id FROM event_log WHERE activity = 'Start trip')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permit' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity IN ('Request payment', 'Payment handled') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' ) AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity NOT IN ('Request payment', 'Payment handled') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Payment handled', 'Request payment') );
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Payment handled' AND e.timestamp > e1.start_date;
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY event_log.timestamp, event_log.resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp ASC, resource ASC;
SELECT activity, timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT timestamp, resource FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT event_log.activity, event_log.timestamp, event_log.resource, event_log.cost, event_log.idcase FROM event_log WHERE event_log.activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY event_log.timestamp, event_log.resource;
SELECT e1.activity, e1.resource, e1.timestamp, e1.cost, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Initiate travel' OR e2.activity = 'Request declaration' ORDER BY e1.timestamp, e1.resource;
SELECT e1.activity, e1.resource, e1.timestamp, e2.activity AS start_activity, e2.resource AS start_resource, e2.timestamp AS start_timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity IN ('Start trip', 'Request from employee') ORDER BY e2.timestamp ASC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count_of_declarations FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING performance_count > 2 ORDER BY performance_count DESC;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Save travel declaration' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count_saves FROM event_log WHERE activity = 'save' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY activity ORDER BY num_instances DESC;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", activity FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource,COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Different Actions", resource AS "Employee" FROM event_log GROUP BY resource ORDER BY "Number of Different Actions" DESC;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT event_log.id), event_log.resource FROM event_log JOIN activity_type ON event_log.activity = activity_type.activity WHERE activity_type.type = 'completion' GROUP BY event_log.resource;
SELECT COUNT(*) AS "Number of Final Activities", resource FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Number of Times", resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'Employee A' AND activity IN ('End of Trip', 'Payment');
SELECT COUNT(*) AS "Number of Completion Activities", resource FROM event_log WHERE activity IN ('End trip', 'Make payment') GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS count_first_occurrences FROM ( SELECT resource, activity, ROW_NUMBER() OVER (PARTITION BY resource ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaration rejected by pre-approver' ) AS subquery WHERE row_num = 1 GROUP BY resource;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT COUNT(*) AS "Number of Occurrences", resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND id IN ( SELECT MIN(id) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY idcase ) GROUP BY resource
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaration rejected by pre-approver' ) AS subquery WHERE row_num = 1 GROUP BY resource;
SELECT count(*), resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT resource, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Declaration rejected' AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Declaration submitted' ) GROUP BY resource
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'End trip' GROUP BY idcase;
SELECT idcase, COUNT(*) AS activity_occurrences FROM event_log WHERE activity <> 'End trip' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'End trip' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_events_before_end_trip FROM event_log WHERE activity <> 'End trip' GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' )
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' )
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE activity != 'End trip' GROUP BY resource;
SELECT COUNT(*) AS "Number of events" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) GROUP BY idcase ORDER BY "Number of events" DESC;
SELECT count(DISTINCT activity) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'End trip')
SELECT e1.idcase, COUNT(*) AS num_actions FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Start trip' AND e2.activity = 'End trip' GROUP BY e1.idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31' GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT event_log.idcase, event_log.timestamp FROM event_log JOIN ( SELECT idcase, MIN(timestamp) AS start_timestamp FROM event_log WHERE activity = 'Case started' GROUP BY idcase ) AS case_start ON event_log.idcase = case_start.idcase WHERE event_log.activity = 'Declaration rejected by supervisor' ORDER BY event_log.timestamp;
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp
SELECT idcase, MIN(timestamp) AS start_timestamp FROM event_log WHERE activity = 'Process started' GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp
SELECT idcase, activity, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'Rejection by supervisor' ORDER BY MIN(timestamp)
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration submitted' AND e2.activity = 'Declaration rejected by supervisor' ORDER BY e1.timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-01' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp < '2018-03-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp < '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 );
SELECT idcase FROM event_log WHERE activity = 'End trip' AND NOT activity IN ('Request payment', 'Payment handled') AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) AND activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT idcase FROM event_log WHERE activity = 'Declaration finalized' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') );
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource), SUM(cost) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_people_involved, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT CASE WHEN activity LIKE 'Permit%' THEN activity ELSE NULL END) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT CASE WHEN activity LIKE 'Permit%' THEN activity ELSE NULL END) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT CASE WHEN activity LIKE 'Permit%' THEN 1 ELSE NULL END) >= 2;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT e1.activity AS permit_activity, e2.activity AS declaration_activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE '%permit%' AND e2.activity LIKE '%declaration%';
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT id FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase ) ORDER BY timestamp;
SELECT idcase, MAX(timestamp) AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp;
SELECT id FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase ) ORDER BY timestamp;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) ) ORDER BY timestamp;
SELECT idcase, MAX(id) AS last_event_id FROM event_log GROUP BY idcase ORDER BY timestamp DESC;
SELECT id FROM event_log ORDER BY timestamp DESC
SELECT idcase, GROUP_CONCAT(activity ORDER BY timestamp DESC) AS last_events FROM event_log GROUP BY idcase;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY timestamp DESC ) ORDER BY timestamp DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", CASE WHEN activity LIKE '%employee%' THEN 'Employee' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administration%' THEN 'Administration' WHEN activity LIKE '%pre-approver%' THEN 'Pre-Approver' WHEN activity LIKE '%budget owner%' THEN 'Budget Owner' WHEN activity LIKE '%director%' THEN 'Director' ELSE 'Other' END AS "Employee Group" FROM event_log GROUP BY "Employee Group" ORDER BY "Number of Cases" DESC;
SELECT COUNT(DISTINCT idcase) AS num_cases, CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' ELSE 'other' END AS employee_group FROM event_log GROUP BY employee_group ORDER BY num_cases DESC;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", CASE WHEN activity LIKE '%employee%' THEN 'Employee' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administration%' THEN 'Administration' WHEN activity LIKE '%pre-approver%' THEN 'Pre-Approver' WHEN activity LIKE '%budget owner%' THEN 'Budget Owner' WHEN activity LIKE '%director%' THEN 'Director' ELSE 'Other' END AS "Employee Group" FROM event_log GROUP BY "Employee Group" ORDER BY "Number of Cases" DESC;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%employee%' UNION SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%administration%' UNION SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%pre-approver%' UNION SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%budget owner%' UNION SELECT COUNT(DISTINCT idcase) AS "Number of Cases" FROM event_log WHERE activity LIKE '%director%' ORDER BY "Number of Cases" DESC;
SELECT COUNT(DISTINCT idcase) AS num_declarations, CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' ELSE 'other' END AS employee_group FROM event_log GROUP BY employee_group ORDER BY num_declarations DESC;
SELECT activity, COUNT(*) AS activity_count FROM event_log WHERE resource IN ( SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC ) GROUP BY activity ORDER BY CASE WHEN activity LIKE '%employee%' THEN 1 WHEN activity LIKE '%supervisor%' THEN 2 WHEN activity LIKE '%administration%' THEN 3 WHEN activity LIKE '%pre-approver%' THEN 4 WHEN activity LIKE '%budget owner%' THEN 5 WHEN activity LIKE '%director%' THEN 6 ELSE 7 END, activity_count DESC;
SELECT activity, COUNT(*) AS num_activities FROM event_log WHERE resource IN ( SELECT resource FROM event_log WHERE activity LIKE '%employee%' UNION SELECT resource FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT resource FROM event_log WHERE activity LIKE '%administration%' UNION SELECT resource FROM event_log WHERE activity LIKE '%pre-approver%' UNION SELECT resource FROM event_log WHERE activity LIKE '%budget owner%' UNION SELECT resource FROM event_log WHERE activity LIKE '%director%' ) GROUP BY activity ORDER BY num_activities DESC;
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", CASE WHEN activity LIKE '%employee%' THEN 'Employee' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administration%' THEN 'Administration' WHEN activity LIKE '%pre-approver%' THEN 'Pre-Approver' WHEN activity LIKE '%budget owner%' THEN 'Budget Owner' WHEN activity LIKE '%director%' THEN 'Director' ELSE 'Other' END AS "Group" FROM event_log GROUP BY "Group" ORDER BY "Number of Cases" DESC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT idcase FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'End trip' AND idcase = event_log.idcase );
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log WHERE timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'End trip' ) );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(*) FROM event_log WHERE activity = 'Send reminder' AND resource = 'Declaration';
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' EXCEPT SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31';
SELECT resource FROM event_log WHERE resource NOT IN ( SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' );
SELECT resource FROM event_log WHERE NOT resource IN ( SELECT resource FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-31' );
SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND activity = 'Idle' GROUP BY resource
SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND activity = 'Idle' GROUP BY resource HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' AND resource = event_log.resource );
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' GROUP BY resource HAVING COUNT(DISTINCT idcase) = 0;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS performance_frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS count_of_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Payment handled' AND cost IS NULL;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Payment handled'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Payment handled' );
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_distinct_resources FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Send reminder' );
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp;
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Send reminder' ) ORDER BY activity;
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC;
SELECT event_count, COUNT(*) AS case_count FROM ( SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ) GROUP BY event_count;
SELECT count(*) AS "Number of Events", idcase FROM event_log GROUP BY idcase ORDER BY "Number of Events" DESC;
SELECT count(*) AS "Number of Cases", count(DISTINCT idcase) AS "Number of Distinct Cases" FROM event_log GROUP BY count(*)
SELECT COUNT(DISTINCT activity) AS "Number of Actions", COUNT(DISTINCT idcase) AS "Number of Declarations" FROM event_log GROUP BY idcase
SELECT AVG (SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG (SUM (cost)) FROM event_log GROUP BY idcase
SELECT AVG (SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG (SUM (cost)) FROM event_log GROUP BY idcase
SELECT AVG (SUM (cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) FROM event_log GROUP BY resource;
SELECT AVG(el.cost) AS mean_cost FROM event_log AS el JOIN employee AS e ON el.idcase = e.idcase GROUP BY e.idcase;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp), count(*) FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT COUNT(*), DATE(timestamp) AS day FROM event_log GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS date, COUNT(*) AS num_actions FROM event_log GROUP BY date ORDER BY date;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND MIN(timestamp) OVER (PARTITION BY idcase, activity) <> MAX(timestamp) OVER (PARTITION BY idcase, activity);
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND MIN(timestamp) = MAX(timestamp) - INTERVAL '1 second'
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_preceding_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS interventions_before_final_approval FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase;
SELECT event_log1.timestamp AS permit_submitted_timestamp, event_log2.timestamp AS permit_approved_timestamp, ( event_log2.timestamp - event_log1.timestamp ) AS time_between_activities FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity = 'Permit submitted by employee' AND event_log2.activity = 'Permit approved by administration';
SELECT event_log1.timestamp AS permit_submitted_timestamp, event_log2.timestamp AS permit_approved_timestamp, ( event_log2.timestamp - event_log1.timestamp ) AS time_interval FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity = 'Permit submitted by employee' AND event_log2.activity = 'Permit approved by administration';
SELECT e.idcase, strftime('%s', a.timestamp) - strftime('%s', e.timestamp) AS "Time between permit request and approval" FROM event_log e JOIN event_log a ON e.idcase = a.idcase WHERE e.activity = 'Permit requested by employee' AND a.activity = 'Permit approved by administration';
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) WHERE activity = next_activity;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT idcase FROM event_log WHERE activity LIKE '%Rework%'
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity AND activity LIKE '%rework%'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1
SELECT idcase, GROUP_CONCAT(activity ORDER BY timestamp) AS activity_sequence FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 AND COUNT(DISTINCT activity) > 3;
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log ) AS subquery WHERE activity = 'Intervention' AND row_num > 1 AND row_num - 1 IN ( SELECT row_num FROM subquery WHERE activity = 'Intervention' );
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor';
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervise%'
SELECT resource FROM event_log WHERE activity = 'Budget approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1
SELECT DISTINCT(resource) from event_log where activity like '%budget owner%'
