SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'End trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'end trip';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip';
SELECT count(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'end trip' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'End trip' AND resource = 'James'
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_actions, COUNT(DISTINCT activity) AS unique_actions FROM event_log WHERE activity LIKE '%travel declaration%' GROUP BY resource ORDER BY total_actions DESC;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter' AND activity LIKE '%travel declaration%'
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' AND strftime('%d', timestamp) = '31'
SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-03' AND strftime('%d', timestamp) = '31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2018-03-01' AND '2018-04-01'
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' AND activity = 'end'
SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', MAX(timestamp)) = '2018-03'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log WHERE activity = 'End' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log WHERE timestamp LIKE '%2018-03-%' GROUP BY idcase HAVING MAX(timestamp) LIKE '%2018-03-%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND resource!= 'Douglas'
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT idcase) AS "Number of different people" FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT idcase) AS num_people FROM event_log;
SELECT COUNT(DISTINCT resource) as total_employees FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%processing%'
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) as total_actions FROM event_log GROUP BY resource
SELECT * FROM event_log WHERE cost > 2225 AND idcase IN ( SELECT idcase FROM event_log WHERE cost > 2225 GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT DISTINCT idcase FROM event_log WHERE cost > 2225
SELECT idcase FROM event_log WHERE cost > 2225;
SELECT idcase FROM event_log WHERE cost > 2225
SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 2225
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) as total_time FROM event_log WHERE activity LIKE '%processing declarations%' GROUP BY resource ORDER BY total_time DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(DISTINCT idcase) as total_actions FROM event_log GROUP BY resource ORDER BY total_actions DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource ORDER BY num_performances DESC;
SELECT resource, COUNT(*) as total_declarations FROM event_log WHERE activity LIKE '%Declaration%' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT * FROM event_log WHERE cost <> 0;
SELECT * FROM event_log WHERE cost!= 0;
SELECT * FROM event_log WHERE cost <> 0;
SELECT COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)
SELECT * FROM event_log WHERE cost <> 0;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Request payment'
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity ='request payment';
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity ='request payment' ORDER BY timestamp, resource
SELECT * FROM event_log WHERE activity IN ('start trip','request payment');
SELECT DISTINCT idcase from event_log WHERE (activity = 'Start trip' OR activity = 'End trip') and idcase NOT IN (SELECT idcase from event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase from event_log WHERE activity = 'Payment handled')
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) desc LIMIT 1)
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT DISTINCT activity FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT DISTINCT activity, timestamp FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017;
SELECT * FROM event_log WHERE timestamp >= '2017-01-01' AND timestamp < '2018-01-01' AND idcase LIKE '%declaration%'
SELECT activity, timestamp, resource, cost FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' ORDER BY timestamp;
SELECT * FROM event_log WHERE idcase LIKE 'declaration%' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT activity, COUNT(*) as count FROM event_log WHERE strftime('%Y', timestamp) = '2017' GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) as count FROM event_log WHERE strftime('%Y', timestamp) = '2017' GROUP BY activity ORDER BY count DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5;
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 )
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource ORDER BY num_cases DESC LIMIT 5;
SELECT resource, COUNT(*) as num_declarations FROM event_log GROUP BY resource ORDER BY num_declarations DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource, COUNT(*) as total_time FROM event_log GROUP BY resource ORDER BY total_time DESC LIMIT 5;
SELECT resource, COUNT(*) as count FROM event_log WHERE strftime('%Y', timestamp) = '2016' AND activity = 'Start trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE strftime('%Y', timestamp) = '2016' AND activity = 'Start trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity ='start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity ='start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity ='start trip' AND EXTRACT(YEAR FROM timestamp) = 2016 GROUP BY resource
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity ='start trip' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2016-01-01' AND timestamp < '2017-01-01' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Start trip' AND timestamp LIKE '2016%' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5)) GROUP BY idcase;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' )
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity ='request payment')
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' )
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') AND resource = 'Sara';
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity = 'Start trip' OR activity = 'End trip' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598';
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01' ORDER BY timestamp;
SELECT * FROM event_log WHERE idcase = 'declaration 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaration 143598'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase ORDER BY count DESC LIMIT 10;
SELECT idcase, COUNT(*) as total_activities FROM event_log GROUP BY idcase ORDER BY total_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(*) as activity_count FROM event_log GROUP BY idcase ORDER BY activity_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as count FROM event_log GROUP BY idcase ORDER BY count DESC LIMIT 10;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY idcase DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY idcase DESC;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase, COUNT(*) as event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase, COUNT(*) as num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) ORDER BY idcase DESC;
SELECT COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource), SUM(cost), idcase FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT SUM(cost) as total_cost, idcase FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT resource, COUNT(*) as num_events FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY frequency DESC;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, MIN(timestamp)
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, MIN(timestamp)
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT idcase, MIN(timestamp) AS start_date, id FROM event_log GROUP BY idcase ORDER BY idcase, start_date;
SELECT idcase, MIN(timestamp) AS start_date, activity FROM event_log GROUP BY idcase ORDER BY idcase, start_date;
SELECT idcase, timestamp, activity, resource, cost FROM event_log ORDER BY idcase, timestamp;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT resource, COUNT(*) AS total_count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT resource, COUNT(*) AS total_events FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource;
SELECT count(*), resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource
SELECT activity, count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp >= '2017-01-01' AND timestamp < '2018-01-01' GROUP BY activity ORDER BY COUNT(*) DESC;
SELECT activity, COUNT(*) AS occurrences FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE idcase LIKE '%Thomas%' AND strftime('%Y', timestamp) = '2017' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT SUM(cost) AS total_cost FROM event_log WHERE EXTRACT(YEAR FROM timestamp) = 2017 AND resource = 'Thomas' AND activity LIKE '%Declaration%';
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS most_recent_performance_date FROM event_log GROUP BY activity ORDER BY activity;
SELECT idcase, MAX(timestamp) as last_performance FROM event_log GROUP BY idcase
SELECT activity, MAX(timestamp) as latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity
SELECT activity, MAX(timestamp) AS most_recent_date FROM event_log GROUP BY activity
SELECT MAX(timestamp) AS last_timestamp, activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE (activity = 'declaration approved by supervisor' AND timestamp >= '2017-01-01' AND timestamp < '2019-01-01') OR (activity = 'permit rejected by employee' AND timestamp >= '2018-01-01' AND timestamp < '2020-01-01')
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017 THEN 1 ELSE 0 END) AS declaration_approved_2017, SUM(CASE WHEN activity = 'permit rejected by employee' AND EXTRACT(YEAR FROM timestamp) = 2018 THEN 1 ELSE 0 END) AS permit_rejected_2018 FROM event_log;
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND EXTRACT(YEAR FROM timestamp) = 2017 THEN 1 ELSE 0 END) AS declaration_approved_by_supervisor_2017, SUM(CASE WHEN activity = 'permit rejected by employee' AND EXTRACT(YEAR FROM timestamp) = 2018 THEN 1 ELSE 0 END) AS permit_rejected_by_employee_2018 FROM event_log
SELECT SUM(CASE WHEN activity = 'declaration approved by supervisor' AND YEAR(timestamp) = 2017 THEN 1 ELSE 0 END) AS declaration_approved_2017, SUM(CASE WHEN activity = 'permit rejected by employee' AND YEAR(timestamp) = 2018 THEN 1 ELSE 0 END) AS permit_rejected_2018 FROM event_log
SELECT COUNT(CASE WHEN activity = 'Declaration approved by supervisor' AND timestamp LIKE '2017%' THEN 1 ELSE NULL END) AS 'Declaration approved by supervisor in 2017', COUNT(CASE WHEN activity = 'Permit rejected by employee' AND timestamp LIKE '2018%' THEN 1 ELSE NULL END) AS 'Permit rejected by employee in 2018' FROM event_log
SELECT SUM(CASE WHEN activity = 'Declaration approved by supervisor' AND timestamp LIKE '2017%' THEN 1 ELSE 0 END) AS 'Declaration approvals in 2017', SUM(CASE WHEN activity = 'Declaration rejected by employee' AND timestamp LIKE '2018%' THEN 1 ELSE 0 END) AS 'Permits rejected by employee in 2018' FROM event_log WHERE activity IN ('Declaration approved by supervisor', 'Declaration rejected by employee')
SELECT activity, MAX(timestamp) AS "performance_end_date", idcase FROM event_log GROUP BY activity, idcase ORDER BY MAX(timestamp) DESC;
SELECT activity, MAX(timestamp) as end_date, id FROM event_log GROUP BY activity, id ORDER BY end_date;
SELECT activity, timestamp AS "performance_end_date", id AS "action_identifier" FROM event_log WHERE activity LIKE '%declaration%' ORDER BY timestamp;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaration submitted by employee' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration submitted by employee' AND resource = 'Thomas'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaration submitted by employee' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration submitted by employee' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity LIKE '%declaration%'
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT * FROM event_log WHERE resource = 'Diana' AND idcase LIKE '%declaration%' AND cost IS NOT NULL;
SELECT activity, count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, count(*) as num_events FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)
SELECT COUNT(DISTINCT resource) AS num_employees FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND EXTRACT(MONTH FROM timestamp) BETWEEN 1 AND 5 AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration final approved by director' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp)!= '2018-01' GROUP BY idcase HAVING COUNT(CASE WHEN strftime('%Y-%m', timestamp) = '2018-01' THEN 1 ELSE NULL END) = 0
SELECT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' )
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' GROUP BY idcase HAVING COUNT(*) = 0 ) AND resource = 'Charles';
SELECT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) as num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log GROUP BY idcase
SELECT idcase, SUM((strftime('%s', next_timestamp) - strftime('%s', timestamp))) as total_time FROM ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) AS RankedEvents WHERE next_timestamp IS NOT NULL GROUP BY idcase
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase
WITH RankedEvents AS ( SELECT idcase, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log ), DurationCases AS ( SELECT idcase, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL ) SELECT idcase, AVG(duration) AS average_duration FROM DurationCases GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp)) AS duration FROM event_log GROUP BY idcase
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ), DurationEvents AS ( SELECT idcase, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL ) SELECT idcase, AVG(duration) AS average_duration FROM DurationEvents GROUP BY idcase
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31' GROUP BY idcase HAVING COUNT(*) > 1
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017'
SELECT idcase FROM event_log WHERE activity = 'end trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017' ORDER BY resource;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017'
SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01 00:00:00' AND '2017-12-31 23:59:59' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%';
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity LIKE '%rejected%'
SELECT * FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT activity, COUNT(*) as num_interventions, SUM(cost) as total_cost FROM event_log WHERE activity LIKE '%rejected%' GROUP BY activity ORDER BY num_interventions DESC;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase HAVING MAX(cost) > 0
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Time to End Trip or Declaration Rejected or Payment Handled', f.activity FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity IN ('End Trip', 'Declaration Rejected by Employee', 'Payment Handled') LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity IN ('End Trip', 'Declaration Rejected by Employee', 'Payment Handled') INNER JOIN (SELECT MAX(timestamp) as end_time, activity, idcase FROM event_log WHERE activity IN ('End Trip', 'Declaration Rejected by Employee', 'Payment Handled') GROUP BY idcase) f ON f.idcase = e.idcase AND f.end_time = COALESCE(x.timestamp, y.timestamp) ORDER BY p.idcase;
SELECT el1.idcase, TIMESTAMPDIFF(SECOND, el1.timestamp, el3.timestamp) AS 'Time to End Trip', TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS 'Time to Declaration Rejected', TIMESTAMPDIFF(SECOND, el1.timestamp, el4.timestamp) AS 'Time to Payment Handled', el3.activity AS 'End Activity' FROM event_log el1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp = el2.start_time LEFT JOIN event_log el2a ON el2a.idcase = el1.idcase AND el2a.activity = 'Declaration rejected by employee' LEFT JOIN event_log el2b ON el2b.idcase = el1.idcase AND el2b.activity = 'Payment handled' INNER JOIN ( SELECT idcase, MAX(timestamp) AS end_time, activity FROM event_log WHERE activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') GROUP BY idcase, activity ) el3 ON el1.idcase = el3.idcase AND el1.timestamp <= el3.end_time LEFT JOIN event_log el4 ON el4.idcase = el1.idcase AND el4.activity = el3.activity ORDER BY el1.idcase;
SELECT idcase, activity, strftime('%s', timestamp) - (SELECT MIN(timestamp) FROM event_log WHERE idcase = e.idcase) AS elapsed_time FROM event_log e WHERE activity IN ('end trip', 'declaration rejected by employee', 'payment handled') GROUP BY idcase, activity ORDER BY idcase;
SELECT idcase, strftime('%s', MAX(CASE WHEN activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') THEN timestamp ELSE NULL END)) - strftime('%s', MIN(timestamp)) AS 'Time taken' FROM event_log GROUP BY idcase
SELECT el1.idcase, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS 'Time to End Trip', TIMESTAMPDIFF(SECOND, el1.timestamp, el3.timestamp) AS 'Time to Declaration Rejected', TIMESTAMPDIFF(SECOND, el1.timestamp, el4.timestamp) AS 'Time to Payment Handled', el2.activity AS 'End Trip Activity' FROM (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) AS el1 INNER JOIN event_log el2 ON el1.idcase = el2.idcase AND el2.activity = 'End Trip' LEFT JOIN event_log el3 ON el1.idcase = el3.idcase AND el3.activity = 'Declaration Rejected by Employee' LEFT JOIN event_log el4 ON el1.idcase = el4.idcase AND el4.activity = 'Payment Handled' WHERE el1.idcase = el2.idcase OR el1.idcase = el3.idcase OR el1.idcase = el4.idcase ORDER BY el1.idcase;
SELECT p.idcase, (strftime('%s', p.timestamp) - strftime('%s', e.start_time)) as 'Time to End Trip', (strftime('%s', COALESCE(x.timestamp, y.timestamp)) - strftime('%s', e.start_time')) as 'Time to Declaration Rejected or Payment Handled', CASE WHEN x.timestamp IS NOT NULL THEN 'Declaration Rejected by Employee' WHEN y.timestamp IS NOT NULL THEN 'Payment Handled' ELSE 'End Trip' END as 'Final Activity' FROM event_log p INNER JOIN (SELECT MIN(timestamp) as start_time, idcase FROM event_log GROUP by idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' WHERE p.activity = 'End trip' OR x.timestamp IS NOT NULL OR y.timestamp IS NOT NULL ORDER BY p.idcase;
SELECT el.idcase, el.activity, strftime('%s', el.timestamp) - strftime('%s', e.start_time) as time_elapsed FROM event_log el INNER JOIN ( SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase ) e ON el.idcase = e.idcase AND el.timestamp >= e.start_time WHERE el.activity IN ('end trip', 'declaration rejected by employee', 'payment handled') ORDER BY el.idcase, time_elapsed;
SELECT p.idcase, p.activity, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Time Elapsed', p.activity as 'Activity at End of Interval' FROM event_log p INNER JOIN (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase WHERE p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') ORDER BY p.idcase, p.timestamp;
SELECT p.idcase, CASE WHEN p.activity = 'End trip' THEN strftime('%s', p.timestamp) - strftime('%s', e.start_time) WHEN x.activity = 'Declaration rejected by employee' THEN strftime('%s', x.timestamp) - strftime('%s', e.start_time) WHEN y.activity = 'Payment handled' THEN strftime('%s', y.timestamp) - strftime('%s', e.start_time) END AS elapsed_time, CASE WHEN p.activity = 'End trip' THEN 'End trip' WHEN x.activity = 'Declaration rejected by employee' THEN 'Declaration rejected by employee' WHEN y.activity = 'Payment handled' THEN 'Payment handled' END AS activity_of_interest FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaration rejected by employee' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Payment handled' ORDER BY p.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) as 'Duration' FROM event_log p INNER JOIN (SELECT idcase, MIN(timestamp) as start_time FROM event_log GROUP by idcase) e ON e.idcase = p.idcase AND p.activity IN ('End trip', 'Declaration rejected by employee', 'Payment handled') AND p.timestamp >= e.start_time ORDER BY p.idcase;
SELECT idcase FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT * FROM event_log WHERE activity ='request payment';
SELECT idcase, activity, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' ) AND activity = 'Payment handled'
SELECT activity, COUNT(*) AS num_interventions, SUM(cost) AS total_cost FROM event_log WHERE activity = 'Request payment' GROUP BY activity ORDER BY total_cost DESC;
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, timestamp, timestamp)) AS mean_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity;
SELECT activity, AVG(DATEDIFF(timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(DATEDIFF(SECOND, timestamp, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp))) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, timestamp, timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration_time FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, timestamp, timestamp)) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_duration FROM event_log GROUP BY activity
SELECT activity, AVG(duration) AS average_duration FROM ( SELECT activity, timestamp, LAG(timestamp) OVER (ORDER BY timestamp) AS previous_timestamp, timestamp - LAG(timestamp) OVER (ORDER BY timestamp) AS duration FROM event_log ) AS subquery GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, timestamp, timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(TIMESTAMPDIFF(SECOND, LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp), timestamp)) AS average_duration FROM event_log GROUP BY activity
SELECT activity, AVG(strftime('%s', timestamp) - MIN(strftime('%s', timestamp))) as 'Average duration' FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE idcase = (SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log))
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase ORDER BY max_cost DESC;
SELECT idcase, MAX(cost) AS max_cost FROM event_log GROUP BY idcase HAVING MAX(cost) = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, SUM(cost) AS total_cost FROM event_log WHERE cost IS NOT NULL GROUP BY idcase ORDER BY total_cost DESC LIMIT 1;
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost IN (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip'
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') where activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
select DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') WHERE activity = 'Start trip';
select DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03') WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03' AND activity = 'Start trip')
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03' AND activity = 'Start trip')
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03' AND activity = 'Start trip')
SELECT * FROM event_log WHERE activity = 'Start trip';
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE activity = 'Start trip'
SELECT activity, COUNT(*) as total_records FROM event_log GROUP BY activity
SELECT COUNT(*) AS total_performances, activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT activity, count(*) as event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as num_events FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) as total_performances FROM event_log GROUP BY activity
SELECT activity, SUM(1) as total_performances FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_events FROM event_log GROUP BY activity
SELECT COUNT(*), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity ORDER BY num_interventions DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity ORDER BY num_interventions DESC;
SELECT activity, idcase, COUNT(*) FROM event_log GROUP BY activity, idcase
SELECT activity, COUNT(*) AS num_interventions FROM event_log GROUP BY activity
SELECT idcase, activity, COUNT(*) AS num_interventions FROM event_log GROUP BY idcase, activity
SELECT idcase, activity, COUNT(*) as num_interventions FROM event_log GROUP BY idcase, activity
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost DESC;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost, COUNT(*) as num_interventions FROM event_log GROUP BY activity, cost ORDER BY cost DESC;
SELECT id, activity, resource, cost FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity LIKE 'Permit%' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE '%permit%' COLLATE NOCASE;
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT DISTINCT activity, resource FROM event_log WHERE activity LIKE 'Permit%'
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE activity LIKE 'Permit%' GROUP BY activity ORDER BY frequency DESC;
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT * FROM event_log WHERE activity LIKE 'Permit%';
SELECT DISTINCT activity, idcase FROM event_log WHERE activity LIKE '%Permit%' AND activity LIKE '%declaration%'
SELECT * FROM event_log WHERE activity LIKE '%permit%' AND idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaration%' )
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) AS highest_cost FROM event_log;
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND resource = 'Thomas'
SELECT idcase FROM event_log WHERE resource = 'Sara' AND idcase IN ( SELECT idcase FROM event_log WHERE resource = 'Thomas' )
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT resource, idcase, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY resource, idcase
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'declaration rejected by administration' GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by administration' GROUP BY idcase, resource
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Start trip', 'End trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('start trip', 'end trip');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('begin_trip', 'end_trip')
SELECT * FROM event_log WHERE cost IS NOT NULL ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) ORDER BY cost DESC LIMIT 5;
SELECT activity, cost FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE strftime('%Y-%m-%d', timestamp) IN ('2018-10-01', '2018-10-02');
SELECT * FROM event_log WHERE strftime('%Y-%m-%d', timestamp) IN ('2018-10-01', '2018-10-02');
SELECT * FROM event_log WHERE strftime('%Y-%m-%d', timestamp) IN ('2018-10-01', '2018-10-02');
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT activity, idcase FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT * FROM event_log WHERE resource LIKE 'M%';
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE resource COLLATE NOCASE LIKE 'M%' ORDER BY resource, activity, timestamp;
SELECT DISTINCT activity FROM event_log WHERE resource IN ( SELECT resource FROM event_log WHERE resource LIKE 'M%' )
SELECT * FROM event_log WHERE resource LIKE 'M%' ORDER BY timestamp;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(DISTINCT idcase) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT idcase, activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3 )
SELECT idcase, activity, COUNT(*) as count FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) AS size_of_trace FROM event_log WHERE idcase = 'declaration 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaration 56300';
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log WHERE activity='Declaration final approved by director' GROUP BY idcase ORDER BY idcase) e1 ON e.idcase = e1.idcase AND e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT COUNT(*) FROM event_log WHERE idcase = '56300';
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1
SELECT activity, count(*) FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count(*) > 1;
SELECT activity, COUNT(*) FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, count(*) FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING count(*) > 1;
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity ORDER BY frequency DESC;
SELECT COUNT(*) as total_actions FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) AND timestamp < '2017-01-10 00:00:00';
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) as num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) as num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) as num_declarations FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) as allocation_count FROM event_log GROUP BY resource
SELECT COUNT(*) AS total_actions, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) AS occurrences, resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) as total_occurrences, resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas', 'Diana');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%intervention%' AND timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') ORDER BY activity, resource;
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT activity, resource FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource IN ('Joshua', 'Teresa') ) AND activity LIKE '%intervention%'
SELECT e1.activity, e1.resource FROM event_log AS e1 WHERE e1.activity NOT LIKE '%Joshua%' AND e1.activity NOT LIKE '%Teresa%'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' OR activity = 'End trip' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled';
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) AND (activity = 'Start trip' OR activity = 'End trip')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' OR activity = 'End trip' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' OR activity = 'End trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled');
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request Payment' OR activity = 'Payment handled')
SELECT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT idcase FROM event_log WHERE activity IN ('Start trip', 'End trip') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Request Payment', 'Payment handled') )
SELECT activity, timestamp FROM event_log WHERE resource IS NULL;
SELECT activity, timestamp FROM event_log WHERE resource IS NULL OR resource = ''
SELECT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL
SELECT id, activity, timestamp, cost, idcase FROM event_log WHERE resource IS NULL;
SELECT DISTINCT activity FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL
SELECT idcase, resource, count(*) FROM event_log WHERE resource IS NULL OR resource = '' GROUP BY idcase, resource
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03'
SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03'
SELECT idcase FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE timestamp < '2017-03-01' GROUP BY activity HAVING COUNT(*) = 1 )
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log where activity = 'Start trip' INTERSECT SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) > '2018-03-31'
SELECT idcase FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE timestamp < '2017-03-01' ORDER BY timestamp LIMIT 1) AND timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' ORDER BY timestamp LIMIT 1 GROUP BY idcase
SELECT DISTINCT(idcase) FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE '%intervention%';
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp < '2017-03-01' ) ORDER BY timestamp;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND EXTRACT(MONTH FROM timestamp) = 3 AND EXTRACT(YEAR FROM timestamp) = 2017;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2017-03-01 00:00:00' AND timestamp < '2017-04-01 00:00:00' ORDER BY timestamp ASC LIMIT 1;
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE activity ='start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' ORDER BY idcase;
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp >= '2017-03-01' AND timestamp < '2017-04-01'
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, COUNT(*) as num_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 ) GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 ) GROUP BY resource
SELECT resource, COUNT(*) as num_actions FROM event_log WHERE idcase IS NOT NULL GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 ) GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 5 ) GROUP BY resource
SELECT resource, idcase, COUNT(*) as count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5 ) GROUP BY resource, idcase ORDER BY resource, count DESC;
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource, idcase FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT id) > 5;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 1;
SELECT activity, COUNT(*) as frequency FROM event_log GROUP BY activity ORDER BY frequency DESC LIMIT 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1)
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) as frequency FROM event_log WHERE idcase IS NOT NULL GROUP BY activity ORDER BY frequency DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY count DESC;
select resource FROM event_log where activity = 'Declaration final approved by supervisor' group by resource HAVING COUNT(*) IN (select COUNT(*) from event_log where activity = 'Declaration final approved by supervisor' group by resource order by count(*) DESC limit 10) ORDER BY COUNT(*) DESC
SELECT resource, COUNT(*) AS frequency FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) as frequency FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY frequency DESC;
SELECT resource FROM event_log WHERE activity = 'Declaration final approved by supervisor' GROUP BY resource ORDER BY COUNT(*) DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND (resource = 'Eugene' OR resource = 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaration approved by budget owner' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration approved by budget owner' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%approved%' AND (resource LIKE '%Eugene%' OR resource LIKE '%Marie%') AND activity LIKE '%budget holder%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%' AND (resource LIKE '%Eugene%' OR resource LIKE '%Marie%');
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaration 76667';
SELECT activity FROM event_log WHERE idcase = 'declaration 49464' AND activity NOT IN ( SELECT activity FROM event_log WHERE idcase = 'declaration 76667' )
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaration 49464' AND idcase NOT IN (SELECT idcase FROM event_log WHERE idcase = 'declaration 76667')
SELECT * FROM event_log WHERE id = 49464 EXCEPT SELECT * FROM event_log WHERE id = 76667;
SELECT count(*) FROM event_log WHERE resource IN ( SELECT resource FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ) AND activity = 'Declaration submitted by employee'
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT resource, count(*) as performance_count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2
SELECT resource, count(*) as num_events FROM event_log WHERE activity = 'Declaration submitted by employee' GROUP BY resource HAVING count(*) > 2
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 2
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity = 'Request payment' AND e.timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59' ORDER BY e.timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Request payment' AND timestamp BETWEEN '2017-05-01 00:00:00' AND '2017-05-10 23:59:59'
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(resource) as num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_employees FROM event_log GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher'
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Christopher'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'
SELECT idcase, resource, activity FROM event_log WHERE resource = 'Christopher' GROUP BY idcase, resource, activity HAVING COUNT(DISTINCT activity) = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE resource = 'Christopher')
SELECT idcase FROM event_log WHERE resource = 'Christopher' AND id NOT IN ( SELECT id FROM event_log WHERE resource!= 'Christopher' )
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND EXISTS (SELECT 1 FROM event_log WHERE resource = 'Christopher' AND idcase = event_log.idcase)
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE resource = 'Christopher');
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM ( SELECT idcase, resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY idcase, resource ) AS subquery WHERE activity_count = (SELECT COUNT(DISTINCT activity) FROM event_log WHERE idcase = subquery.idcase)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase, COUNT(*) as num_resources FROM event_log GROUP BY idcase HAVING COUNT(*) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase);
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase AND resource = event_log.resource)
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT id) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1 )
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE timestamp >= DATE_TRUNC('day', timestamp) GROUP BY idcase, DATE_TRUNC('day', timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, DATE(timestamp) AS date FROM event_log ) AS t WHERE activity = next_activity GROUP BY idcase, date HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM ( SELECT idcase, activity, DATE(timestamp) AS date, COUNT(*) AS count FROM event_log GROUP BY idcase, DATE(timestamp), activity ) AS temp GROUP BY idcase, date HAVING COUNT(*) > 1 )
SELECT idcase, resource, COUNT(*) FROM event_log WHERE cost = 0 GROUP BY idcase, resource
SELECT idcase, resource, COUNT(*) AS zero_cost_events FROM event_log WHERE cost = 0 GROUP BY idcase, resource
SELECT COUNT(*) FROM (SELECT DISTINCT idcase FROM event_log where cost IS NULL EXCEPT SELECT DISTINCT idcase FROM event_log where cost IS NOT NULL)
SELECT resource, COUNT(*) as zero_cost_events FROM event_log WHERE cost = 0 GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE cost = 0 GROUP BY resource, idcase
SELECT resource, COUNT(*) FROM event_log WHERE cost = 0 GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS num_interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT resource, COUNT(*) AS num_interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity = 'Permit rejected by director';
SELECT * FROM event_log WHERE activity = 'permit rejected by director';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity LIKE '%permit rejected by director%';
SELECT * FROM event_log WHERE activity = 'Permit rejected by director'
SELECT * FROM event_log WHERE activity LIKE '%Permit rejected by director%'
SELECT activity FROM event_log WHERE activity LIKE '%rejected%' AND activity LIKE '%director%'
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT strftime('%Y-%m-%d', timestamp) as event_date, COUNT(*) as event_count FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT DATE(timestamp) AS date, SUM(cost) AS total_cost FROM event_log GROUP BY DATE(timestamp)
SELECT id, activity, resource, cost FROM event_log WHERE cost > 1000 AND resource IN ('supervisor', 'director')
SELECT activity, cost FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%director%' AND cost > 1000
SELECT activity, resource, cost FROM event_log WHERE cost > 1000 AND (resource LIKE '%supervisor%' OR resource LIKE '%director%');
SELECT count(DISTINCT idcase), 'employee' as grupo from event_log WHERE activity like '%employee%' UNION select count(DISTINCT idcase),'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(DISTINCT idcase), 'administration' as grupo from event_log WHERE activity like '%administration%' UNION select count(DISTINCT idcase), 'pre-approver' as grupo from event_log WHERE activity like '%pre-approver%' UNION select count(DISTINCT idcase), 'budget owner' as grupo from event_log WHERE activity like '%budget owner%' UNION select count(DISTINCT idcase), 'director' as grupo from event_log WHERE activity like '%director%'
SELECT * FROM event_log WHERE cost > 1000 AND resource IN ('supervisor', 'director')
SELECT activity, cost FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%director%' AND cost > 1000
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_per_case FROM event_log GROUP BY idcase
SELECT count(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as num_interventions FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) FROM event_log group by resource
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_tasks FROM event_log GROUP BY resource
SELECT COUNT(*) as total_actions, resource FROM event_log WHERE activity = 'Start trip' GROUP BY resource
SELECT idcase, COUNT(activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, count(DISTINCT activity) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, count(DISTINCT activity) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(*) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) as num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, activity FROM event_log WHERE resource = 'Alexis' GROUP BY idcase, activity
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT COUNT(*) FROM idcase WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Permit final approved by supervisor' AND id IN ( SELECT id FROM event_log WHERE activity ='start trip' ) )
SELECT COUNT(*) FROM event_log AS a, event_log AS b WHERE a.activity = 'Permit final approved by supervisor' AND b.activity ='start trip' AND a.timestamp < b.timestamp;
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity, idcase FROM event_log ) SELECT COUNT(DISTINCT idcase) FROM RankedEvents WHERE activity = 'Permit final approved by supervisor' AND next_activity = 'Start trip';
SELECT COUNT(*) FROM event_log AS e1 WHERE EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.activity ='start trip' AND e1.id < e2.id ) AND e1.activity = 'Permit final approved by supervisor'
SELECT COUNT(*) FROM event_log AS start_trip WHERE EXISTS ( SELECT 1 FROM event_log AS permit_approved WHERE permit_approved.activity = 'Permit final approved by supervisor' AND permit_approved.id < start_trip.id AND permit_approved.timestamp < start_trip.timestamp )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permit final approved by supervisor' AND id < ( SELECT id FROM event_log WHERE activity = 'Start trip' ORDER BY timestamp LIMIT 1 )
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director' AND EXISTS (SELECT 1 FROM event_log WHERE activity = 'Trip start' AND timestamp > (SELECT timestamp FROM event_log WHERE activity = 'Permit final approved by director'))
SELECT count(*), e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp < e2.timestamp group by e1.idcase
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp < '2017-12-12' OR timestamp > '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp <= '2017-12-12' OR timestamp >= '2017-12-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp <= '2017-12-12' OR timestamp >= '2017-12-13'
SELECT * FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp NOT LIKE '%2017-12-12%'
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY frequency DESC;
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource = 'Virginia' GROUP BY activity HAVING COUNT(*) = 0
SELECT DISTINCT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log WHERE resource = 'Virginia';
SELECT activity FROM event_log WHERE resource!= 'Virginia'
SELECT activity FROM event_log WHERE resource = 'Virginia' EXCEPT SELECT activity FROM event_log GROUP BY activity HAVING COUNT(resource) > 0;
SELECT DISTINCT activity FROM event_log WHERE resource!= 'Virginia'
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejected%';
SELECT AVG(cost) FROM event_log WHERE activity ='rejected'
SELECT AVG(total_cost) FROM ( SELECT SUM(cost) as total_cost, idcase FROM event_log WHERE activity ='rejected' GROUP BY idcase ) AS cases_with_rejected
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejected%' GROUP BY idcase;
SELECT AVG(cost) FROM event_log WHERE activity ='rejected'
SELECT AVG(cost) FROM event_log WHERE activity = 'REJECTED' GROUP BY idcase;
SELECT AVG(cost) FROM event_log WHERE activity IN (SELECT activity FROM event_log WHERE activity LIKE '%rejected%') GROUP BY idcase
SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER by e2.timestamp
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase ORDER BY idcase;
SELECT idcase, timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS duration FROM event_log WHERE activity = 'Declaration approved by supervisor' ORDER BY idcase, timestamp;
SELECT idcase, TIMESTAMPDIFF(SECOND, (SELECT MIN(timestamp) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND idcase = e1.idcase), (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND idcase = e1.idcase)) AS duration FROM event_log e1 WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase
SELECT idcase, TIMESTAMPDIFF(SECOND, (SELECT MIN(timestamp) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND idcase = e1.idcase), (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Declaration approved by supervisor' AND idcase = e1.idcase)) AS duration FROM event_log e1 WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase ORDER BY duration;
SELECT DISTINCT e1.idcase FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration rejected by supervisor' ORDER BY e2.timestamp;
SELECT e1.idcase, strftime('%s', e2.timestamp) - strftime('%s', e1.timestamp) as 'Wait time' FROM event_log e1 INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log WHERE activity = 'Declaration approved by supervisor' GROUP BY idcase) e2 ON e1.idcase = e2.idcase AND e1.activity = 'Declaration submitted' ORDER BY e1.idcase;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource
SELECT DISTINCT resource, COUNT(*) FROM (SELECT resource, MIN(timestamp) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource, idcase) GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
SELECT count(*), resource FROM (SELECT resource, MIN(timestamp) FROM event_log where activity = 'Declaration rejected by pre-approver' GROUP by resource, idcase) GROUP by resource
SELECT COUNT(*), resource FROM (SELECT resource, MIN(timestamp) AS first_occurrence FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource, idcase) AS first_occurrences GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver';
select e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp
SELECT idcase, timestamp FROM event_log WHERE activity = 'End trip' ORDER BY resource, timestamp;
select e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp
SELECT idcase, timestamp, resource FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31' ORDER BY resource;
SELECT e1.idcase, e1.resource, e1.timestamp FROM event_log AS e1 WHERE e1.activity = 'End trip' ORDER BY e1.resource;
SELECT e2.idcase, e2.timestamp AS end_trip_date, e1.resource AS employee FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' ORDER BY e1.resource;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) as events_count FROM event_log GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT id), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 WHERE e1.activity = 'End trip' AND e1.timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02 00:00:00' AND '2017-05-12 23:59:59'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(*) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity
SELECT e1.idcase, e1.resource, e1.id, e1.timestamp AS completion_date FROM event_log AS e1 WHERE e1.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity
SELECT distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity
SELECT e1.idcase, e1.id, e1.resource, e1.timestamp FROM event_log AS e1 WHERE e1.activity = 'Send reminder' ORDER BY e1.timestamp;
SELECT e.idcase, e.resource, e.id, e.timestamp FROM event_log AS e WHERE e.activity = 'Send reminder' ORDER BY e.timestamp;
SELECT distinct(e1.activity) from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Send reminder' and e1.timestamp < e2.timestamp group by e1.idcase, e1.activity
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource;
SELECT DISTINCT resource FROM event_log ORDER BY resource ASC;
SELECT DISTINCT resource AS employee_name FROM event_log ORDER BY employee_name ASC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(idcase) > 200;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) as total_resources FROM event_log WHERE activity LIKE '%declaration%';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%declaration handling%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%';
SELECT * FROM event_log WHERE activity LIKE '%declaration%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaration%' GROUP BY idcase;
SELECT * FROM event_log WHERE activity LIKE '%declaration%'
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS mean_cost FROM event_log GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0 AND id IN ( SELECT id FROM event_log GROUP BY idcase HAVING MIN(cost) = 0 AND MAX(cost) = 0 )
SELECT COUNT(*) FROM "event_log" GROUP BY "idcase" HAVING COUNT(CASE WHEN "cost" IS NOT NULL THEN 1 ELSE NULL END) = 0
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0;
SELECT idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1
SELECT * FROM event_log WHERE activity LIKE '%Permit%' shows that permit-related activities are present in the event log. 2. SELECT * FROM event_log WHERE activity LIKE '%Declaration%' (not provided, but implied) would show that declaration-related activities are also present in the event log. To combine these, we can use the OR operator: SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%'
SELECT * FROM event_log WHERE activity LIKE '%Permit%' OR activity LIKE '%Declaration%' returns all rows from the event_log table where the activity column contains a string that includes the word 'Permit' or 'Declaration'.
SELECT * FROM event_log WHERE activity LIKE '%Permit%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%';
SELECT idcase from event_log where activity like 'Permit%' GROUP BY idcase HAVING count(*) > 1
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE activity LIKE '%Permit%' AND idcase IS NOT NULL
SELECT count(*) FROM event_log WHERE activity = 'Declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaration rejected by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by director'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration of rejection of responsibility by director';
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) AS mean_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log;
SELECT AVG(cost) FROM event_log WHERE idcase IS NOT NULL
SELECT count(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, count(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource
SELECT resource, count(distinct idcase) as num_cases FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3;
SELECT id FROM event_log GROUP BY id HAVING COUNT(DISTINCT idcase) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT id) > 3
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(id) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(id) > 3;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity ='request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE '%request payment%' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity ='request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events, idcase FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) as activity_count FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY activity_count ASC;
SELECT idcase, COUNT(*) as num_actions FROM event_log WHERE activity = 'Request payment' GROUP BY idcase ORDER BY num_actions;
SELECT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'End trip' OR activity = 'Declaration rejected by employee' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'end trip' OR activity = 'closed' ORDER BY timestamp;
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity IN ('End trip', 'declaration rejected by employee') ORDER BY date;
SELECT DISTINCT e1.timestamp FROM event_log AS e1 WHERE e1.activity IN ('End trip', 'Reject') ORDER BY e1.timestamp ASC;
SELECT DISTINCT timestamp FROM event_log WHERE activity IN ('End trip', 'Rejection') ORDER BY timestamp ASC;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_performances FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) as activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrences FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as activity_occurrences FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) as total_declarations FROM event_log WHERE activity LIKE 'Declaration saved by employee%' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY resource;
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity COLLATE NOCASE LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT * FROM event_log WHERE activity LIKE 'E%';
SELECT activity FROM event_log WHERE activity LIKE 'E%' AND activity LIKE '%declaration%';
SELECT e.* FROM event_log e WHERE e.activity LIKE 'E%';
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT resource FROM event_log WHERE activity = 'Declaration saved by employee'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaration saved by employee'
SELECT DISTINCT resource FROM event_log WHERE activity ='saved';
SELECT DISTINCT resource FROM event_log WHERE activity ='saved';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT * FROM event_log WHERE activity = 'End trip' AND strftime('%Y-%m-%d', timestamp) = '2018-04-12';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp <= '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp = '2018-04-12' AND activity LIKE '%End%';
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12' AND activity = 'End trip';
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12' AND activity = 'End trip';
SELECT activity FROM event_log WHERE timestamp = '2018-04-12'
SELECT id, activity, timestamp AS "performance end date" FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY timestamp;
SELECT id, activity, timestamp AS end_date FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration final approved by supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp AS end_date FROM event_log WHERE activity = 'Permit final approved by supervisor' OR activity = 'Declaration approved by supervisor' ORDER BY timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration final approved by supervisor') ORDER BY timestamp DESC;
SELECT el.id, el.activity, el.timestamp as end_date FROM event_log el WHERE el.activity IN ('Permit final approved by supervisor', 'Declaration approved by supervisor') ORDER BY el.timestamp DESC;
SELECT id, activity, timestamp as end_date FROM event_log WHERE activity IN ('Permit final approved by supervisor', 'Declaration final approved by supervisor') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Declaration final approved by supervisor', 'Permit final approved by director') ORDER BY timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Declaration final approved by supervisor', 'Permit final approved by supervisor') ORDER BY timestamp DESC;
SELECT * FROM event_log WHERE cost!= 0;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT id, activity, resource, cost FROM event_log WHERE cost <> 0
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log WHERE activity='Declaration final approved by director' GROUP BY idcase ORDER BY idcase) e1 ON e.idcase = e1.idcase AND e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permit final approved by supervisor';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit final approved by director';
SELECT COUNT(*) FROM event_log WHERE activity = 'Final permit approved by director';
SELECT * FROM event_log WHERE activity ='start trip' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s' AND timestamp LIKE '2016%';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT * FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT DISTINCT strftime('%Y-%m-%d', timestamp) AS date FROM event_log WHERE activity = 'Start trip' AND resource LIKE '%s';
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost) AS total_cost, activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost) FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource ORDER BY total_cost DESC;
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT SUM(cost), activity, resource FROM event_log GROUP BY activity, resource
SELECT resource, activity, SUM(cost) AS total_cost FROM event_log GROUP BY resource, activity ORDER BY total_cost DESC;
SELECT COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip');
SELECT COUNT(CASE WHEN activity ='start trip' THEN 1 ELSE NULL END) AS start_trip_count, COUNT(CASE WHEN activity = 'end trip' THEN 1 ELSE NULL END) AS end_trip_count FROM event_log;
SELECT COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip');
SELECT COUNT(*) FROM event_log WHERE activity IN ('start trip', 'end trip');
SELECT COUNT(*) FROM event_log WHERE activity IN ('Start trip', 'End trip')
SELECT activity, COUNT(*) as event_count FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity IN ('start trip', 'end trip') GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ('Begin trip', 'End trip')
SELECT COUNT(*) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Start trip' AND e2.activity = 'End trip' AND e1.timestamp < e2.timestamp
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity, COUNT(*) as count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT MAX(timestamp), activity, resource FROM event_log GROUP BY activity, resource ORDER BY timestamp DESC
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT e1.resource, e1.activity FROM event_log AS e1 WHERE e1.id = (SELECT MAX(id) FROM event_log)
SELECT resource, activity FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.timestamp > e2.timestamp WHERE e2.activity = 'End trip' ORDER BY e1.resource, e1.timestamp;
SELECT el2.idcase, el2.resource, el2.activity, el2.timestamp FROM event_log el2 WHERE el2.id > ( SELECT id FROM event_log el1 WHERE el1.activity = 'End trip' ) ORDER BY el2.timestamp;
SELECT el1.idcase, el1.timestamp, el1.resource, el2.activity AS next_activity FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id WHERE el1.activity = 'End trip' ORDER BY el1.timestamp, el2.timestamp;
SELECT el1.id, el1.activity, el1.resource, el1.timestamp FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el2.activity = 'End trip' ORDER BY el1.id, el1.timestamp;
SELECT el2.id, el2.activity, el2.timestamp, el2.resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.timestamp, el2.timestamp;
SELECT el1.idcase, el1.timestamp AS end_trip_timestamp, el2.activity, el2.resource, el2.timestamp AS next_event_timestamp FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el1.timestamp;
SELECT el1.idcase, el1.timestamp, el1.resource FROM event_log el1 JOIN event_log el2 ON el1.id > el2.id WHERE el1.activity = 'End trip' AND el2.activity!= 'End trip' ORDER BY el1.resource;
SELECT el1.idcase, el1.timestamp, el1.resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el2.activity = 'End trip' ORDER BY el1.resource;
SELECT el1.activity, el1.resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.timestamp, el1.resource;
SELECT el1.activity, el1.resource, el2.timestamp FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el2.timestamp;
SELECT el1.idcase, el1.timestamp, el1.resource, el2.activity FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.id > el2.id WHERE el1.activity = 'End trip' ORDER BY el1.idcase, el1.timestamp;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.resource;
SELECT e1.idcase, e1.activity, e1.resource, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase;
SELECT el1.id, el1.timestamp, el1.resource, el2.timestamp AS next_event_timestamp FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity = 'End trip' ORDER BY el1.id, el1.timestamp;
SELECT el1.id, el1.timestamp AS end_trip_timestamp, el2.activity AS start_trip_activity, el2.timestamp AS start_trip_timestamp, el2.resource AS start_trip_resource FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.timestamp WHERE el1.activity = 'End trip' AND el2.activity = 'Start trip' ORDER BY el1.id;
SELECT el1.activity, el1.resource, el1.timestamp FROM event_log el1 JOIN ( SELECT idcase, MAX(timestamp) AS max_timestamp FROM event_log WHERE activity = 'trip registration' GROUP BY idcase ) el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.max_timestamp ORDER BY el1.idcase, el1.timestamp;
SELECT el1.idcase, el1.activity, el1.resource, el1.timestamp FROM event_log el1 WHERE el1.activity!= 'End trip' AND el1.idcase IN ( SELECT idcase FROM event_log el2 WHERE el2.activity = 'End trip' ) ORDER BY el1.resource;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, SUM(cost) AS total_cost FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, SUM(CASE WHEN activity!= 'End trip' THEN 1 ELSE 0 END) AS non_end_trip_events FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) AS non_end_trip_events FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity NOT LIKE 'End trip%' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity!= 'End trip' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC;
SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ORDER BY start_date DESC;
SELECT idcase, MIN(timestamp) AS first_action_date FROM event_log GROUP BY idcase ORDER BY first_action_date;
SELECT idcase FROM event_log ORDER BY timestamp ASC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity ='request payment';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Request payment'
SELECT COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity = 'Request payment'
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT e.idcase, e.timestamp FROM event_log e WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration final approved by director' ORDER BY timestamp DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as count FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY count DESC LIMIT 1;
SELECT resource, COUNT(*) as total_events FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY total_events DESC LIMIT 1;
SELECT resource, COUNT(*) as total_approvals FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY total_approvals DESC LIMIT 1;
SELECT resource FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log WHERE activity = 'Declaration approved by administration' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) FROM event_log WHERE activity = (SELECT MIN(activity) FROM event_log) GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase IS NOT NULL) GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = (SELECT activity FROM event_log WHERE idcase = (SELECT MIN(idcase) FROM event_log) GROUP BY idcase) GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE id = (SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase) GROUP BY resource
SELECT resource, COUNT(CASE WHEN row_number() OVER (PARTITION BY idcase ORDER BY timestamp) = 1 THEN 1 ELSE NULL END) AS first_action FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declarations FROM event_log WHERE activity = (SELECT activity FROM event_log ORDER BY id LIMIT 1) GROUP BY resource
SELECT resource, COUNT(*) as num_processes FROM event_log WHERE activity = 'initiated' GROUP BY resource
SELECT count(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%approved%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%approved%'
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS count FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS rejected_declarations FROM event_log WHERE activity LIKE '%rejected%' GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS rejection_actions FROM event_log WHERE activity = 'Declaration rejected by director' GROUP BY DATE(timestamp)
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase ORDER BY duration DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_duration FROM event_log GROUP BY idcase ORDER BY COUNT(DISTINCT activity) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= ALL ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase ORDER BY duration DESC;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time, COUNT(DISTINCT resource) AS num_resources FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(DISTINCT resource) DESC LIMIT 5 ) GROUP BY idcase ORDER BY processing_time DESC;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) AND COUNT(*) >= 20 ) GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5 ) AND COUNT(*) >= 20 ) GROUP BY idcase;
SELECT idcase, SUM(TIMESTAMPDIFF(SECOND, MIN(timestamp), MAX(timestamp))) AS total_duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) >= 20 ORDER BY COUNT(activity) DESC LIMIT 5 ) GROUP BY idcase ORDER BY total_duration DESC;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5) GROUP BY idcase;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS processing_time, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY processing_time DESC LIMIT 5;
SELECT idcase, timestamp FROM event_log WHERE activity!= 'Request payment' AND activity!= 'Payment handled' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE activity!= 'Request payment' AND activity!= 'Payment handled' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT * FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity!= 'Request payment' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log WHERE activity NOT LIKE '%request payment%' ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, timestamp FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment') ORDER BY timestamp DESC LIMIT 10;
SELECT idcase, count(*) as num_events FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase, count(*) as num_events FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%payment handled%' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE activity = 'payment handled' AND timestamp < '2018-01-01 00:00:00'
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01'
SELECT idcase, COUNT(*) as count_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT COUNT(idcase) FROM (SELECT idcase, activity, MIN(timestamp) FROM event_log GROUP BY idcase) AS e1 WHERE e1.activity LIKE 'Permit%'
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) as num_permit_activities FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT idcase, COUNT(*) AS permit_count FROM event_log WHERE activity LIKE '%Permit%' GROUP BY idcase ORDER BY permit_count DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT e1.idcase, COUNT(*) AS permit_count FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaration processed' AND e2.activity = 'Permit registered' GROUP BY e1.idcase
SELECT idcase, count(*) as permit_count FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase
SELECT e1.idcase, e1.resource, COUNT(e1.idcase) as count FROM event_log e1 WHERE e1.activity = 'Declaration rejected by supervisor' GROUP BY e1.idcase, e1.resource ORDER BY e1.idcase, e1.resource;
SELECT e1.idcase, e1.resource FROM event_log e1 WHERE e1.activity = 'Declaration rejected by supervisor' GROUP BY e1.idcase, e1.resource ORDER BY e1.idcase;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_cases FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_rejections FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY resource ORDER BY num_rejections DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT idcase, COUNT(*) as num_declarations FROM event_log GROUP BY idcase ORDER BY num_declarations DESC;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT id FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) ORDER BY timestamp;
SELECT * FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE 'D%' ORDER BY timestamp DESC ) AND activity LIKE 'R%' ORDER BY timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%')
SELECT el1.activity AS 'R-action' FROM event_log el1 JOIN ( SELECT activity, timestamp FROM event_log WHERE activity LIKE 'D%' AND activity LIKE '%declaration%' ) el2 ON el1.timestamp > el2.timestamp WHERE el1.activity LIKE 'R%' AND el1.activity LIKE '%declaration%' ORDER BY el1.timestamp;
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) as count FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) AS frequency FROM event_log GROUP BY activity, resource
SELECT resource, COUNT(*) as count FROM event_log WHERE activity LIKE '%processing%' GROUP BY resource
SELECT e.name, activity, count(*) as count FROM event_log el JOIN employees e ON el.idcase = e.id GROUP BY e.name, activity
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, resource FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase, activity, timestamp, resource, cost FROM event_log WHERE resource = 'Wayne' ORDER BY idcase, timestamp;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE timestamp = DATE('2018-03-12') AND activity IS NOT NULL GROUP BY activity
SELECT activity, COUNT(*) as frequency FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp <= '2018-03-12' AND activity!= 'End trip' GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log WHERE timestamp < '2018-03-13') GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-12') GROUP BY activity
SELECT activity, COUNT(*) AS num_declarations FROM event_log WHERE timestamp = '2018-03-12' GROUP BY activity;
SELECT activity, COUNT(*) FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12' GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permit%';
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' GROUP by idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permit%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' ORDER BY idcase LIMIT 1;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'Permit%' ORDER BY COUNT(DISTINCT idcase) DESC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permit%' ORDER BY COUNT(DISTINCT idcase) LIMIT 1;
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit%';
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'Permit%' AND activity!= 'End trip'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'permit' AND timestamp = (SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'payment handled')
SELECT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('request payment', 'payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('request payment', 'payment handled') ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('request payment', 'payment handled') ORDER BY e.idcase;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('request payment', 'payment handled') )
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT DISTINCT e.idcase FROM event_log AS e WHERE e.activity NOT IN ('request payment', 'payment handled') ORDER BY e.idcase;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Payment handled') AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Request payment')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Request payment', 'Payment handled') GROUP BY idcase HAVING COUNT(DISTinct activity) = 2
SELECT timestamp, resource, activity FROM event_log WHERE activity IN ('start trip', 'declaration submitted by employee') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Start trip', 'declaration submitted by employee') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity ='start trip' OR activity = 'declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT timestamp, resource FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Start trip' OR activity = 'Declaration submitted by employee' ORDER BY timestamp, resource;
SELECT timestamp, resource, activity, idcase, cost FROM event_log WHERE activity IN ('Start trip', 'Declaration submitted by employee') ORDER BY timestamp, resource;
SELECT e1.timestamp, e1.resource, e1.activity FROM event_log AS e1 WHERE e1.activity IN ('Initiate travel', 'Request declaration') ORDER BY e1.timestamp, e1.resource;
SELECT e1.id, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Start of processing' OR e2.activity = 'Request from employee' AND e1.timestamp > e2.timestamp ORDER BY e1.timestamp, e1.resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, count(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS performance_count FROM event_log WHERE activity = 'declaration saved by employee' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Save travel declaration' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS "Number of times saved" FROM event_log WHERE activity ='save' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(idcase) as count_cases FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS count_instances FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS num_cases, activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_declarations FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) as num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_actions FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT resource, COUNT(*) AS completion_count FROM event_log WHERE activity IN ('End trip', 'Payment handled') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('end trip', 'payment handled') GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity IN ('end of trip', 'payment') GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity IN ('End trip', 'Make a payment') GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT resource, COUNT(*) AS first_occurrence FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource HAVING COUNT(*) = 1
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND id = (SELECT MIN(id) FROM event_log WHERE activity = 'Declaration rejected by pre-approver' AND idcase = event_log.idcase) GROUP BY resource
SELECT resource, COUNT(*) AS first_occurrence_count FROM ( SELECT resource, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaration rejected by pre-approver' ) AS subquery WHERE row_num = 1 GROUP BY resource;
SELECT resource, count(*) as count FROM event_log WHERE activity = 'Declaration rejected by pre-approver' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS num_declarations, resource FROM event_log WHERE activity = 'Rejection' AND resource IN ( SELECT resource FROM event_log WHERE activity = 'First action' GROUP BY resource HAVING COUNT(DISTINCT idcase) = 1 ) GROUP BY resource
SELECT idcase, activity, COUNT(*) AS occurrences FROM event_log WHERE activity!= 'End trip' GROUP BY idcase, activity ORDER BY idcase, occurrences DESC;
SELECT idcase, SUM(CASE WHEN activity = 'End trip' THEN 0 ELSE 1 END) AS activity_occurrences FROM event_log GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase
SELECT idcase, (SELECT COUNT(*) FROM event_log WHERE idcase = e.idcase AND timestamp < e.timestamp AND activity!= 'End trip') AS activity_occurrences FROM event_log e WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12' ) GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2017-05-02' and '2017-05-12' ) GROUP BY idcase
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, COUNT(*) as num_events FROM event_log WHERE activity!= 'End trip' GROUP BY idcase ORDER BY num_events DESC;
SELECT idcase, COUNT(*) as num_actions FROM event_log WHERE activity!= 'End trip' GROUP BY idcase
SELECT idcase, count(*) as num_actions FROM event_log WHERE activity!= 'Start trip' AND activity!= 'End trip' GROUP BY idcase ORDER BY idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31' ORDER BY activity;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC;
SELECT idcase, MIN(timestamp) AS start_date, MAX(timestamp) AS end_date FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY idcase ORDER BY start_date;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY idcase, timestamp
SELECT idcase, timestamp AS start_time, (SELECT timestamp FROM event_log WHERE idcase = e.idcase AND activity = 'Declaration rejected by supervisor' ORDER BY timestamp LIMIT 1) AS rejection_time FROM event_log e WHERE activity = 'Declaration started' ORDER BY start_time, rejection_time;
SELECT idcase, MIN(timestamp) AS start_time FROM event_log WHERE activity = 'Declaration rejected by supervisor' GROUP BY idcase ORDER BY start_time;
SELECT * FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp, idcase ASC Note: The idcase column is a text column, so it's not possible to use it as a primary key or to order by it in ascending order. If idcase is supposed to be a unique identifier for each case, it should be changed to an integer or a unique identifier type.
SELECT * FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp ASC
SELECT idcase FROM event_log WHERE activity = 'Rejection by supervisor' ORDER BY timestamp ASC
SELECT idcase, timestamp FROM event_log WHERE activity = 'Declaration rejected by supervisor' ORDER BY timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-01' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-01' )
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp BETWEEN '2016-01-01' AND '2018-03-01' AND id NOT IN (SELECT id FROM event_log WHERE activity = 'end trip' AND timestamp BETWEEN '2016-01-01' AND '2018-03-01')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-01' ) ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp BETWEEN '2016-01-01' AND '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp <= '2018-03-31' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'end trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity ='start trip' AND timestamp <= '2018-03-31' AND id NOT IN ( SELECT id FROM event_log WHERE activity = 'end trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp <= '2018-03-31' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp > '2018-03-31' )
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'End trip' AND timestamp <= '2018-03-31' )
SELECT idcase, resource FROM event_log WHERE activity = 'End trip' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled') GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) > 1
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled') AND resource!= (SELECT MIN(resource) FROM event_log WHERE idcase = event_log.idcase AND activity IN ('Request payment', 'Payment handled'));
SELECT idcase FROM event_log WHERE activity = 'End trip' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity IN ('request payment', 'payment handled') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE activity = 'End trip' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND activity = 'End trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 AND activity = 'End trip' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled' )
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Request payment' OR activity = 'Payment handled') AND id IN (SELECT MAX(id) FROM event_log GROUP BY idcase);
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.activity NOT IN ('Request payment', 'Payment handled') AND e1.timestamp > e2.timestamp GROUP BY e1.idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS final_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 ELSE NULL END) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) >= 2;
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) > 1
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' AND id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 )
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(CASE WHEN activity LIKE 'Permit%' THEN 1 END) > 1
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permit%' OR activity LIKE '%declaration%'
SELECT idcase FROM event_log WHERE activity LIKE 'Permit%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT id, activity, timestamp FROM event_log WHERE (id, timestamp) IN ( SELECT id, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY timestamp;
SELECT idcase, id, timestamp FROM event_log WHERE (idcase, timestamp) IN ( SELECT idcase, MAX(timestamp) FROM event_log GROUP BY idcase ) ORDER BY timestamp;
SELECT id FROM event_log WHERE id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase ) ORDER BY timestamp DESC;
SELECT idcase, timestamp FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC ) ORDER BY timestamp DESC;
SELECT count (*), idcase FROM event_log group by idcase
SELECT idcase, id FROM event_log WHERE id = (SELECT MAX(id) FROM event_log WHERE idcase = event_log.idcase) ORDER BY timestamp DESC;
SELECT idcase, id FROM event_log WHERE id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase ) ORDER BY timestamp DESC;
SELECT idcase, activity, timestamp FROM ( SELECT idcase, activity, timestamp, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp DESC) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 ORDER BY idcase, timestamp;
SELECT idcase, MAX(id) AS last_intervention_id FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT grupo, COUNT(*) as num_cases FROM (SELECT 'employee' as grupo FROM event_log WHERE activity like '%employee%' UNION SELECT 'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION SELECT 'administration' as grupo FROM event_log WHERE activity like '%administration%' UNION SELECT 'pre-approver' as grupo FROM event_log WHERE activity like '%pre-approver%' UNION SELECT 'budget owner' as grupo FROM event_log WHERE activity like '%budget owner%' UNION SELECT 'director' as grupo FROM event_log WHERE activity like '%director%') as subquery GROUP BY grupo ORDER BY num_cases DESC;
SELECT grupo, COUNT(*) AS num_cases FROM (SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' END AS grupo FROM event_log) AS grouped_activity GROUP BY grupo ORDER BY num_cases DESC;
SELECT grupo, COUNT(DISTINCT idcase) AS num_cases FROM (SELECT 'employee' AS grupo, idcase FROM event_log WHERE activity LIKE '%employee%' UNION SELECT 'supervisor' AS grupo, idcase FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT 'administration' AS grupo, idcase FROM event_log WHERE activity LIKE '%administration%' UNION SELECT 'pre-approver' AS grupo, idcase FROM event_log WHERE activity LIKE '%pre-approver%' UNION SELECT 'budget owner' AS grupo, idcase FROM event_log WHERE activity LIKE '%budget owner%' UNION SELECT 'director' AS grupo, idcase FROM event_log WHERE activity LIKE '%director%') AS subquery GROUP BY grupo ORDER BY num_cases DESC;
SELECT count(*), 'employee' as grupo FROM event_log WHERE activity like '%employee%' UNION SELECT count(*),'supervisor' as grupo FROM event_log WHERE activity like '%supervisor%' UNION SELECT count(*), 'administration' as grupo FROM event_log WHERE activity like '%administration%' UNION SELECT count(*), 'pre-approver' as grupo FROM event_log WHERE activity like '%pre-approver%' UNION SELECT count(*), 'budget owner' as grupo FROM event_log WHERE activity like '%budget owner%' UNION SELECT count(*), 'director' as grupo FROM event_log WHERE activity like '%director%' ORDER BY count(*)
SELECT grupo, COUNT(*) AS num_declarations FROM (SELECT resource, activity, idcase FROM event_log WHERE activity LIKE '%employee%' OR activity LIKE '%supervisor%' OR activity LIKE '%administration%' OR activity LIKE '%pre-approver%' OR activity LIKE '%budget owner%' OR activity LIKE '%director%') AS subquery GROUP BY grupo ORDER BY num_declarations;
SELECT activity, COUNT(*) AS frequency, CASE WHEN activity LIKE '%employee%' THEN 'Employee' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administration%' THEN 'Administration' WHEN activity LIKE '%pre-approver%' THEN 'Pre-Approver' WHEN activity LIKE '%budget owner%' THEN 'Budget Owner' WHEN activity LIKE '%director%' THEN 'Director' ELSE 'Other' END AS category FROM event_log WHERE activity NOT LIKE '%final approved by%' -- exclude the 'Declaration final approved by supervisor' activity GROUP BY activity, CASE WHEN activity LIKE '%employee%' THEN 'Employee' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administration%' THEN 'Administration' WHEN activity LIKE '%pre-approver%' THEN 'Pre-Approver' WHEN activity LIKE '%budget owner%' THEN 'Budget Owner' WHEN activity LIKE '%director%' THEN 'Director' ELSE 'Other' END ORDER BY frequency DESC, category;
SELECT grupo, COUNT(*) as activity_count, activity FROM (SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' END as grupo, activity FROM event_log) as grouped_activities GROUP BY grupo, activity ORDER BY activity_count DESC;
SELECT grupo, COUNT(*) as count FROM (SELECT CASE WHEN activity LIKE '%employee%' THEN 'employee' WHEN activity LIKE '%supervisor%' THEN'supervisor' WHEN activity LIKE '%administration%' THEN 'administration' WHEN activity LIKE '%pre-approver%' THEN 'pre-approver' WHEN activity LIKE '%budget owner%' THEN 'budget owner' WHEN activity LIKE '%director%' THEN 'director' END as grupo FROM event_log) as subquery GROUP BY grupo ORDER BY count DESC;
SELECT DISTINCT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
select e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'End trip' and e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'End trip' AND e1.timestamp > e2.timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity!= 'End trip' AND timestamp > (SELECT MIN(timestamp) FROM event_log WHERE activity = 'End trip' AND timestamp BETWEEN '2016-01-01' AND '2018-01-01')
SELECT idcase FROM event_log WHERE activity = 'Start trip' AND timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'End trip')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND NOT EXISTS ( SELECT 1 FROM event_log AS e2 WHERE e2.idcase = event_log.idcase AND e2.timestamp > event_log.timestamp )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND id = (SELECT MAX(id) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity!= 'Send reminder' AND timestamp > event_log.timestamp)
SELECT COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity = 'Send reminder' AND id IN ( SELECT MAX(id) FROM event_log GROUP BY idcase )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Send reminder' ORDER BY timestamp DESC LIMIT 1;
SELECT COUNT(*) AS stuck_declarations FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase AND e1.timestamp < e2.timestamp WHERE e1.activity = 'Send reminder' AND e2.activity NOT LIKE 'Send reminder%'
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31' OR timestamp > '2018-03-31'
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31' OR timestamp > '2018-03-31' AND resource IS NOT NULL
SELECT DISTINCT resource FROM event_log WHERE timestamp!= DATE('2018-03-31') AND resource IS NOT NULL
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' AND resource IS NULL
SELECT resource FROM event_log WHERE timestamp >= '2018-03-31 00:00:00' AND timestamp < '2018-04-01 00:00:00' GROUP BY resource HAVING COUNT(*) = 0
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' GROUP BY resource HAVING COUNT(DISTINCT idcase) = 0
SELECT activity, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, count(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, count(*) as frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, COUNT(*) as count FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity NOT IN ('Request payment', 'Payment handled')
SELECT DISTINCT idcase FROM event_log WHERE id NOT IN ( SELECT MAX(id) FROM event_log WHERE activity = 'Payment handled' GROUP BY idcase )
SELECT activity, COUNT(DISTINCT resource) as num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT el1.activity AS previous_activity FROM event_log el1 JOIN event_log el2 ON el1.id = el2.id - 1 WHERE el1.activity = 'Send reminder' ORDER BY el1.timestamp;
SELECT activity, timestamp FROM event_log WHERE id IN ( SELECT id FROM event_log WHERE activity = 'Send reminder' ) ORDER BY timestamp;
SELECT el1.activity AS previous_activity FROM event_log el1 JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp < el2.timestamp WHERE el2.activity = 'Send reminder' ORDER BY el1.timestamp;
SELECT idcase, COUNT(*) AS num_events, COUNT(*)/ (SELECT COUNT(*) FROM event_log) AS percentage FROM event_log GROUP BY idcase HAVING COUNT(*) > 0 ORDER BY num_events DESC;
SELECT count(*) AS num_events, num_events AS event_count, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY num_events ORDER BY num_events;
SELECT count(idcase) AS num_events, count(distinct idcase) AS num_cases FROM event_log GROUP BY count(idcase) ORDER BY num_events;
SELECT count(*), idcase, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY idcase, count(*) ORDER BY count(*) DESC;
SELECT COUNT(*) as num_actions, COUNT(DISTINCT idcase) as num_declarations FROM event_log GROUP BY COUNT(*) ORDER BY num_actions;
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase;
SELECT AVG(total_cost) FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(total_cost) AS mean_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(total_cost) AS mean_total_cost FROM ( SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase ) AS case_costs
SELECT AVG(cost) FROM event_log GROUP BY idcase
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS mean_cost FROM event_log GROUP BY resource
SELECT e.name, AVG(el.cost) AS mean_cost FROM event_log el JOIN employees e ON el.idcase = e.id GROUP BY e.name
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource, COUNT(*) as frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10;
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource, COUNT(*) as event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) as count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT strftime('%Y-%m-%d', timestamp), count(*) FROM event_log GROUP BY strftime('%Y-%m-%d', timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS occurrences FROM event_log GROUP BY DATE(timestamp) ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(*) AS count_actions FROM event_log GROUP BY DATE(timestamp)
SELECT idcase, activity, resource1, resource2 FROM ( SELECT idcase, activity, resource, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource1, resource AS resource2 FROM event_log ) AS t WHERE resource1 IS NOT NULL AND resource1 <> resource2;
SELECT idcase, activity, resource1, resource2 FROM ( SELECT idcase, activity, resource, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource1, LAG(resource, 1, NULL) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS resource2 FROM event_log ) AS t WHERE resource1 IS NOT NULL AND resource1 <> resource2;
SELECT idcase, activity FROM ( SELECT idcase, activity, LAG(resource) OVER (PARTITION BY idcase, activity ORDER BY timestamp) AS prev_resource FROM event_log ) AS subquery WHERE resource!= prev_resource;
SELECT el1.idcase, COUNT(el2.id) AS num_events_before_declaration FROM event_log el1 LEFT JOIN event_log el2 ON el1.idcase = el2.idcase AND el1.timestamp > el2.timestamp WHERE el1.activity = 'Declaration final approved by director' GROUP BY el1.idcase
SELECT idcase, COUNT(*) - 1 AS num_preceding_events FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase
SELECT idcase, count(*) AS num_interventions FROM event_log WHERE activity = 'Declaration final approved by director' GROUP BY idcase
SELECT activity, count(*) FROM event_log WHERE activity IN ('Declaration approved by supervisor', 'Permit rejected by employee') AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT el1.id, el1.activity AS permit_submitted, el1.timestamp AS permit_submitted_timestamp, el2.id, el2.activity AS permit_approved, el2.timestamp AS permit_approved_timestamp, TIMESTAMPDIFF(SECOND, el1.timestamp, el2.timestamp) AS time_interval FROM event_log el1 JOIN event_log el2 ON el1.id < el2.id WHERE el1.activity = 'Permit submitted by employee' AND el2.activity = 'Permit approved by administration';
WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) as duration FROM RankedEvents WHERE activity IN ('Employee requests permit', 'Permit approved by administration') ORDER BY idcase;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) WHERE activity = next_activity;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) WHERE activity = next_activity;
SELECT idcase FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS subquery WHERE activity = next_activity;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) AS t WHERE activity = next_activity AND activity!= 'initial' -- assuming 'initial' is the first activity
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT idcase FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity;
SELECT idcase, activity FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity;
SELECT idcase, activity, timestamp FROM event_log WHERE id IN ( SELECT id FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ) ORDER BY idcase, activity, timestamp;
SELECT idcase, activity FROM ( SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity;
SELECT idcase FROM ( SELECT idcase, activity, COUNT(CASE WHEN activity = LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) THEN 1 ELSE NULL END) AS consecutive_count FROM event_log ) AS subquery WHERE consecutive_count > 1
SELECT idcase FROM ( SELECT idcase, activity, timestamp, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log ) AS subquery WHERE activity = prev_activity GROUP BY idcase HAVING COUNT(*) >= 2;
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%final approved by supervisor%';
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT activity) > 1;
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%budget%';
SELECT DISTINCT(resource) FROM event_log WHERE activity LIKE '%budget owner%'
