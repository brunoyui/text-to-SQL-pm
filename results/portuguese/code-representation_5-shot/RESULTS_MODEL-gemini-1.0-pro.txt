SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) AS "Quantidade de Eventos", resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Número de ocorrências", resource AS "Recurso" FROM event_log GROUP BY resource ORDER BY "Número de ocorrências" DESC;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter';
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' AND activity = 'Finalizado';
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT select idcase from event_log GROUP BY idcase HAVING max(timestamp) < '2018-03-01'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-03-01' AND '2018-04-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, SUM(cost) FROM event_log GROUP BY resource
SELECT * FROM event_log WHERE cost > 2.225
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) > 2.225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT * FROM event_log WHERE cost > 2.225
SELECT idcase FROM event_log WHERE cost > 2.225
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_actions FROM event_log WHERE activity = 'process statement' GROUP BY resource ORDER BY total_actions DESC LIMIT 5;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count_events FROM event_log GROUP BY resource ORDER BY count_events DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(*) AS count_actions FROM event_log GROUP BY resource ORDER BY count_actions DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento')
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 10;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity ORDER BY count DESC;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%declaração%';
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20;
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20)
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20)
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5)
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5 );
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) desc LIMIT 5)
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log GROUP BY resource ORDER BY num_declaracoes DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5 );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5 );
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource;
SELECT COUNT(*) AS "Execuções da atividade 'Início da viagem'", resource FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(*) AS "Execuções da atividade 'Início da viagem'", resource FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-01-01' GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT id) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_ocorrencias FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY num_ocorrencias DESC;
SELECT COUNT(*) AS "Total de Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY "Total de Ocorrências" DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.resource = 'Sara' AND e.activity <> 'Requisição de pagamento' ORDER BY e1.start_date DESC;
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity <> 'requisição de pagamento';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.resource = 'Sara' AND e.activity <> 'Requisição de pagamento' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' ORDER BY e1.start_date DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND resource = 'Sara'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase, COUNT(*) AS "num_activities" FROM event_log GROUP BY idcase ORDER BY "num_activities" DESC LIMIT 10;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase ORDER BY num_actions DESC LIMIT 10;
SELECT As ações mais comuns no processamento de declarações são: * **Seleção:** Recuperar dados de uma tabela com base em critérios específicos. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela. * **Criação de tabela:** Criar uma nova tabela no banco de dados. * **Modificação de tabela:** Alterar a estrutura de uma tabela existente. * **Exclusão de tabela:** Remover uma tabela do banco de dados. * **Criação de índice:** Criar um índice em uma tabela para melhorar o desempenho das consultas. * **Exclusão de índice:** Remover um índice de uma tabela. * **Criação de gatilho:** Criar um gatilho que executa uma ação específica quando um evento ocorre no banco de dados. * **Exclusão de gatilho:** Remover um gatilho do banco de dados.
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN ( SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) DESC LIMIT 10 ) ORDER BY COUNT(activity) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase;
SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase
SELECT SUM(cost) as total_cost, idcase from event_log group by idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase
SELECT 1
SELECT idcase, SUM(cost) FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS count_actions FROM event_log GROUP BY resource HAVING count_actions >= 100 ORDER BY count_actions DESC
SELECT el.idcase, el.activity, el.timestamp, el.resource, el.cost FROM event_log AS el ORDER BY el.idcase, el.timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id FROM event_log ORDER BY idcase, timestamp
SELECT idcase, id, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT * FROM event_log ORDER BY idcase, timestamp
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Ocorrências", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Quantidade de Ocorrências" DESC;
SELECT COUNT(*) AS "Número de aprovações", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT activity, count(*) AS count_activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, COUNT(DISTINCT idcase) AS total_cases FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_execution_date FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT e1.idcase) AS "Quantidade de casos com 'Declaração aprovada pelo supervisor'" FROM event_log e1 JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', e2.timestamp) IN ('2017', '2018'); SELECT COUNT(DISTINCT e1.idcase) AS "Quantidade de casos com 'Permissão rejeitada pelo funcionário'" FROM event_log e1 JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', e2.timestamp) IN ('2017', '2018');
SELECT COUNT(DISTINCT id) AS "Ocorrências da atividade 'declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' UNION SELECT COUNT(DISTINCT id) AS "Ocorrências da atividade 'permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018';
SELECT COUNT(DISTINCT id) AS "Eventos com atividade 'Declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT id) AS "Eventos com atividade 'Permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(*) AS "Número de vezes que a atividade 'declaração aprovada pelo supervisor' foi executada em 2017" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(*) AS "Número de vezes que a atividade 'permissão rejeitada pelo funcionário' foi executada em 2018" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Aprovação final pelo supervisor' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp AND e1.timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, MAX(timestamp) AS end_date, id FROM event_log GROUP BY activity ORDER BY end_date;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp
SELECT activity, timestamp, id FROM event_log WHERE idcase = '12345' ORDER BY timestamp;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaração requisitada pelo funcionário'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'statement_request';
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT activity, COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity, count(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada por um diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase, MAX(timestamp) - MIN(timestamp) FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) FROM event_log group by idcase
SELECT idcase, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log GROUP BY idcase;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log GROUP BY idcase
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeição%'
SELECT * FROM event_log WHERE activity LIKE '%rejeição%'
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = ( SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1 ) ) AND cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS "Fim da viagem", strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS "Declaração rejeitada pelo funcionário", strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS "Pagamento efetuado", f.activity FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) AS f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) AS f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS "Fim da viagem", strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS "Declaração rejeitada pelo funcionário", strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS "Pagamento efetuado" FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log WHERE activity LIKE '%intervenção%' GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', CASE WHEN p.activity = 'Fim da viagem' THEN p.activity WHEN x.activity = 'Declaração rejeitada pelo funcionário' THEN x.activity WHEN y.activity = 'Pagamento efetuado' THEN y.activity END AS 'Atividade final' FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS "Tempo decorrido", p.activity AS "Atividade final" FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase WHERE p.activity IN ('fim da viagem', 'declaração rejeitada pelo funcionário', 'pagamento efetuado');
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT e.idcase, e.activity, strftime('%s', e.timestamp) - strftime('%s', s.start_time) AS time_elapsed FROM event_log e JOIN (SELECT idcase, MIN(timestamp) AS start_time FROM event_log GROUP BY idcase) s ON e.idcase = s.idcase WHERE e.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT idcase, MIN(timestamp) AS inicio_processamento, MAX(timestamp) AS fim_processamento, ( MAX(timestamp) - MIN(timestamp) ) AS tempo_processamento FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem', 'Rejeição', 'Pagamento efetuado') GROUP BY idcase ORDER BY tempo_processamento DESC;
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT e.idcase, e.activity, e.timestamp, e.resource, e.cost FROM event_log AS e WHERE e.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' )
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase, activity ORDER BY timestamp)) AS avg_duration, activity FROM event_log WHERE activity IS NOT NULL GROUP BY activity;
SELECT AVG(timestamp - timestamp) FROM event_log GROUP BY activity
SELECT AVG(timestamp_end - timestamp_start) AS avg_duration FROM event_log WHERE timestamp_end IS NOT NULL AND timestamp_start IS NOT NULL;
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration, activity FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log WHERE activity IS NOT NULL GROUP BY activity
SELECT AVG(timestamp - timestamp) FROM event_log
SELECT AVG(duration) AS average_duration, activity FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, (JULIANDAY(next_timestamp) - JULIANDAY(timestamp)) * 24 * 60 * 60 AS duration FROM event_log ) WHERE next_timestamp IS NOT NULL GROUP BY activity;
SELECT activity, AVG(timestamp - LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(JULIANDAY(timestamp) - JULIANDAY(prev_timestamp)) AS avg_duration FROM ( SELECT *, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_timestamp FROM event_log ) AS subquery GROUP BY activity;
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration) FROM event_log GROUP BY activity;
SELECT AVG(cost) AS average_cost, activity FROM event_log GROUP BY activity;
SELECT AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration, activity FROM event_log GROUP BY activity;
SELECT activity, AVG(timestamp - LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem') GROUP BY activity
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log) GROUP BY idcase
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase, cost FROM event_log ORDER BY cost DESC LIMIT 10
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = ( SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1 );
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT MAX(SUM(cost)) FROM event_log GROUP BY idcase)
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)
SELECT * FROM "event_log" WHERE "activity" = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT COUNT(*) AS "total_executions", activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT e.cost, e.activity FROM event_log AS e ORDER BY e.cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT event_log.cost, event_log.activity FROM event_log ORDER BY event_log.cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost DESC;
SELECT resource, COUNT(*) AS total_interventions_without_cost FROM event_log WHERE cost IS NULL GROUP BY resource ORDER BY total_interventions_without_cost DESC;
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity LIKE '%permissão%';
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost FROM event_log AS e1 JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase) AS e2 ON e1.idcase = e2.idcase AND e1.timestamp = e2.min_timestamp
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%permissão%' GROUP BY activity ORDER BY count_activity DESC;
SELECT * FROM event_log WHERE activity LIKE '%permitida%'
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas';
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' OR resource = 'Thomas'
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara';
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*) AS "Quantidade de vezes", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource ORDER BY "Quantidade de vezes" DESC;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*) AS "Número de rejeições", resource AS "Funcionário" FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log), DurationEvents AS (SELECT activity, (strftime('%s', next_timestamp) - strftime('%s', timestamp)) as duration FROM RankedEvents WHERE next_timestamp IS NOT NULL) SELECT activity, AVG(cost) AS average_cost FROM DurationEvents WHERE activity NOT IN ('Início da viagem', 'Fim da viagem') GROUP BY activity
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) WHERE activity = next_activity;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 5
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log group by idcase having count(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase HAVING num_activities > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT DISTINCT activity, idcase FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 5 ORDER BY count DESC;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) > 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 5
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT Nenhuma das declarações fornecidas requer que uma ação seja executada mais de uma vez.
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING execution_count > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING execution_count > 1 ORDER BY execution_count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS count_allocation FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS intervention_count FROM event_log WHERE resource IS NOT NULL GROUP BY resource ORDER BY intervention_count DESC;
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' AND activity = 'intervention' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa')
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa') AND activity LIKE '%intervenção%'
SELECT activity, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE NOT resource IN ('Joshua', 'Teresa') )
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date, MAX(timestamp) AS end_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE ( e.activity = 'Início da atividade' OR e.activity = 'Fim da atividade' ) AND e.timestamp BETWEEN e1.start_date AND e1.end_date AND e.idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND activity IN ('Início da viagem', 'Fim da viagem');
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' INTERSECT SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado';
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01' AND activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 );
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03')
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01' AND activity = ( SELECT activity FROM event_log WHERE idcase = event_log.idcase ORDER BY timestamp LIMIT 1 );
SELECT * FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2017-03-01' GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01' AND activity LIKE '%Intervenção%'
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND idcase = event_log.idcase );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp LIKE '2017-03%'
SELECT "idcase" FROM "event_log" WHERE "activity" = 'Início da viagem' AND "timestamp" IN ( SELECT MIN("timestamp") FROM "event_log" WHERE "activity" = 'Início da viagem' AND strftime('%Y-%m', "timestamp") = '2017-03' )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) = ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' ) );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-04-01';
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5;
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource HAVING count_resource > 5 ORDER BY count_resource DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5;
SELECT resource FROM event_log GROUP BY resource, idcase HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 5;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource ORDER BY num_occurrences DESC;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS total_aprovacoes FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_aprovacoes DESC LIMIT 10;
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%Aprovação%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%responsável pelo orçamento%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovado%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%responsável pelo orçamento%';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count DESC;
SELECT resource, count(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING num_occurrences > 2 ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING event_count > 2;
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource HAVING num_declaracoes > 2 ORDER BY num_declaracoes DESC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' and '2017-05-10'
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT COUNT(DISTINCT resource) AS num_resources, idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) from event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = (SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase)
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase from event_log where resource = 'Christopher' group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS event_count FROM ( SELECT resource, idcase, SUM(cost) AS total_cost FROM event_log GROUP BY resource, idcase HAVING total_cost = 0 ) GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(CASE WHEN cost IS NULL THEN 1 END) AS null_cost_events FROM event_log GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS intervencoes_sem_custo FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT resource, COUNT(*) AS intervencoes_sem_custo FROM event_log WHERE cost IS NULL GROUP BY resource
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity LIKE '%permissão rejeitada pelo diretor%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada pelo diretor%'
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, SUM(cost) AS total_cost FROM event_log GROUP BY event_day
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, SUM(cost) AS total_cost FROM event_log GROUP BY event_day
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date;
SELECT * FROM event_log WHERE cost IN (SELECT DISTINCT cost FROM event_log ORDER BY cost DESC LIMIT 5)
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, SUM(cost) FROM event_log GROUP BY event_day
SELECT activity FROM event_log WHERE cost > 1000 AND resource IN ( SELECT resource FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' );
SELECT activity, cost FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND ( resource LIKE '%supervisor%' OR resource LIKE '%diretor%' );
SELECT activity FROM event_log WHERE (activity LIKE '%supervisor%' OR activity LIKE '%diretor%') AND cost > 1000
SELECT activity FROM event_log WHERE cost > 1000 AND ( activity LIKE '%supervisor%' OR activity LIKE '%diretor%' );
SELECT activity FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' AND cost > 1000;
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase" ORDER BY "event_count" DESC;
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase" ORDER BY "event_count" DESC;
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase"
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT resource, COUNT(*) AS task_count FROM event_log WHERE activity = 'task_assigned' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log group by resource
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS task_count FROM event_log WHERE activity LIKE '%task%' GROUP BY resource;
SELECT COUNT(*) AS "number_of_actions", resource FROM event_log GROUP BY resource
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT COUNT(DISTINCT activity) AS "Número de Atividades", idcase AS "ID do Caso" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase ORDER BY "Número de Atividades" DESC;
SELECT COUNT(DISTINCT activity), COUNT(DISTINCT idcase) FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT **Ações mais comuns no processamento de declarações:** * **Seleção:** Recuperar dados específicos de uma tabela. * **Agregação:** Resumir dados usando funções como COUNT, SUM e AVG. * **Agrupamento:** Organizar dados em grupos com base em valores comuns. * **Ordenação:** Classificar dados em uma ordem específica. * **Filtragem:** Selecionar dados que atendam a critérios específicos. * **Junção:** Combinar dados de várias tabelas. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela.
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Permissão final aprovada pelo supervisor' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp;
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) AS duration FROM RankedEvents WHERE activity = 'Permissão final aprovada pelo supervisor' AND next_timestamp IN ( SELECT timestamp FROM RankedEvents WHERE activity = 'Início da viagem' );
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) AS duration FROM RankedEvents WHERE activity = 'Declaração aprovada pelo supervisor';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Início da viagem' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase = event_log.idcase );
SELECT COUNT(*) FROM event_log AS el WHERE el.activity = 'Declaração aprovada pelo supervisor' AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase = el.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < ( SELECT MIN(timestamp) FROM event_log WHERE activity = 'Início da viagem' );
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-12-12' AND '2018-01-01'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12' UNION SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-12-12' AND '2017-12-14';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59'
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp AND e1.timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT e1.activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp AND e1.timestamp >= '2017-12-12' AND e1.timestamp <= '2017-12-12 23:59:59' GROUP BY e1.activity
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT id), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_actions FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS activity_count FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT DISTINCT activity FROM event_log WHERE resource <> 'Virginia';
SELECT activity FROM event_log WHERE resource <> 'Virginia' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE resource NOT IN ( SELECT resource FROM event_log WHERE resource = 'Virginia' );
SELECT Nenhuma das declarações fornecidas requer que uma ação seja executada mais de uma vez.
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejeitada%' );
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%rejeitada%' );
SELECT AVG(cost) FROM event_log WHERE idcase IN (SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejeitada%')
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Rejeição' )
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT idcase, (JULIANDAY(MAX(timestamp)) - JULIANDAY(MIN(timestamp))) AS duracao_dias FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY idcase
SELECT idcase, ( SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1 ) - ( SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = e.idcase ORDER BY timestamp ASC LIMIT 1 ) AS duration FROM event_log e WHERE activity = 'Declaração aprovada pelo supervisor';
SELECT e1.idcase, ( SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = e1.idcase ORDER BY timestamp DESC LIMIT 1 ) - ( SELECT timestamp FROM event_log WHERE activity = 'Declaração recebida pelo supervisor' AND idcase = e1.idcase ORDER BY timestamp ASC LIMIT 1 ) AS duration FROM event_log e1 WHERE e1.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.idcase;
SELECT As declarações rejeitadas pelo supervisor são: 1. SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp 2. SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp 3. SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp 4. SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp 5. SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT e1.idcase, e2.timestamp - e1.timestamp AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração aprovada pelo pré-aprovador' ORDER BY e1.idcase;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de casos aprovados", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY resource ORDER BY "Quantidade de casos aprovados" DESC;
SELECT MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT e1.idcase, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource, e1.timestamp;
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource
SELECT A declaração fornecida não contém a consulta SQL necessária para responder à pergunta.
SELECT e1.idcase, e1.timestamp AS data_fim_viagem, e1.resource AS funcionario_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase";
SELECT COUNT(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT count(*) FROM event_log group by idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'travel' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp
SELECT event_log.id, event_log.activity, event_log.timestamp, event_log.resource FROM event_log WHERE event_log.activity = 'Envio de lembrete' ORDER BY event_log.timestamp;
SELECT el.idcase, el.activity, el.resource, el.timestamp, MAX(el.timestamp) OVER (PARTITION BY el.idcase) AS max_timestamp FROM event_log AS el WHERE el.activity = 'Envio de lembrete' ORDER BY max_timestamp DESC;
SELECT e.idcase, e.id, e.resource, e.timestamp FROM event_log e WHERE e.activity = 'Envio de lembrete' ORDER BY e.timestamp
SELECT e.idcase, e.resource, e.id, e.timestamp FROM event_log e WHERE e.activity = 'Envio de lembrete' ORDER BY e.timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT idcase) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT As declarações que executaram atividades do mesmo tipo de forma seguida são: * SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity * SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%tratamento de declarações%'
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%';
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT * FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaração%' );
SELECT * FROM event_log WHERE activity LIKE '%declaração%'
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT AVG(cost) FROM event_log GROUP BY activity
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaração rejeitada pelo diretor%'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaração rejeitada pelo diretor%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pela administração';
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log WHERE cost IS NOT NULL
SELECT AVG(cost) FROM event_log
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS "Number of Cases", resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log GROUP BY resource
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log GROUP BY resource HAVING num_declaracoes > 3 ORDER BY num_declaracoes DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource from event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity LIKE '%Requisição de pagamento%' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase, COUNT(*) AS total_activities FROM event_log GROUP BY idcase ORDER BY total_activities;
SELECT idcase, COUNT(DISTINCT resource) AS num_actions FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_actions;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT idcase, timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp;
SELECT COUNT(*) AS "Quantidade de Execuções" FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Closed' ORDER BY timestamp ASC;
SELECT DISTINCT DATE(timestamp) AS data_execucao FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY data_execucao;
SELECT DISTINCT DATE(timestamp) AS data FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada por funcionário') ORDER BY data ASC;
SELECT e1.timestamp, e1.activity, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY e1.timestamp
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS "Quantidade de intervenções" FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource ORDER BY resource
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%' GROUP BY activity HAVING COUNT(*) > 3;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE '%processamento de declaração%' AND cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' ORDER BY resource
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva'
SELECT resource FROM event_log WHERE activity = 'save'
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT activity FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12' );
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' )
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) = '2018-04-12' ) GROUP BY activity;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY timestamp
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e1.id, e1.activity, e1.timestamp AS end_date FROM event_log e1 WHERE e1.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e1.timestamp;
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT id, activity, MAX(timestamp) AS end_date FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') GROUP BY id, activity ORDER BY end_date;
SELECT id, activity, MAX(timestamp) AS end_date FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') GROUP BY id, activity ORDER BY end_date;
SELECT e1.id, e1.activity, e1.timestamp AS end_date FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp ORDER BY e1.timestamp DESC;
SELECT id, activity, timestamp FROM event_log WHERE activity LIKE '%Aprovação final%' OR activity LIKE '%Aprovação de declaração por supervisor%' ORDER BY timestamp
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT activity, idcase, cost FROM event_log WHERE cost IS NOT NULL;
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT (*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final concedida pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT "timestamp" FROM "event_log" WHERE "activity" = 'Início da viagem' AND "resource" LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT DISTINCT DATE(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT e1.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Envio de lembrete' AND e1.timestamp < e2.timestamp GROUP BY e1.idcase, e1.activity
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, COUNT(*) FROM event_log GROUP BY activity ORDER BY COUNT (*) DESC **Atividades executadas e suas frequências:** * **Verificação de dados:** 100 vezes * **Análise de documentos:** 50 vezes * **Aprovação:** 25 vezes * **Rejeição:** 10 vezes * **Correção:** 5 vezes
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) AS "Número de eventos", resource AS "Recurso" FROM event_log WHERE activity NOT IN ('Fim da viagem') GROUP BY resource;
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) AS "Quantidade de eventos" FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT activity, count(*) AS count FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') GROUP BY activity
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem')
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração de viagem') GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log);
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY num_execucoes DESC LIMIT 1;
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log);
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT activity, resource, MAX(timestamp) from event_log group by activity, resource
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT e1.resource, e1.activity FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = e1.idcase );
SELECT e1.resource, e1.activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = e1.idcase );
SELECT e1.activity, e1.resource, e2.activity AS previous_activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.id, e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase, e2.resource AS resource_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT el.id, el.activity, el.timestamp, el.resource, el.cost, el.idcase, el2.resource AS resource_fim_viagem FROM event_log el JOIN event_log el2 ON el.idcase = el2.idcase AND el2.activity = 'Fim da viagem' WHERE el.timestamp > el2.timestamp
SELECT e2.activity, e2.resource, e2.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Fim da viagem' AND e2.timestamp > e1.timestamp
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem' ORDER BY e1.idcase, e1.timestamp;
SELECT e1.activity AS evento_anterior, e1.resource AS responsavel_evento_anterior, e2.activity AS evento_posterior, e2.resource AS responsavel_evento_posterior FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp < e2.timestamp AND e1.activity = 'Fim da viagem'
SELECT e1.activity, e1.timestamp, e1.resource, e2.resource AS resource_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_fim ON el.idcase = el_fim.idcase WHERE el_fim.activity = 'Fim da viagem' AND el.timestamp > el_fim.timestamp
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_fim ON el.idcase = el_fim.idcase WHERE el_fim.activity = 'Fim da viagem' AND el.timestamp > el_fim.timestamp
SELECT el.activity, el.resource, el.timestamp FROM event_log el JOIN event_log el2 ON el.idcase = el2.idcase WHERE el2.activity = 'Fim da viagem' AND el.timestamp > el2.timestamp ORDER BY el.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase, e2.resource AS responsible_for_end_of_trip FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.activity, e1.resource, e1.timestamp, e2.resource AS fim_da_viagem_resource, e2.timestamp AS fim_da_viagem_timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.activity, e1.timestamp, e1.resource, e2.resource AS resource_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity AS "Ação após o fim da viagem", e1.resource AS "Pessoa responsável" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_eventos FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource NOT IN (SELECT resource FROM event_log WHERE activity = 'Fim da viagem')
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource NOT IN (SELECT resource FROM event_log WHERE activity = 'Fim da viagem')
SELECT COUNT(*) AS "Quantidade de Eventos", e1."resource" AS "Recurso" FROM "event_log" AS e1 WHERE e1."activity" <> 'Fim da viagem' GROUP BY e1."resource"
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, count(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Eventos", resource FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource NOT IN (SELECT resource FROM event_log WHERE activity = 'Fim da viagem')
SELECT COUNT(*), resource FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp;
SELECT idcase, MIN(timestamp) AS first_action_timestamp FROM event_log GROUP BY idcase ORDER BY first_action_timestamp
SELECT idcase FROM event_log ORDER BY timestamp ASC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1;
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, COUNT(*) AS "count" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "count" DESC LIMIT 1
SELECT resource, COUNT(*) AS "total_events" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "total_events" DESC LIMIT 1;
SELECT resource, COUNT(*) AS "total_execucoes" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "total_execucoes" DESC LIMIT 1
SELECT resource, COUNT(*) AS "Número de aprovações" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Número de aprovações" DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_declaracoes_aprovadas FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_declaracoes_aprovadas DESC LIMIT 1;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'First Activity' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity = 'Start' GROUP BY resource;
SELECT resource, COUNT(*) AS first_activity_count FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase ) GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Número de Declarações" FROM event_log WHERE activity = 'Primeira Ação' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Start' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT COUNT(DISTINCT idcase) AS "Número de Casos", DATE(timestamp) AS "Data" FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY DATE(timestamp) ORDER BY DATE(timestamp);
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY event_day
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY event_day
SELECT idcase, COUNT(*) AS event_count, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING event_count >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT idcase, (strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS duration_seconds FROM event_log GROUP BY idcase ORDER BY duration_seconds DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, MAX(timestamp) - MIN(timestamp) AS case_duration FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 5;
SELECT idcase, COUNT(*) AS total_execucoes, (SELECT MAX(timestamp) - MIN(timestamp) FROM event_log WHERE idcase = el.idcase) AS duracao_caso FROM event_log AS el GROUP BY idcase ORDER BY total_execucoes DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) ) GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(*) AS total_actions FROM event_log GROUP BY idcase ORDER BY total_actions DESC LIMIT 5;
SELECT idcase, SUM(cost) AS total_cost, SUM(timestamp - timestamp_start) AS total_time FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 5;
SELECT select strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log where idcase in (select idcase from event_log group by idcase having count(*) IN (select count(*) from event_log group by idcase order by count(*) desc limit 5) and count(*) >= 20) group by idcase
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20) GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT idcase, resource, COUNT(*) AS count_activities FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Pagamento efetuado' GROUP BY idcase, resource ORDER BY count_activities DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE timestamp < '2018-01-01' AND activity = 'Pagamento efetuado'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) AS num_execucoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS "num_permissao_activities" FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT count(DISTINCT idcase) AS "Quantidade de Ocorrências", activity AS "Atividade" FROM event_log WHERE activity LIKE '%permissão%' GROUP BY activity;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS permission_count FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT activity, COUNT(*) AS count_permissao FROM event_log WHERE activity LIKE '%declaração%' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity LIKE '%permissão%' ) GROUP BY activity
SELECT DISTINCT e1.idcase, e1.resource FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER BY e2.timestamp;
SELECT COUNT(DISTINCT e1.idcase) AS "Quantidade de Casos", e1.resource AS "Recurso" FROM event_log AS e1 JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' GROUP BY e1.resource ORDER BY "Quantidade de Casos" DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS num_casos, resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp GROUP BY e1.resource;
SELECT COUNT(DISTINCT e1.idcase) AS "Número de Declarações Rejeitadas", e1.resource AS "Supervisor Responsável" FROM event_log e1 JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' GROUP BY e1.resource ORDER BY "Número de Declarações Rejeitadas" DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity ORDER BY case_count DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", activity AS "Atividade" FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", activity AS "Atividade" FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) AND activity LIKE 'R%';
SELECT **Ações mais comuns no processamento de declarações:** * Seleção * Agregação * Filtragem * Ordenação * Agrupamento **Ações de processamento de uma declaração, nomeadas com um rótulo iniciando com a letra 'E':** * Execução * Envio * Entrada * Exame **Ações de rejeição aparecem em quantas declarações a cada dia:** SELECT strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY strftime('%Y-%m-%d', timestamp) **Quantas ações foram executadas a cada dia no processamento das declarações:** SELECT strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(*) FROM event_log GROUP BY event_day **Quais funcionários decidiram por rejeitar uma declaração na ação de pré-aprovação:** SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' **Quais ações iniciando com letra 'R' ocorreram depois de ações que iniciando com a letra 'D' durante o processamento de uma declaração:** SELECT e2.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'D%' AND e2.activity LIKE 'R%' ORDER BY e1.timestamp, e2.timestamp
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY count DESC;
SELECT activity, resource, COUNT(*) AS execution_count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY count DESC;
SELECT resource, activity, COUNT(*) AS count FROM event_log GROUP BY resource, activity ORDER BY resource, activity;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY activity, count DESC;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log GROUP BY activity ORDER BY count_cases DESC;
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y', timestamp) = '2018' AND strftime('%m', timestamp) BETWEEN '01' AND '06';
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y-%m', timestamp) BETWEEN '2018-01' AND '2018-06';
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT idcase FROM event_log WHERE resource = 'Alexis' GROUP BY idcase ORDER BY idcase
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' ) GROUP BY activity;
SELECT count(DISTINCT idcase), activity FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp >= '2018-03-12' AND timestamp < '2018-03-13' ) GROUP BY activity ORDER BY COUNT(DISTINCT idcase) DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Finalização do caso' AND timestamp LIKE '2018-03-12%' ) GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-03-12') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE activity LIKE 'permissão%' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase HAVING activity LIKE 'permissão%' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND id = ( SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase )
SELECT COUNT(*) FROM event_log WHERE activity LIKE 'permissão%' AND id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' AND id IN (SELECT MIN(id) FROM event_log GROUP BY idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%permissão%' AND timestamp IN ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e LEFT JOIN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AS e1 ON e1.idcase = e.idcase WHERE e1.idcase IS NULL
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT DISTINCT idcase FROM event_log where activity = 'Pagamento efetuado' OR activity = 'Requisição de pagamento')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e.idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Pagamento efetuado' ) ORDER BY e1.start_date DESC LIMIT 10;
SELECT timestamp, activity, resource FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT activity, timestamp, resource, cost, idcase FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de declaração pelo funcionário') ORDER BY timestamp, resource;
SELECT id, activity, timestamp, resource, cost, idcase FROM event_log WHERE activity IN ('Início da viagem', 'Requisição do funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Quantidade de vezes", resource AS "Funcionário" FROM event_log WHERE activity = 'Salvar declaração de viagem' GROUP BY resource ORDER BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS instances FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_finalization_activities DESC;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS total_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS total_finalization_activities FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource;
SELECT COUNT(*) as 'Quantidade de vezes', resource FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_finalization_activities DESC;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource ORDER BY case_count DESC;
SELECT resource, COUNT(DISTINCT idcase) AS instance_count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource, idcase ) AS subquery GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND id IN ( SELECT MIN(id) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY idcase ) GROUP BY resource
SELECT resource, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Número de declarações" FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT idcase, COUNT(*) AS num_atividades FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_atividades FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase ORDER BY num_atividades DESC;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp < e2.timestamp;
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity != 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity != 'Fim da viagem' GROUP BY resource;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase;
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC
SELECT idcase, MIN(timestamp) AS first_activity_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY first_activity_timestamp;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, MIN(timestamp) AS start_time FROM RankedEvents WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY start_time;
SELECT idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY first_timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT e1.idcase FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' AND e2.activity = 'Início do processamento da declaração' ORDER BY e2.timestamp
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Início da viagem' AND e1.timestamp > '2018-03-31' AND e1.activity <> 'Fim da viagem';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado') AND strftime('%Y-%m-%d', timestamp) <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1;
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost), COUNT(DISTINCT resource) FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost), COUNT(DISTINCT resource) FROM event_log GROUP BY idcase;
SELECT COUNT(DISTINCT resource) AS num_resources, idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 2 AND MIN(SUBSTR(activity, 1, 9)) = 'permissão';
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%permissão%'
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING num_permissoes > 1;
SELECT id FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) DESC) ORDER BY timestamp DESC
SELECT id FROM event_log ORDER BY timestamp DESC
SELECT id FROM event_log GROUP BY idcase ORDER BY MAX(timestamp)
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) ) ORDER BY timestamp DESC;
SELECT idcase, MAX(id) FROM event_log GROUP BY idcase ORDER BY MAX(timestamp)
SELECT id FROM event_log ORDER BY timestamp DESC GROUP BY idcase
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%funcionário%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%administração%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%pré-aprovador%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%diretor%';
SELECT CASE WHEN activity LIKE '%funcionário%' THEN 'funcionário' WHEN activity LIKE '%supervisor%' THEN 'supervisor' WHEN activity LIKE '%administração%' THEN 'administração' WHEN activity LIKE '%pré-aprovador%' THEN 'pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'diretor' ELSE 'outro' END AS grupo, COUNT(DISTINCT idcase) AS quantidade_casos FROM event_log GROUP BY grupo ORDER BY quantidade_casos DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", CASE WHEN activity LIKE '%funcionário%' THEN 'Funcionário' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administração%' THEN 'Administração' WHEN activity LIKE '%pré-aprovador%' THEN 'Pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'Responsável pelo Orçamento' WHEN activity LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END AS "Grupo" FROM event_log GROUP BY "Grupo" ORDER BY "Quantidade de Casos" DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%funcionário%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%administração%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%pré-aprovador%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%diretor%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%funcionário%' GROUP BY idcase; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%supervisor%' GROUP BY idcase; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%administração%' GROUP BY idcase; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%pré-aprovador%' GROUP BY idcase; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' GROUP BY idcase; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%diretor%' GROUP BY idcase;
SELECT activity, CASE WHEN activity LIKE '%funcionário%' THEN 'Funcionário' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administração%' THEN 'Administração' WHEN activity LIKE '%pré-aprovador%' THEN 'Pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'Responsável pelo orçamento' WHEN activity LIKE '%diretor%' THEN 'Diretor' END AS grupo, COUNT(*) AS quantidade FROM event_log GROUP BY activity ORDER BY grupo, quantidade DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY activity ORDER BY count DESC;
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT DISTINCT(idcase) FROM event_log WHERE activity = 'Fim da viagem' AND EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND timestamp > event_log.timestamp );
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT select e1.activity, e1.resource, e1.idcase from event_log AS e1 inner join event_log AS e2 on e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' and e1.timestamp > e2.timestamp
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND id IN (SELECT MAX(id) FROM event_log GROUP BY idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Envio de lembrete' AND e1.activity LIKE '%declaração%' AND e1.timestamp < e2.timestamp;
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31'
SELECT DISTINCT resource FROM event_log WHERE resource NOT IN ( SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' );
SELECT DISTINCT resource FROM event_log WHERE timestamp NOT BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59'
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' GROUP BY resource HAVING COUNT(*) = 0;
SELECT resource FROM event_log WHERE activity = 'Início da viagem' AND timestamp <= '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Finalização da viagem' AND timestamp <= '2018-03-31' );
SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' GROUP BY resource HAVING COUNT(DISTINCT activity) = 0;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'end' ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'finalizado' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT DISTINCT idcase FROM event_log where activity = 'Fim da viagem' EXCEPT SELECT DISTINCT idcase FROM event_log where activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC;
SELECT count(*) AS "event_count", idcase FROM event_log GROUP BY idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT count (*), count (idcase) FROM event_log group by count (idcase)
SELECT COUNT(*) AS event_count, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY event_count
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource;
SELECT resource, AVG(cost) AS average_cost FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 10
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Execução da atividade registrada' GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity LIKE '%declaração de viagem%' GROUP BY resource ORDER BY num_activities DESC LIMIT 10;
SELECT count (*), date(timestamp) FROM event_log group by date(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS num_activities FROM event_log GROUP BY date ORDER BY date;
SELECT COUNT(*) AS "number_of_actions", DATE(timestamp) AS "date" FROM event_log GROUP BY DATE(timestamp) ORDER BY DATE(timestamp);
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 1 ) GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' );
SELECT idcase, COUNT(*) AS num_interventions FROM event_log WHERE activity LIKE '%Declaração final aprovada pelo diretor%' GROUP BY idcase ORDER BY num_interventions DESC;
SELECT idcase, ( SELECT timestamp FROM event_log WHERE activity = 'permissão aprovada pela administração' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1 ) - ( SELECT timestamp FROM event_log WHERE activity = 'permissão requisitada pelo funcionário' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1 ) AS time_elapsed FROM event_log AS e WHERE e.activity = 'permissão requisitada pelo funcionário'
SELECT idcase, (SELECT timestamp FROM event_log WHERE activity = 'Permissão aprovada pela administração' AND idcase = e.idcase) - (SELECT timestamp FROM event_log WHERE activity = 'Permissão requisitada pelo funcionário' AND idcase = e.idcase) AS time_diff FROM event_log e WHERE activity IN ('Permissão requisitada pelo funcionário', 'Permissão aprovada pela administração') GROUP BY idcase
SELECT event_log1.timestamp AS timestamp_requisicao, event_log2.timestamp AS timestamp_aprovacao, (event_log2.timestamp - event_log1.timestamp) AS tempo_decorrido FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity LIKE '%requisitar permissão%' AND event_log2.activity LIKE '%aprovar permissão%' ORDER BY tempo_decorrido DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1;
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) WHERE activity = next_activity;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%retrabalho%'
SELECT DISTINCT(idcase) FROM ( SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log ) WHERE activity = next_activity;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase, activity;
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 1 );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1 AND MIN(timestamp) = MAX(timestamp)
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervisor%'
SELECT Não há informações sobre declarações rejeitadas pelo supervisor no texto fornecido.
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Budgeting'
