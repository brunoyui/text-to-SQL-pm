SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James';
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem' AND resource = 'James'
SELECT COUNT(*) AS "Quantidade de Eventos", resource AS "Recurso" FROM event_log GROUP BY resource;
SELECT COUNT(*) AS event_count, resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Número de ocorrências", resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT id), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT resource, count(*) AS action_count FROM event_log GROUP BY resource;
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' AND activity = 'closed';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-04-01' AND activity = 'Finalização';
SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT DISTINCT idcase FROM event_log WHERE timestamp IN ( SELECT MAX(timestamp) FROM event_log WHERE timestamp BETWEEN '2018-03-01' AND '2018-03-31' GROUP BY idcase );
SELECT idcase FROM event_log GROUP BY idcase HAVING max(timestamp) < '2018-03-01'
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-03-01' AND '2018-03-31'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-03-01' AND '2018-04-01'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource = 'Douglas';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo pré-aprovador' AND e2.activity = 'Declaração criada' AND e2.resource <> 'Douglas'
SELECT * FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' AND resource <> 'Douglas';
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT (DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_events FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS total_actions FROM event_log GROUP BY resource
SELECT * FROM event_log WHERE cost > 2.225
SELECT idcase FROM event_log WHERE cost > 2.225
SELECT DISTINCT idcase FROM event_log WHERE cost > 2.225;
SELECT **Ações mais comuns no processamento de declarações:** * **Seleção:** Recuperar dados específicos de uma tabela. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela. * **Agregação:** Resumir dados de várias linhas em uma única linha. * **Junção:** Combinar dados de várias tabelas. * **Ordenação:** Organizar dados em uma ordem específica. * **Filtragem:** Selecionar dados que atendam a critérios específicos.
SELECT id FROM event_log WHERE cost > 2.225
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource HAVING COUNT(*) = (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 1)
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS total_processamentos FROM event_log WHERE activity = 'processamento de declarações' GROUP BY resource ORDER BY total_processamentos DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 1;
SELECT resource, COUNT(*) AS count_events FROM event_log GROUP BY resource ORDER BY count_events DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY activity_count DESC;
SELECT resource, COUNT(*) AS count_actions FROM event_log GROUP BY resource ORDER BY count_actions DESC;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento')
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Requisição de pagamento');
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log GROUP BY activity ORDER BY count_activity DESC LIMIT 1;
SELECT activity, COUNT(*) AS occurrence_count FROM event_log GROUP BY activity ORDER BY occurrence_count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%declaração%' GROUP BY activity ORDER BY count DESC;
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017'
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT COUNT(*), activity FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-12-31' AND activity LIKE '%declaração%' GROUP BY activity ORDER BY count DESC;
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y', timestamp) = '2017';
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20
SELECT idcase FROM event_log group by idcase having count(*) <= 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 20
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20)
SELECT * FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 20)
SELECT * FROM event_log WHERE id IN (SELECT id FROM event_log GROUP BY id HAVING COUNT(*) <= 20)
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN (SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5)
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource ORDER BY case_count DESC LIMIT 5;
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource from event_log GROUP BY resource HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY resource ORDER BY COUNT(*) desc LIMIT 5)
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource ORDER BY count DESC LIMIT 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) IN ( SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY resource ORDER BY COUNT(DISTINCT idcase) DESC LIMIT 5 );
SELECT resource FROM event_log GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 5
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS num_execucoes FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource ORDER BY total_occurrences DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Start Travel' AND timestamp BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY resource
SELECT resource, COUNT(*) AS num_activities FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y', timestamp) = '2016' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(*) AS "Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Execuções", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de ocorrências", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT resource, COUNT(*) AS num_ocorrencias FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY num_ocorrencias DESC;
SELECT resource, COUNT(*) AS total_occurrences FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource ORDER BY total_occurrences DESC;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase, count(*) FROM event_log GROUP BY idcase HAVING count(*) > 20
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase ORDER BY event_count DESC LIMIT 1;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 1
SELECT idcase, COUNT(*) AS num_events FROM event_log GROUP BY idcase ORDER BY num_events DESC LIMIT 5;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' AND activity NOT IN ( SELECT activity FROM event_log WHERE activity = 'requisição de pagamento' );
SELECT idcase FROM event_log WHERE resource = 'Sara' AND activity <> 'requisição de pagamento';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'requisição de pagamento';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e.resource = 'Sara' ORDER BY e1.start_date DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento' AND resource = 'Sara'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE idcase = 'declaração 143598' AND timestamp BETWEEN '2017-01-10' AND '2017-02-01';
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = 'declaração 143598'
SELECT * FROM event_log WHERE timestamp BETWEEN '2017-01-10' AND '2017-02-01' AND idcase = '143598';
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-01-01' AND '2017-05-31' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-01-01' and '2017-05-31' GROUP BY resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN ( SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10 ) ORDER BY COUNT(*) DESC;
SELECT idcase from event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT COUNT(*) FROM event_log GROUP BY idcase ORDER BY COUNT(*) desc LIMIT 10) ORDER BY COUNT(*) DESC
SELECT idcase, COUNT(*) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 10
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY idcase ORDER BY num_activities DESC LIMIT 10;
SELECT idcase, COUNT(DISTINCT activity) AS action_diversity FROM event_log GROUP BY idcase ORDER BY action_diversity DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN ( SELECT COUNT(activity) FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10 ) ORDER BY COUNT(activity) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN ( SELECT COUNT(activity) FROM event_log GROUP BY idcase ORDER BY COUNT(activity) DESC LIMIT 10 ) ORDER BY COUNT(activity) DESC;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) IN (SELECT Count(*) FROM event_log GROUP BY idcase ORDER BY Count(*) Desc LIMIT 10) order by COUNT(*) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) IN (SELECT Count(activity) FROM event_log GROUP BY idcase ORDER BY Count(activity) Desc LIMIT 10) order by COUNT(activity) DESC
SELECT SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT SUM(cost) AS total_cost, idcase FROM event_log GROUP BY idcase;
SELECT SUM(cost), idcase FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase
SELECT SUM(cost) FROM event_log GROUP BY idcase
SELECT 1
SELECT idcase, sum(cost) FROM event_log GROUP BY idcase
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING event_count >= 100 ORDER BY event_count DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) >= 100 ORDER BY COUNT(*) DESC
SELECT el.idcase, el.activity, el.timestamp FROM event_log AS el ORDER BY el.idcase, el.timestamp;
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT idcase, id FROM event_log ORDER BY idcase, timestamp
SELECT idcase, id, timestamp FROM event_log ORDER BY idcase, timestamp
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp;
SELECT * FROM event_log ORDER BY idcase, timestamp
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Ocorrências", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Quantidade de Ocorrências" DESC;
SELECT COUNT(*) AS "Número de aprovações", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Número de aprovações" DESC;
SELECT COUNT(*) AS "Número de eventos", resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Número de eventos" DESC
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource
SELECT COUNT(*) AS "Número de aprovações", resource AS "Funcionário" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "Número de aprovações" DESC;
SELECT activity, count(*) AS occurrence_count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31' GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01'
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31';
SELECT activity, COUNT(*) AS count FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2017-01-01' AND '2018-01-01' GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_execution FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_occurrence FROM event_log GROUP BY activity;
SELECT activity, MAX(timestamp) AS latest_timestamp FROM event_log GROUP BY activity
SELECT activity, MAX(timestamp) AS last_timestamp FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT id) AS "Quantidade de execuções da atividade 'declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) IN ('2017', '2018'); SELECT COUNT(DISTINCT id) AS "Quantidade de execuções da atividade 'permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) IN ('2017', '2018');
SELECT COUNT(*) AS "Ocorrências da atividade 'declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017' UNION SELECT COUNT(*) AS "Ocorrências da atividade 'permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018';
SELECT COUNT(DISTINCT id) AS "Eventos com 'declaração aprovada pelo supervisor'" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT id) AS "Eventos com 'permissão rejeitada pelo funcionário'" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(*) AS "Número de vezes que a atividade 'declaração aprovada pelo supervisor' foi executada em 2017" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND strftime('%Y', timestamp) = '2017'; SELECT COUNT(*) AS "Número de vezes que a atividade 'permissão rejeitada pelo funcionário' foi executada em 2018" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND strftime('%Y', timestamp) = '2018';
SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(*) AS "Número de vezes" FROM event_log WHERE activity = 'Permissão rejeitada pelo funcionário' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Aprovação final aprovada pelo supervisor' AND e2.activity = 'Início da viagem' AND e1.timestamp < e2.timestamp AND e1.timestamp BETWEEN '2017-01-01' AND '2017-12-31'; SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' AND timestamp BETWEEN '2018-01-01' AND '2018-12-31';
SELECT activity, MAX(timestamp) AS end_timestamp, id FROM event_log GROUP BY activity ORDER BY end_timestamp;
SELECT activity, timestamp, id FROM event_log ORDER BY timestamp
SELECT activity, MAX(timestamp) AS end_time, idcase FROM event_log GROUP BY idcase ORDER BY end_time;
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'declaração requisitada pelo funcionário'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' AND resource = 'Thomas';
SELECT COUNT(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'Declaração requisitada pelo funcionário';
SELECT count(*) FROM event_log WHERE resource = 'Thomas' AND activity = 'statement_request'
SELECT count(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT activity, cost FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL;
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity
SELECT activity, count(*) AS event_count FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL GROUP BY activity;
SELECT activity FROM event_log WHERE resource = 'Diana' AND cost IS NOT NULL
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 );
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3)
SELECT COUNT(DISTINCT resource) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3 )
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity='Declaração final aprovada pelo diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada por um diretor' AND timestamp BETWEEN '2017-01-01' AND '2017-05-31';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND strftime('%Y-%m', timestamp) <> '2018-01';
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Charles' AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE strftime('%Y-%m', timestamp) = '2018-01' );
SELECT DISTINCT(idcase) FROM event_log WHERE activity LIKE '%Charles%' AND timestamp NOT BETWEEN '2018-01-01' AND '2018-01-31'
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING count(DISTINCT activity) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) > 3;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 3
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 3
SELECT idcase, MAX(timestamp) - MIN(timestamp) FROM event_log GROUP BY idcase
SELECT idcase, SUM(timestamp) FROM event_log group by idcase
SELECT idcase, (MAX(timestamp) - MIN(timestamp)) AS duration FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration, idcase FROM event_log GROUP BY idcase
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log group by idcase
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(DISTINCT activity) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' and '2017-12-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND strftime('%Y', timestamp) BETWEEN '2016' AND '2017';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2016-01-01' AND '2017-12-31';
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp BETWEEN '2016-01-01' AND '2017-12-31' GROUP BY e1.idcase
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT * FROM event_log WHERE activity LIKE '%rejeição%'
SELECT * FROM event_log WHERE activity LIKE '%rejeição%'
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1)) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = ( SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1 ) ) AND max_cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = ( SELECT SUM(cost) FROM event_log GROUP BY idcase ORDER BY SUM(cost) DESC LIMIT 1 ) ) AND cost > 0 GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0) GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY idcase
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(cost) > 0 ) GROUP BY idcase;
SELECT activity, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE cost > 0 GROUP BY activity;
SELECT idcase, MIN(cost) AS min_cost, MAX(cost) AS max_cost FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE cost > 0 ORDER BY cost DESC) GROUP BY idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado' FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) AS f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', f.activity FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado' INNER JOIN ( SELECT MAX(timestamp) AS end_time, activity, idcase FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' OR activity = 'Pagamento efetuado' GROUP BY idcase ) f ON f.idcase = e.idcase;
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Fim da viagem', strftime('%s', x.timestamp) - strftime('%s', e.start_time) AS 'Declaração rejeitada pelo funcionário', strftime('%s', y.timestamp) - strftime('%s', e.start_time) AS 'Pagamento efetuado', p.activity AS 'Atividade final' FROM event_log AS p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) AS e ON e.idcase = p.idcase AND p.activity = 'Fim da viagem' LEFT JOIN event_log AS x ON x.idcase = e.idcase AND x.activity = 'Declaração rejeitada pelo funcionário' LEFT JOIN event_log AS y ON y.idcase = e.idcase AND y.activity = 'Pagamento efetuado';
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND ( p.activity = 'Fim da viagem' OR p.activity = 'Declaração rejeitada pelo funcionário' OR p.activity = 'Pagamento efetuado' );
SELECT p.idcase, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS 'Tempo decorrido', p.activity AS 'Atividade final' FROM event_log p INNER JOIN ( SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase ) e ON e.idcase = p.idcase AND p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT p.idcase, p.activity AS evento_interesse, strftime('%s', p.timestamp) - strftime('%s', e.start_time) AS tempo_decorrido FROM event_log p INNER JOIN (SELECT MIN(timestamp) AS start_time, idcase FROM event_log GROUP BY idcase) e ON e.idcase = p.idcase WHERE p.activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário', 'Pagamento efetuado');
SELECT resource, MIN(timestamp) AS start_time, MAX(timestamp) AS end_time, ( MAX(timestamp) - MIN(timestamp) ) AS duration FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem', 'Rejeição', 'Pagamento efetuado') GROUP BY resource;
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT * FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT e.idcase, e.activity, e.timestamp, e.resource, e.cost FROM event_log AS e WHERE e.idcase IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento')
SELECT * FROM event_log WHERE activity LIKE '%requisição de pagamento%'
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(timestamp - timestamp) FROM event_log GROUP BY activity
SELECT AVG(duration) FROM event_log
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration) FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT activity, AVG(timestamp - LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log WHERE timestamp BETWEEN '2018-04-12' AND '2018-04-13' GROUP BY activity
SELECT AVG(timestamp - timestamp) FROM event_log
SELECT AVG(next_timestamp - timestamp) AS avg_duration, activity FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log ) WHERE next_timestamp IS NOT NULL GROUP BY activity
SELECT activity, AVG(timestamp - LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp)) AS avg_duration FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - timestamp) AS avg_duration, activity FROM event_log GROUP BY activity
SELECT AVG(duration), activity FROM event_log GROUP BY activity
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(cost), activity FROM event_log GROUP BY activity
SELECT AVG(duration) AS average_duration, activity FROM event_log GROUP BY activity;
SELECT AVG(timestamp - timestamp) AS average_duration, activity FROM event_log GROUP BY activity
SELECT AVG(timestamp - LAG(timestamp) OVER (PARTITION BY activity ORDER BY timestamp)) AS avg_duration FROM event_log
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT DISTINCT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT "event_log"."idcase" FROM "event_log" WHERE "event_log"."cost" = (SELECT MAX("cost") FROM "event_log");
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 10
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT activity FROM event_log GROUP BY activity HAVING SUM(cost) = (SELECT SUM(cost) FROM event_log GROUP BY activity ORDER BY SUM(cost) DESC LIMIT 1)
SELECT "activity" FROM "event_log" WHERE "cost" = (SELECT MAX("cost") FROM "event_log")
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT idcase FROM event_log GROUP BY idcase HAVING SUM(cost) = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC LIMIT 1;
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log);
SELECT * FROM event_log ORDER BY cost DESC;
SELECT activity FROM event_log WHERE cost = (SELECT MAX(cost) FROM event_log)
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem'
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT * FROM event_log WHERE activity = 'Início da viagem';
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(*) AS "Execuções", activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_execucoes FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS total_executions FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS event_count FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS executions FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity;
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT activity, count(*) FROM event_log GROUP BY activity
SELECT e.activity, e.cost FROM event_log AS e ORDER BY e.cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT event_log.cost, event_log.activity FROM event_log ORDER BY event_log.cost;
SELECT activity, cost FROM event_log ORDER BY cost;
SELECT e1.activity, e1.resource, e1.idcase, e2.cost FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e2.cost;
SELECT cost, activity FROM event_log ORDER BY cost;
SELECT activity, cost FROM event_log ORDER BY cost DESC;
SELECT * FROM event_log ORDER BY cost DESC
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão'
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost FROM event_log AS e1 JOIN (SELECT idcase, MIN(timestamp) AS min_timestamp FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase) AS e2 ON e1.idcase = e2.idcase AND e1.timestamp = e2.min_timestamp
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT * FROM event_log WHERE activity = 'permissão';
SELECT * FROM event_log WHERE activity LIKE '%permissão%'
SELECT idcase, resource, activity, cost FROM event_log WHERE activity LIKE '%permissão%' AND cost IS NULL;
SELECT * FROM event_log WHERE activity LIKE '%permitida%'
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT MAX(cost) FROM event_log
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2;
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas');
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Sara', 'Thomas') GROUP BY idcase HAVING COUNT(DISTINCT resource) = 2
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Thomas' INTERSECT SELECT DISTINCT idcase FROM event_log WHERE resource = 'Sara';
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*) AS "Quantidade de vezes", resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY idcase, resource;
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT COUNT(*), resource, idcase FROM event_log WHERE activity = 'Declaração rejeitada pela administração' GROUP BY resource, idcase
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) AS average_cost FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem');
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT AVG(cost) FROM event_log WHERE activity NOT IN ('Início da viagem', 'Fim da viagem')
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ), DurationEvents AS ( SELECT activity, ( strftime('%s', next_timestamp) - strftime('%s', timestamp) ) AS duration FROM RankedEvents WHERE next_timestamp IS NOT NULL ) SELECT activity, AVG(cost) AS average_cost FROM DurationEvents WHERE activity NOT IN ('Início da viagem', 'Fim da viagem') GROUP BY activity;
SELECT activity, timestamp, resource, cost, idcase FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT * FROM event_log ORDER BY cost DESC LIMIT 5;
SELECT activity, cost FROM event_log ORDER BY cost DESC LIMIT 5
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(activity) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) > 1
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 3;
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2018-10-01' AND '2018-10-02') GROUP BY activity
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT * FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-02'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log WHERE resource LIKE 'M%' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração recebida pelo funcionário')
SELECT * FROM event_log WHERE resource LIKE 'M%'
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS total_registros FROM event_log GROUP BY activity HAVING total_registros > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT DISTINCT activity FROM event_log GROUP BY activity HAVING count(activity) > 5;
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity HAVING COUNT (*) >= 5
SELECT DISTINCT activity FROM event_log GROUP BY activity, idcase HAVING count(activity) > 5
SELECT activity from event_log GROUP BY activity HAVING COUNT(*) > 5
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING count > 5;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3;
SELECT activity, idcase FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 3;
SELECT A declaração que teve uma ação executada mais de uma vez é: SELECT DISTINCT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT COUNT(*) FROM event_log WHERE idcase = 'declaração 56300'
SELECT * FROM event_log WHERE idcase = 'declaração 56300'
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING execution_count > 1
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1;
SELECT activity, COUNT(*) AS num_execucoes FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY num_execucoes DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity HAVING COUNT(*) > 1 ORDER BY count DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-10-01' GROUP BY activity
SELECT activity, COUNT(*) AS count FROM event_log WHERE timestamp < '2017-01-10' GROUP BY activity HAVING COUNT(*) > 1;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_instances FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) from event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource;
SELECT COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log
SELECT resource, COUNT(*) AS num_execucoes FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS num_interventions FROM event_log GROUP BY resource
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT DISTINCT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara')
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT idcase FROM event_log WHERE resource IN ('Thomas', 'Diana', 'Sara');
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS case_count, resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT id), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp BETWEEN '2017-05-01' AND '2017-06-01' GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log WHERE timestamp between '2017-05-01' and '2017-06-01' AND activity = 'intervention' GROUP BY resource
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE activity LIKE '%intervenção%' AND resource NOT IN ('Joshua', 'Teresa');
SELECT activity, resource FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaração%' ) AND resource NOT IN ('Joshua', 'Teresa')
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date, MAX(timestamp) AS end_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE ( e.activity = 'Início da atividade' OR e.activity = 'Fim da atividade' ) AND e.idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Fim da viagem' EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado';
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') ) AND idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') );
SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem') EXCEPT SELECT DISTINCT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado');
SELECT el1.idcase FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE (el1.activity = 'Início da viagem' OR el1.activity = 'Fim da viagem') AND NOT (el2.activity = 'Requisição de pagamento' OR el2.activity = 'Pagamento efetuado')
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL OR resource = '';
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT * FROM event_log WHERE resource IS NULL;
SELECT idcase FROM event_log WHERE timestamp < '2017-03-01' GROUP BY idcase
SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) < '2017-03'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) < '2017-03')
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT DISTINCT idcase FROM (select idcase, timestamp, activity FROM event_log GROUP BY idcase HAVING strftime('%Y-%m', MIN(timestamp)) = '2017-03')
SELECT DISTINCT idcase FROM (SELECT idcase, MIN(timestamp) AS first_timestamp FROM event_log GROUP BY idcase) WHERE first_timestamp < '2017-03-01'
SELECT * FROM event_log WHERE timestamp < '2017-03-01'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y-%m', MIN(timestamp)) < '2017-03' GROUP BY idcase
SELECT DISTINCT idcase FROM event_log WHERE timestamp < '2017-03-01'
SELECT "idcase" FROM "event_log" WHERE "timestamp" < '2017-03-01' AND "activity" = 'processamento'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' GROUP BY idcase ORDER BY timestamp ASC LIMIT 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp LIKE '2017-03%'
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND strftime('%Y-%m', timestamp) = '2017-03' AND id IN ( SELECT MIN(id) FROM event_log WHERE activity = 'Início da viagem' GROUP BY idcase )
SELECT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MIN(timestamp) = MIN(timestamp) );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND timestamp BETWEEN '2017-03-01' AND '2017-03-31';
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY count_resource DESC;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5 ORDER BY event_count DESC;
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY count_resource DESC;
SELECT resource, COUNT(*) AS count FROM event_log GROUP BY resource HAVING COUNT(*) > 5;
SELECT resource, COUNT(*) FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 5
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource HAVING COUNT(*) > 5 ORDER BY event_count DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 5 ORDER BY num_cases DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 5;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 5
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity ORDER BY COUNT(*) DESC LIMIT 10;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC LIMIT 1;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 5;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS total_declaracoes_aprovadas FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY total_declaracoes_aprovadas DESC LIMIT 10;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_events DESC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC LIMIT 10;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY num_events DESC;
SELECT resource FROM event_log WHERE activity = 'Declaração final aprovada pelo supervisor' GROUP BY resource ORDER BY COUNT(*) DESC LIMIT 10;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugene', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie')
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento' AND resource IN ('Eugine', 'Marie');
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovou declaração%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%responsável pelo orçamento%';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovado%' AND resource IN ('Eugene', 'Marie') AND activity LIKE '%responsável pelo orçamento%';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 49464' EXCEPT SELECT DISTINCT activity FROM event_log WHERE idcase = 'declaração 76667';
SELECT O código SQL fornecido não contém a consulta para responder à pergunta.
SELECT COUNT(*) AS "Número de vezes", resource FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY count DESC;
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING count_activity > 2 ORDER BY resource;
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity = 'declaração requisitada pelo funcionário' GROUP BY resource HAVING num_occurrences > 2;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração requisitada pelo funcionário' GROUP BY resource HAVING event_count > 2;
SELECT resource, COUNT(*) AS num_declaracoes FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource HAVING COUNT(*) > 2 ORDER BY num_declaracoes DESC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10' ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10'
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento' AND timestamp BETWEEN '2017-05-01' AND '2017-05-10';
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Requisição de pagamento' AND e1.start_date BETWEEN '2017-05-01' AND '2017-05-10' ORDER BY e1.start_date DESC LIMIT 10;
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) from event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT count(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource), idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(*) = ( SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase );
SELECT idcase from event_log group by idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher'
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT activity) = ( SELECT COUNT(*) FROM event_log WHERE idcase = event_log.idcase );
SELECT idcase FROM event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1 AND resource = 'Christopher';
SELECT idcase from event_log where resource = 'Christopher' group by idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase from event_log WHERE resource = 'Christopher' GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase, resource FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1
SELECT idcase, resource FROM event_log GROUP BY idcase, resource HAVING COUNT(*) > 1
SELECT event_log.activity FROM event_log WHERE event_log.activity LIKE '%funcionário%' AND event_log.idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1 );
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT DATE(timestamp)) > 1
SELECT idcase FROM event_log GROUP BY idcase, DATE(timestamp) HAVING COUNT(*) > 1
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS event_count FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT resource, idcase, COUNT(*) AS num_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase
SELECT resource, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource;
SELECT resource, idcase, COUNT(*) AS num_null_cost_events FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, idcase, COUNT(*) AS num_eventos_custo_nulo FROM event_log WHERE cost IS NULL GROUP BY resource, idcase;
SELECT resource, COUNT(*) AS intervencoes_sem_custo FROM event_log WHERE cost = 0 GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Intervenções" FROM event_log WHERE activity LIKE '%intervenção%' GROUP BY activity;
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity = 'Permissão rejeitada pelo diretor'
SELECT * FROM event_log WHERE activity LIKE '%permissão rejeitada pelo diretor%'
SELECT activity FROM event_log WHERE activity LIKE '%rejeitada pelo diretor%'
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date ORDER BY event_date;
SELECT strftime('%Y-%m-%d', "timestamp") AS "date", SUM("cost") AS "total_cost" FROM "event_log" GROUP BY "date" ORDER BY "date" DESC;
SELECT DATE(timestamp) AS day, SUM(cost) AS total_cost FROM event_log GROUP BY day
SELECT DATE(timestamp) AS event_date, SUM(cost) AS total_cost FROM event_log GROUP BY event_date
SELECT DATE(timestamp) AS event_date, COUNT(*) AS event_count FROM event_log GROUP BY event_date
SELECT strftime('%Y-%m-%d', timestamp) AS "date", SUM(cost) AS "total_cost" FROM event_log GROUP BY "date"
SELECT activity FROM event_log WHERE cost > 1000 AND resource IN ( SELECT resource FROM event_log WHERE activity IN ('Supervisor', 'Diretor') );
SELECT activity, cost FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE resource IN ('supervisor', 'diretor') ) AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND resource LIKE '%supervisor%' OR resource LIKE '%diretor associado%'
SELECT activity FROM event_log WHERE (resource LIKE '%supervisor%' OR resource LIKE '%diretor%') AND cost > 1000;
SELECT activity FROM event_log WHERE cost > 1000 AND ( resource LIKE '%supervisor%' OR resource LIKE '%diretor%' );
SELECT activity, cost FROM event_log WHERE activity LIKE '%supervisor%' OR activity LIKE '%diretor%' AND cost > 1000;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS "Event Count", idcase FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_interventions FROM event_log GROUP BY idcase;
SELECT resource, COUNT(*) AS task_count FROM event_log WHERE activity = 'task_assigned' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT idcase, COUNT(DISTINCT activity) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT idcase, COUNT(*) AS activity_count FROM event_log WHERE resource = 'Alexis' GROUP BY idcase;
SELECT COUNT(DISTINCT activity) AS "Número de Atividades", idcase AS "ID do Caso" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase ORDER BY "Número de Atividades" DESC;
SELECT COUNT(DISTINCT activity) AS "Número de Tarefas", COUNT(DISTINCT idcase) AS "Número de Instâncias de Processo" FROM event_log WHERE resource = 'Alexis' GROUP BY idcase
SELECT **Ações comuns no processamento de declarações:** * **Seleção:** Recuperar dados específicos de uma tabela. * **Agregação:** Resumir dados usando funções como SUM, COUNT e GROUP BY. * **Filtragem:** Selecionar dados com base em critérios específicos usando WHERE. * **Ordenação:** Organizar dados em uma ordem específica usando ORDER BY. * **Agrupamento:** Agrupar dados com base em valores comuns usando GROUP BY. * **Junção:** Combinar dados de várias tabelas usando JOIN. * **Inserção:** Adicionar novos dados a uma tabela. * **Atualização:** Modificar dados existentes em uma tabela. * **Exclusão:** Remover dados de uma tabela.
SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) AS duration FROM RankedEvents WHERE activity = 'Declaração aprovada pelo supervisor'
SELECT WITH RankedEvents AS ( SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log ) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)), 0) AS duration FROM RankedEvents WHERE activity = 'Declaração aprovada pelo supervisor';
SELECT COUNT(*) FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Permissão final aprovada pelo supervisor' AND el2.activity = 'Início da viagem' AND el1.timestamp < el2.timestamp;
SELECT COUNT(*) AS num_cases FROM event_log AS el WHERE el.activity = 'Início da viagem' AND EXISTS ( SELECT 1 FROM event_log AS el2 WHERE el2.idcase = el.idcase AND el2.activity = 'Permissão final aprovada pelo supervisor' AND el2.timestamp > el.timestamp );
SELECT COUNT(*) FROM event_log AS el WHERE el.activity = 'Declaração aprovada pelo supervisor' AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase = el.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Início da viagem' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Permissão final aprovada pelo supervisor' AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Início da viagem');
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp AND e1.activity <> 'Fim da viagem';
SELECT activity FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2017-12-12' UNION SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp > '2017-12-12';
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND (timestamp < '2017-12-12' OR timestamp > '2017-12-12')
SELECT * FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT e.id, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log AS e WHERE e.activity = 'Fim da viagem' AND e.timestamp NOT LIKE '2017-12-12%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp NOT BETWEEN '2017-12-12 00:00:00' AND '2017-12-12 23:59:59';
SELECT resource,COUNT(*) FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT id), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity LIKE '%declaração%' GROUP BY resource
SELECT COUNT(*) AS "Número de ações", resource AS "Pessoa responsável" FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity) AS "Number of Activities", resource FROM event_log GROUP BY resource;
SELECT COUNT(*), resource FROM event_log GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Atividades", resource FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT DISTINCT activity FROM event_log WHERE resource <> 'Virginia'
SELECT activity FROM event_log WHERE resource <> 'Virginia' GROUP BY activity
SELECT DISTINCT activity FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE resource = 'Virginia' );
SELECT activity FROM event_log WHERE resource = 'Virginia' GROUP BY activity HAVING COUNT(*) = 0;
SELECT activity FROM event_log WHERE activity NOT IN ( SELECT activity FROM event_log WHERE resource = 'Virginia' );
SELECT Não há exemplos de SQL fornecidos no contexto para analisar e responder à pergunta.
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%';
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%rejeitada%' );
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%rejeitada%' );
SELECT strftime('%Y-%m-%d', timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date
SELECT AVG(cost) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Rejeição' )
SELECT AVG(cost) FROM event_log WHERE activity LIKE '%rejeitada%'
SELECT idcase, (strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp))) AS duration_seconds FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' GROUP BY idcase
SELECT e1.idcase, ( JULIANDAY(e2.timestamp) - JULIANDAY(e1.timestamp) ) * 24 * 60 * 60 AS duration_in_seconds FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração rejeitada pelo supervisor';
SELECT e1.idcase, (e2.timestamp - e1.timestamp) AS duration FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração aprovada pelo supervisor' AND e2.activity = 'Declaração rejeitada pelo supervisor' ORDER BY e1.idcase;
SELECT e1.idcase, ( SELECT MAX(e2.timestamp) - MIN(e2.timestamp) FROM event_log e2 WHERE e2.idcase = e1.idcase AND e2.activity = 'Declaração aprovada pelo supervisor' ) AS duration FROM event_log e1 WHERE e1.activity = 'Declaração aprovada pelo supervisor' GROUP BY e1.idcase ORDER BY e1.idcase;
SELECT e1.idcase, ( SELECT timestamp FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor' AND idcase = e1.idcase ORDER BY timestamp DESC LIMIT 1 ) - ( SELECT timestamp FROM event_log WHERE activity = 'Declaração recebida pelo supervisor' AND idcase = e1.idcase ORDER BY timestamp ASC LIMIT 1 ) AS duration FROM event_log AS e1 WHERE e1.activity = 'Declaração aprovada pelo supervisor' ORDER BY e1.idcase;
SELECT resource, COUNT(*) AS total_actions, SUM(CASE WHEN activity LIKE '%Aprovada%' THEN 1 ELSE 0 END) AS approved_actions FROM event_log WHERE activity LIKE '%Aprovada%' GROUP BY resource ORDER BY total_actions DESC;
SELECT JULIANDAY(e2.timestamp) - JULIANDAY(e1.timestamp) AS time_spent FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração recebida' AND e2.activity = 'Declaração aprovada pelo supervisor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT (*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador'
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT e1.idcase, e1.timestamp AS data_fim_viagem FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT e1.idcase, e1.timestamp AS "Fim da viagem" FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e1.resource;
SELECT e1.idcase, e1.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' ORDER BY e2.resource;
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase";
SELECT COUNT(*) AS "event_count", idcase FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS event_count, idcase FROM event_log GROUP BY idcase
SELECT idcase, COUNT(*) AS event_count FROM event_log GROUP BY idcase;
SELECT COUNT(*) AS "event_count", "idcase" FROM "event_log" GROUP BY "idcase";
SELECT COUNT(*), idcase FROM event_log GROUP BY idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12'
SELECT COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) BETWEEN '2017-05-02' AND '2017-05-12')
SELECT COUNT(*) FROM event_log WHERE activity = 'end_trip' AND timestamp BETWEEN '2017-05-02' AND '2017-05-12';
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp;
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'envio de lembrete' ORDER BY timestamp
SELECT event_log.activity, event_log.timestamp, event_log.id FROM event_log ORDER BY event_log.timestamp;
SELECT el.idcase, el.activity, el.resource, el.timestamp, MAX(el.timestamp) OVER (PARTITION BY el.idcase) AS max_timestamp FROM event_log AS el WHERE el.activity = 'Envio de lembrete' ORDER BY max_timestamp;
SELECT e.idcase, e.id, e.resource, e.timestamp FROM event_log e WHERE e.activity = 'Envio de lembrete' ORDER BY e.timestamp DESC
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT idcase, resource, id, MAX(timestamp) AS final_timestamp FROM event_log WHERE activity LIKE '%envio de lembrete%' GROUP BY idcase, resource, id ORDER BY final_timestamp;
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT DISTINCT resource FROM event_log ORDER BY resource
SELECT resource FROM event_log WHERE activity = 'process statement' GROUP BY resource ORDER BY resource
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource, COUNT(*) AS num_travel_declarations FROM event_log WHERE activity = 'Travel Declaration' GROUP BY resource HAVING num_travel_declarations > 200;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 200
SELECT DISTINCT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 200;
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT COUNT(DISTINCT resource) FROM event_log
SELECT Não há exemplos de SQL fornecidos no contexto para analisar e responder à pergunta sobre declarações que executam atividades do mesmo tipo de forma seguida.
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%tratamento de declarações%'
SELECT COUNT(DISTINCT resource) FROM event_log WHERE activity LIKE '%process%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%declaração%' );
SELECT activity from event_log WHERE activity LIKE '%declaração%'
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT activity, AVG(cost) AS average_cost FROM event_log GROUP BY activity;
SELECT COUNT(*) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT count(distinct idcase) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost IS NULL
SELECT COUNT(*) FROM event_log WHERE cost = 0
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE cost = 0
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' OR activity LIKE '%declaração%'
SELECT activity FROM event_log WHERE activity LIKE '%permissão%' AND activity LIKE '%declaração%'
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%declaração rejeitada pelo diretor%'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor';
SELECT count(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pelo diretor' AND idcase = 'processo_id'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração rejeitada pela administração'
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT avg(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log
SELECT AVG(cost) FROM event_log WHERE cost IS NOT NULL
SELECT AVG(cost) FROM event_log
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource;
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT idcase), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT count(*) FROM event_log WHERE resource = 'Peter'
SELECT resource, COUNT(DISTINCT idcase) AS num_cases FROM event_log GROUP BY resource HAVING num_cases > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 3
SELECT resource, COUNT(DISTINCT idcase) AS num_casos FROM event_log GROUP BY resource HAVING num_casos > 3 ORDER BY num_casos DESC;
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3
SELECT resource FROM event_log GROUP BY resource HAVING COUNT(DISTINCT idcase) > 3;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_events ASC;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY event_count ASC;
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%requisição de pagamento%' GROUP BY idcase ORDER BY num_events ASC;
SELECT e.idcase, COUNT(e.id) AS event_count FROM event_log AS e WHERE e.activity = 'Requisição de pagamento' GROUP BY e.idcase ORDER BY event_count ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY COUNT(*) ASC;
SELECT idcase, COUNT(DISTINCT activity) AS num_activities FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_activities ASC;
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ORDER BY num_actions;
SELECT DATE(timestamp) AS data_execucao FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT DISTINCT idcase, timestamp FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY timestamp;
SELECT DISTINCT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Declaração rejeitada pelo funcionário' ORDER BY timestamp ASC;
SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' OR activity = 'Closed' ORDER BY timestamp ASC;
SELECT DISTINCT DATE(timestamp) AS data_execucao FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada pelo funcionário') ORDER BY data_execucao;
SELECT DISTINCT DATE(timestamp) AS data_evento FROM event_log WHERE activity IN ('Fim da viagem', 'Declaração rejeitada por funcionário') ORDER BY data_evento ASC;
SELECT e1.activity, e1.resource, e1.timestamp, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity IN ('Fim da viagem', 'Rejeição da declaração') ORDER BY e1.timestamp;
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource,COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS execution_count FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS num_executions FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS occurrence FROM event_log GROUP BY resource ORDER BY resource ASC;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS activity_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT count(*), resource From event_log group by resource order by resource
SELECT resource, COUNT(*) AS action_count FROM event_log GROUP BY resource ORDER BY resource;
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT * FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%'
SELECT activity FROM event_log WHERE activity LIKE 'E%' GROUP BY activity HAVING COUNT(*) > 3;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400 ORDER BY cost;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE cost BETWEEN 50 AND 400;
SELECT id, activity, resource, cost FROM event_log WHERE activity LIKE '%processamento de declaração%' AND cost BETWEEN 50 AND 400;
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração salva pelo funcionário'
SELECT DISTINCT(resource) FROM event_log WHERE activity = 'Declaração salva'
SELECT DISTINCT resource FROM event_log WHERE activity = 'SAVE'
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(timestamp) = '2018-04-12' );
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59';
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE strftime('%Y-%m-%d', timestamp) = '2018-04-12' )
SELECT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-12-05' ) GROUP BY activity
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-04-12' ) GROUP BY activity
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-10-01' AND '2018-10-03';
SELECT task.name FROM event_log JOIN task ON event_log.idcase = task.idcase WHERE event_log.activity = 'process_statement' AND event_log.timestamp BETWEEN '2018-04-12 00:00:00' AND '2018-04-12 23:59:59' GROUP BY task.name
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY timestamp
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT e1.id, e1.activity, e1.timestamp AS end_date FROM event_log e1 WHERE e1.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e1.timestamp DESC
SELECT e.id, e.activity, e.timestamp FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') ORDER BY e.timestamp;
SELECT id, activity, MAX(timestamp) AS end_date FROM event_log WHERE activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') GROUP BY id, activity ORDER BY end_date;
SELECT e.id, e.activity, MAX(e.timestamp) AS end_date FROM event_log e WHERE e.activity IN ('Permissão final aprovada pelo supervisor', 'Declaração aprovada pelo supervisor') GROUP BY e.id, e.activity ORDER BY end_date;
SELECT e1.id, e1.activity, e1.timestamp FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE ( e1.activity = 'Permissão final aprovada pelo supervisor' OR e1.activity = 'Aprovação da declaração pelo supervisor' ) AND e2.activity = 'Término da execução' ORDER BY e1.timestamp;
SELECT id, activity, timestamp FROM event_log WHERE activity IN ('Aprovação final de permissão', 'Aprovação de declaração por supervisor') ORDER BY timestamp
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT * FROM event_log WHERE cost IS NOT NULL;
SELECT * FROM event_log WHERE cost IS NOT NULL
SELECT activity FROM event_log WHERE cost IS NOT NULL
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT (*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor';
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Permissão final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT COUNT(*) FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' ORDER BY timestamp;
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s';
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT timestamp FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT DATE(timestamp) AS data_intervencao FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s' GROUP BY data_intervencao ORDER BY data_intervencao;
SELECT DISTINCT DATE(timestamp) FROM event_log WHERE activity = 'Início da viagem' AND resource LIKE '%s'
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, resource, SUM(cost) AS total_cost FROM event_log GROUP BY activity, resource;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity ORDER BY count DESC; **Atividades executadas durante o processamento das declarações:** 1. **Agrupamento por atividade:** 1 vez 2. **Contagem de ocorrências:** 1 vez 3. **Ordenação por contagem:** 1 vez
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' UNION SELECT count(*) FROM event_log WHERE activity = 'Fim da viagem'
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT count(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT COUNT(*) AS "Número de ocorrências" FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem');
SELECT COUNT(*) FROM event_log WHERE activity IN ('Início da viagem', 'Fim da viagem')
SELECT count(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem')
SELECT COUNT(*) FROM event_log WHERE activity = 'Início da viagem' AND idcase IN (SELECT idcase FROM event_log WHERE activity = 'Fim da viagem')
SELECT activity FROM event_log GROUP BY activity, idcase HAVING COUNT(activity) > 3
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING count > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 3;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC
SELECT activity, COUNT(*) AS count FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração de viagem') GROUP BY activity HAVING count > 3
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log WHERE timestamp = ( SELECT MAX(timestamp) FROM event_log );
SELECT activity, resource FROM event_log WHERE timestamp = (SELECT MAX(timestamp) FROM event_log)
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log)
SELECT activity, resource, SUM(cost) from event_log group by activity, resource
SELECT activity, resource FROM event_log WHERE id = (SELECT MAX(id) FROM event_log);
SELECT activity, resource FROM event_log ORDER BY timestamp DESC LIMIT 1;
SELECT resource, activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) ORDER BY timestamp DESC LIMIT 1;
SELECT activity, COUNT(*) AS count FROM event_log GROUP BY activity HAVING COUNT(*) > 3 ORDER BY count DESC;
SELECT e1.activity, e1.resource, e2.activity AS previous_activity FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.resource, e1.timestamp, e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.timestamp AS previous_timestamp, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT el.id, el.activity, el.timestamp, el.resource, el.cost, el.idcase, u.name AS responsible_user FROM event_log AS el JOIN user AS u ON el.resource = u.id WHERE el.idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND el.timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem' AND idcase = el.idcase ) ORDER BY el.timestamp;
SELECT e2.activity, e2.resource, e2.timestamp FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Fim da viagem' AND e2.timestamp > e1.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e2.resource AS responsible_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = e1.idcase )
SELECT e1.activity, e1.timestamp, e1.resource, e2.resource AS resource_fim_viagem FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT el.activity, el.timestamp, el.resource, el.idcase FROM event_log AS el JOIN event_log AS el_fim ON el.idcase = el_fim.idcase WHERE el_fim.activity = 'Fim da viagem' AND el.timestamp > el_fim.timestamp
SELECT el1.activity AS evento_anterior, el1.resource AS responsavel_evento_anterior, el2.activity AS evento_posterior, el2.resource AS responsavel_evento_posterior FROM event_log AS el1 JOIN event_log AS el2 ON el1.idcase = el2.idcase WHERE el1.activity = 'Fim da viagem' AND el2.timestamp > el1.timestamp
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_prev ON el.idcase = el_prev.idcase AND el.timestamp > el_prev.timestamp WHERE el_prev.activity = 'Fim da viagem';
SELECT el.activity, el.resource FROM event_log AS el JOIN event_log AS el_fim ON el.idcase = el_fim.idcase WHERE el_fim.activity = 'Fim da viagem' AND el.timestamp > el_fim.timestamp
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource, e1.cost, e2.resource AS responsible_for_end_of_trip FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp
SELECT e1.id, e1.activity, e1.timestamp, e1.resource, e1.cost, e1.idcase, e2.resource AS responsible_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.timestamp > e2.timestamp AND e2.activity = 'Fim da viagem';
SELECT e1.activity, e1.timestamp, e1.resource, e2.activity AS previous_activity, e2.resource AS previous_resource FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT e1.activity AS "Ação após o fim da viagem", e1.resource AS "Pessoa responsável" FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT e1.idcase, e1.activity, e1.timestamp, e1.resource FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp ORDER BY e1.idcase, e1.timestamp;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS num_events FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE resource NOT IN (SELECT resource FROM event_log WHERE activity = 'Fim da viagem')
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Eventos", resource AS "Recurso" FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) AS "Quantidade de Eventos", resource FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT count(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) AS event_count FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT count(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*) AS "Quantidade de Eventos" FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT(*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource;
SELECT resource, COUNT (*) FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT COUNT(*), resource FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY resource
SELECT e1.resource, COUNT(e1.activity) AS total_actions FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp GROUP BY e1.resource;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC
SELECT idcase, resource, id, timestamp FROM event_log WHERE activity = 'Envio de lembrete' ORDER BY timestamp;
SELECT idcase FROM event_log GROUP BY idcase ORDER BY MIN(timestamp) DESC
SELECT idcase FROM event_log WHERE activity = 'Declaração de viagem' ORDER BY timestamp
SELECT idcase FROM event_log ORDER BY timestamp ASC;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Requisição de pagamento';
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1
SELECT e.idcase FROM event_log e INNER JOIN (SELECT idcase, MAX(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp = e1.timestamp
SELECT e.idcase, COUNT(*) FROM event_log e INNER JOIN (SELECT idcase, MIN(timestamp) as timestamp FROM event_log where activity='Declaração final aprovada pelo diretor' GROUP BY idcase order by idcase) e1 on e.idcase = e1.idcase and e.timestamp < e1.timestamp GROUP BY e.idcase
SELECT resource, count(*) AS count_activity FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count_activity DESC LIMIT 1
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY count DESC LIMIT 1
SELECT resource, count(*) AS event_count FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY event_count DESC LIMIT 1
SELECT resource, COUNT(*) AS "count" FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY "count" DESC LIMIT 1
SELECT resource, count(*) AS num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_approvals DESC LIMIT 1;
SELECT resource, COUNT(*) AS num_approvals FROM event_log WHERE activity = 'Declaração aprovada pela administração' GROUP BY resource ORDER BY num_approvals DESC LIMIT 1;
SELECT resource, COUNT(*) FROM ( SELECT resource, activity, ROW_NUMBER() OVER (PARTITION BY resource ORDER BY timestamp) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 GROUP BY resource;
SELECT resource,COUNT(*) FROM ( SELECT resource,idcase,MIN(timestamp) OVER (PARTITION BY idcase) AS first_timestamp FROM event_log ) AS subquery WHERE timestamp = first_timestamp GROUP BY resource
SELECT resource, COUNT(*) AS count_first_activities FROM ( SELECT resource, activity, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(*) FROM event_log WHERE activity = 'start' GROUP BY resource
SELECT resource, COUNT(*) AS count_first_activity FROM event_log WHERE activity = 'First Activity' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Declarações Envolvidas", resource AS "Funcionário" FROM event_log WHERE activity = 'Primeira Ação' GROUP BY resource ORDER BY "Declarações Envolvidas" DESC
SELECT resource, COUNT(*) AS num_of_cases FROM event_log WHERE activity = 'Start' GROUP BY resource
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%aprovada%'
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS day, COUNT(DISTINCT idcase) AS num_instances FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY day ORDER BY day;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date;
SELECT DATE(timestamp) AS date, COUNT(DISTINCT idcase) AS rejected_declarations FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY date ORDER BY date;
SELECT strftime('%Y-%m-%d', timestamp) AS event_day, COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY event_day
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase ORDER BY duration DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT idcase, SUM(timestamp - timestamp_prev) AS total_duration FROM ( SELECT idcase, timestamp, LAG(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS timestamp_prev FROM event_log ) GROUP BY idcase ORDER BY total_duration DESC LIMIT 5;
SELECT count (*), idcase FROM event_log group by idcase order by count(*) desc limit 5
SELECT idcase, COUNT(*) AS total_execucoes, (SELECT MAX(timestamp) - MIN(timestamp) FROM event_log WHERE idcase = e.idcase) AS duracao_caso FROM event_log e GROUP BY idcase ORDER BY total_execucoes DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS case_duration, idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY COUNT(*) DESC LIMIT 5 ) GROUP BY idcase ORDER BY case_duration DESC;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, SUM(cost) AS total_cost, COUNT(*) AS total_actions FROM event_log GROUP BY idcase ORDER BY total_actions DESC LIMIT 5;
SELECT idcase, SUM(cost) AS total_cost, SUM(timestamp) AS total_time FROM event_log GROUP BY idcase ORDER BY total_cost DESC LIMIT 5;
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, COUNT(*) AS num_events, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) > 20 ORDER BY num_events DESC LIMIT 5;
SELECT idcase, MAX(timestamp) - MIN(timestamp) AS duration FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ORDER BY duration DESC LIMIT 5;
SELECT idcase, strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY COUNT(*) DESC LIMIT 5;
SELECT idcase, COUNT(*) AS event_count, (SELECT MAX(timestamp) - MIN(timestamp) FROM event_log WHERE idcase = e.idcase) AS case_duration FROM event_log e GROUP BY idcase HAVING event_count >= 20 ORDER BY event_count DESC LIMIT 5;
SELECT idcase, MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) FROM event_log GROUP BY idcase HAVING count(*) >= 20 ORDER BY MAX(strftime('%s', timestamp)) - MIN(strftime('%s', timestamp)) DESC LIMIT 5
SELECT strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)), idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 20 ) GROUP BY idcase ORDER BY strftime('%s', MAX(timestamp)) - strftime('%s', MIN(timestamp)) DESC LIMIT 5;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE (activity = 'Início da viagem' OR activity = 'Fim da viagem') AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Requisição de pagamento'
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) ORDER BY timestamp DESC LIMIT 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) <= 10;
SELECT idcase, COUNT(*) AS num_actions FROM event_log GROUP BY idcase HAVING num_actions >= 10;
SELECT idcase FROM event_log GROUP BY idcase HAVING count(*) <= 10
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01';
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT AVG(cost) FROM event_log WHERE activity = 'Pagamento efetuado' AND timestamp < '2018-01-01'
SELECT idcase, COUNT(*) AS count_permissao_activities FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_permissoes FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase
SELECT count(DISTINCT idcase) AS "Quantidade de Casos", activity AS "Atividade" FROM event_log WHERE activity LIKE 'permissão%' GROUP BY activity
SELECT idcase, COUNT(*) AS num_events FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase
SELECT idcase, COUNT(*) AS "count_permissoes" FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase;
SELECT activity, COUNT(*) AS count_permissao FROM event_log WHERE activity LIKE '%permissão%' GROUP BY activity;
SELECT COUNT(DISTINCT e1.idcase) AS num_casos, e1.resource FROM event_log e1 INNER JOIN ( SELECT idcase, MIN(timestamp) AS timestamp FROM event_log GROUP BY idcase ORDER BY timestamp ) AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' GROUP BY e1.resource ORDER BY num_casos DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT count(DISTINCT idcase), resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", resource FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource
SELECT COUNT(DISTINCT idcase) AS "Número de Casos", resource AS "Recurso" FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY resource;
SELECT COUNT(DISTINCT e1.idcase) FROM event_log e1 INNER JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Rejeição pelo supervisor' AND e2.activity = 'Solicitação de viagem' AND e1.resource = e2.resource
SELECT DISTINCT e1.idcase FROM event_log e1 inner join (SELECT idcase, MIN(timestamp) as timestamp FROM event_log GROUP BY idcase order by timestamp) AS e2 on e1.idcase=e2.idcase WHERE e1.activity = 'Declaração rejeitada pelo supervisor' ORDER by e2.timestamp
SELECT COUNT(DISTINCT idcase) AS case_count, activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity ORDER BY case_count DESC;
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT idcase) AS case_count, activity FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT count(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' )
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT * FROM event_log WHERE timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' ) AND activity LIKE 'R%';
SELECT **Ações mais comuns no processamento de declarações:** * Seleção * Agregação * Filtragem * Ordenação * Agrupamento **Ações de processamento de uma declaração, nomeadas com um rótulo iniciando com a letra 'E':** * Execução * Envio * Encerramento **Ações de rejeição aparecem em quantas declarações a cada dia:** SELECT strftime('%Y-%m-%d', timestamp), count(DISTINCT idcase) FROM event_log WHERE activity LIKE '%rejeitada%' GROUP BY strftime('%Y-%m-%d', timestamp) **Ações iniciando com letra 'R' ocorreram depois de ações que iniciando com a letra 'D' durante o processamento de uma declaração:** SELECT e2.activity FROM event_log e1 JOIN event_log e2 ON e1.idcase = e2.idcase WHERE e1.activity LIKE 'D%' AND e2.activity LIKE 'R%' AND e1.timestamp < e2.timestamp
SELECT * FROM event_log WHERE activity LIKE 'R%' AND timestamp > ( SELECT MAX(timestamp) FROM event_log WHERE activity LIKE 'D%' );
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT activity, resource, COUNT(*) AS execution_count FROM event_log GROUP BY activity, resource;
SELECT activity, resource, COUNT(*) FROM event_log GROUP BY activity, resource
SELECT resource, activity, COUNT(*) AS count FROM event_log GROUP BY resource, activity ORDER BY resource, count DESC;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource ORDER BY count DESC;
SELECT activity, resource, COUNT(*) AS count FROM event_log GROUP BY activity, resource
SELECT COUNT(DISTINCT idcase), activity, resource FROM event_log GROUP BY activity, resource
SELECT DISTINCT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30'
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30' GROUP BY activity
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE strftime('%Y', timestamp) = '2018' AND strftime('%m', timestamp) BETWEEN '01' AND '06';
SELECT activity FROM event_log WHERE timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-01-01' AND '2018-06-30' ) GROUP BY activity;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase;
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Wayne' ORDER BY idcase
SELECT DISTINCT idcase FROM event_log WHERE resource = 'Alexis';
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS instance_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-12 00:00:00' AND '2018-03-12 23:59:59' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS num_cases FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp >= '2018-03-12' AND timestamp < '2018-03-13' ) GROUP BY activity ORDER BY num_cases DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'case_closed' AND timestamp <= '2018-03-12' ) GROUP BY activity ORDER BY case_count DESC;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM ( SELECT idcase, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp FROM event_log ) AS subquery WHERE next_timestamp BETWEEN '2018-03-12' AND '2018-03-13' GROUP BY activity ORDER BY case_count DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", activity AS "Atividade" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp LIKE '2018-03-12%' ) GROUP BY activity ORDER BY "Quantidade de Casos" DESC;
SELECT activity, COUNT(*) FROM event_log WHERE idcase IN (select idcase FROM event_log GROUP BY idcase HAVING MAX(strftime('%Y-%m-%d', timestamp)) = '2018-03-12') GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS count_cases FROM event_log WHERE timestamp BETWEEN '2018-03-12' AND '2018-03-13' GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity IN ( SELECT activity FROM event_log WHERE activity LIKE 'permissão%' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE id IN ( SELECT MIN(id) FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND id = ( SELECT MIN(id) FROM event_log WHERE idcase = event_log.idcase )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND id IN ( SELECT MIN(id) FROM event_log GROUP BY idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE 'permissão%' AND timestamp = ( SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' AND idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%início%' )
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity LIKE '%permissão%' AND timestamp = (SELECT MIN(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') ORDER BY e1.start_date DESC LIMIT 10;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado') GROUP BY idcase HAVING COUNT(*) = 0;
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity NOT IN ('Requisição de pagamento', 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log where activity IN ('Pagamento efetuado', 'Requisição de pagamento') )
SELECT DISTINCT e.idcase FROM event_log AS e JOIN ( SELECT idcase, MIN(timestamp) AS start_date FROM event_log WHERE activity = 'Requisição de pagamento' GROUP BY idcase ) AS e1 ON e1.idcase = e.idcase WHERE e.activity = 'Pagamento efetuado' ORDER BY e1.start_date DESC LIMIT 10;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Requisição de pagamento' ORDER BY timestamp ASC, resource ASC;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity = 'Início da viagem' OR activity = 'Declaração requisitada pelo funcionário' ORDER BY timestamp, resource;
SELECT * FROM event_log WHERE activity IN ('Início da viagem', 'Declaração requisitada pelo funcionário') ORDER BY timestamp, resource;
SELECT el.timestamp, el.activity, el.resource, el.cost, el.idcase, u.name FROM event_log AS el JOIN users AS u ON el.resource = u.id WHERE el.activity IN ('Início da viagem', 'Requisição de declaração pelo funcionário') ORDER BY el.timestamp, u.name;
SELECT e.id, e.activity, e.timestamp, e.resource, e.cost, e.idcase FROM event_log e WHERE e.activity IN ('Início da viagem', 'Requisição do funcionário') ORDER BY e.timestamp ASC, e.resource ASC;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS num_records FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity = 'Declaração salva pelo funcionário' GROUP BY resource ORDER BY resource;
SELECT COUNT(*) AS "Quantidade de vezes que o funcionário registrou uma ação de salvar uma declaração de viagem", resource AS "Nome do funcionário" FROM event_log WHERE activity = 'Salvar declaração de viagem' GROUP BY resource ORDER BY resource
SELECT COUNT(*) AS "Número de declarações salvas", resource AS "Funcionário" FROM event_log WHERE activity = 'Declaração salva' GROUP BY resource ORDER BY resource;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS instance_count FROM event_log GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY activity ORDER BY case_count DESC
SELECT COUNT(DISTINCT idcase), activity FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT idcase) AS num_declaracoes FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log GROUP BY activity
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC;
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) AS num_activities FROM event_log GROUP BY resource;
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity), resource FROM event_log GROUP BY resource
SELECT COUNT(DISTINCT activity) FROM event_log GROUP BY resource
SELECT resource, COUNT(*) AS num_occurrences FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_occurrences DESC;
SELECT resource, COUNT(DISTINCT idcase) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_finalization_activities DESC;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(DISTINCT idcase) AS total_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS count FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY count DESC;
SELECT resource, COUNT(*) AS total_finalization_activities FROM event_log WHERE activity IN ('fim da viagem', 'pagamento efetuado') GROUP BY resource;
SELECT resource, COUNT(*) AS total_finalizações FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY total_finalizações DESC;
SELECT resource, COUNT(*) AS num_finalization_activities FROM event_log WHERE activity IN ('Fim da viagem', 'Pagamento efetuado') GROUP BY resource ORDER BY num_finalization_activities DESC;
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS case_count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS instance_count FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, ROW_NUMBER() OVER (PARTITION BY idcase ORDER BY timestamp) AS row_num FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' ) AS subquery WHERE row_num = 1 GROUP BY resource
SELECT resource, COUNT(*) AS count FROM ( SELECT resource, idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource, idcase ) AS subquery GROUP BY resource;
SELECT resource, COUNT(*) AS num_rejeicoes FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource
SELECT resource, COUNT(DISTINCT idcase) AS num_declaracoes_rejeitadas FROM event_log WHERE activity = 'Declaração rejeitada pelo pré-aprovador' GROUP BY resource;
SELECT COUNT(*) AS "Número de ocorrências" FROM event_log WHERE activity = 'Fim da viagem';
SELECT COUNT(*) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase;
SELECT idcase, COUNT(*) AS num_atividades FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase HAVING EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' );
SELECT e1.idcase, COUNT(*) AS event_count FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' GROUP BY e1.idcase;
SELECT COUNT(*) AS "Ocorrências de atividades" FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) GROUP BY idcase
SELECT idcase, COUNT(*) AS num_activities FROM event_log WHERE activity <> 'Fim da viagem' GROUP BY idcase
SELECT COUNT(*), idcase FROM event_log WHERE activity != 'Fim da viagem' GROUP BY idcase
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase;
SELECT COUNT(*), idcase FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase
SELECT idcase, COUNT(*) AS num_actions FROM event_log WHERE activity = 'Fim da viagem' GROUP BY idcase HAVING COUNT(*) >= 10;
SELECT COUNT(*) FROM event_log WHERE activity = 'Fim da viagem';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01'
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-31';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-06-30';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT activity FROM event_log WHERE resource = 'Thomas' AND timestamp BETWEEN '2018-01-01' AND '2018-07-01';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT idcase, MIN(timestamp) AS first_activity_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY first_activity_timestamp;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp ASC;
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT WITH RankedEvents AS (SELECT id, activity, timestamp, LEAD(timestamp) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_timestamp, idcase FROM event_log) SELECT idcase, coalesce((strftime('%s', next_timestamp) - strftime('%s', timestamp)),0) as duration FROM RankedEvents WHERE activity='Declaração aprovada pelo supervisor'
SELECT idcase, MIN(timestamp) AS first_timestamp FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' GROUP BY idcase ORDER BY first_timestamp ASC;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT event_log.idcase FROM event_log JOIN RankedEvents ON event_log.idcase = RankedEvents.idcase WHERE event_log.activity = 'Declaração rejeitada pelo supervisor' AND RankedEvents.activity = 'Declaração aprovada pelo supervisor' ORDER BY RankedEvents.timestamp;
SELECT idcase FROM event_log WHERE activity = 'Declaração rejeitada pelo supervisor' ORDER BY timestamp
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2018-04-01' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS (SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp < '2018-04-01')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Início da viagem' AND NOT EXISTS ( SELECT 1 FROM event_log WHERE idcase = event_log.idcase AND activity = 'Fim da viagem' AND timestamp <= '2018-03-31' );
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Início da viagem' AND e1.timestamp > e2.timestamp AND e1.timestamp < '2018-03-31' GROUP BY e1.idcase
SELECT e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e1.activity = 'Início da viagem' AND e2.activity = 'Fim da viagem' AND e1.timestamp < '2018-03-31' AND e2.timestamp > '2018-03-31';
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' INTERSECT SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' ) AND resource IN ( SELECT resource FROM event_log WHERE activity = 'Fim da viagem' GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity IN ('Requisição de pagamento', 'Pagamento efetuado') ) AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND activity = 'Fim da viagem' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) > 1 ) AND idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' ) AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado' );
SELECT DISTINCT idcase FROM event_log WHERE idcase NOT IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Pagamento efetuado' ) AND idcase IN ( SELECT DISTINCT idcase FROM event_log WHERE activity = 'Declaração finalizada' );
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Requisição de pagamento' OR activity = 'Pagamento efetuado')
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, COUNT(DISTINCT resource) AS num_resources, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost), COUNT(DISTINCT resource) FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase;
SELECT idcase, SUM(cost) AS total_cost, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY idcase
SELECT COUNT(DISTINCT resource) AS num_resources, idcase, SUM(cost) AS total_cost FROM event_log GROUP BY idcase;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 2 AND activity LIKE 'permissão%'
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE '%permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase FROM event_log WHERE activity LIKE 'permissão%' GROUP BY idcase HAVING COUNT(*) > 1
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%permissão%'
SELECT idcase, COUNT(*) FROM event_log WHERE activity LIKE '%permissão%' GROUP by idcase HAVING COUNT(*) > 1
SELECT id FROM event_log WHERE idcase IN (SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) DESC) ORDER BY timestamp DESC
SELECT idcase, MAX(timestamp) AS last_event_timestamp FROM event_log GROUP BY idcase ORDER BY last_event_timestamp;
SELECT id FROM event_log ORDER BY timestamp DESC GROUP BY idcase
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC;
SELECT id FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase ORDER BY MAX(timestamp) ) ORDER BY timestamp DESC;
SELECT id, idcase FROM event_log ORDER BY timestamp DESC
SELECT id FROM event_log ORDER BY timestamp DESC GROUP BY idcase
SELECT idcase, activity, timestamp FROM event_log ORDER BY idcase, timestamp DESC;
SELECT id FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Início da viagem') ORDER BY timestamp DESC
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100
SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) >= 100;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos", CASE WHEN activity LIKE '%funcionário%' THEN 'Funcionário' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administração%' THEN 'Administração' WHEN activity LIKE '%pré-aprovador%' THEN 'Pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'Responsável pelo Orçamento' WHEN activity LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END AS "Grupo de Funcionários" FROM event_log GROUP BY "Grupo de Funcionários" ORDER BY "Quantidade de Casos" DESC;
SELECT COUNT(DISTINCT idcase) AS "Número de Casos", CASE WHEN activity LIKE '%funcionário%' THEN 'Funcionário' WHEN activity LIKE '%supervisor%' THEN 'Supervisor' WHEN activity LIKE '%administração%' THEN 'Administração' WHEN activity LIKE '%pré-aprovador%' THEN 'Pré-aprovador' WHEN activity LIKE '%responsável pelo orçamento%' THEN 'Responsável pelo Orçamento' WHEN activity LIKE '%diretor%' THEN 'Diretor' ELSE 'Outro' END AS "Grupo de Funcionários" FROM event_log GROUP BY "Grupo de Funcionários" ORDER BY "Número de Casos" DESC;
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%funcionário%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%administração%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%pré-aprovador%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%diretor%';
SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%funcionário%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%administração%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%pré-aprovador%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%supervisor%' UNION SELECT COUNT(DISTINCT idcase) AS "Quantidade de Casos" FROM event_log WHERE activity LIKE '%diretor%';
SELECT select count(*), 'funcionário' as grupo from event_log WHERE activity like '%funcionário%' UNION select count(*), 'supervisor' as grupo from event_log WHERE activity like '%supervisor%' UNION select count(*), 'administração' as grupo from event_log WHERE activity like '%administração%' UNION select count(*), 'pré-aprovador' as grupo from event_log WHERE activity like '%pré-aprovador%' UNION select count(*), 'responsável pelo orçamento' as grupo from event_log WHERE activity like '%responsável pelo orçamento%' UNION select count(*), 'diretor' as grupo from event_log WHERE activity like '%diretor%' order by count(*)
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%funcionário%' GROUP BY activity ORDER BY count_activity DESC; SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%supervisor%' GROUP BY activity ORDER BY count_activity DESC; SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%administração%' GROUP BY activity ORDER BY count_activity DESC; SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%pré-aprovador%' GROUP BY activity ORDER BY count_activity DESC; SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%responsável pelo orçamento%' GROUP BY activity ORDER BY count_activity DESC; SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE activity LIKE '%diretor%' GROUP BY activity ORDER BY count_activity DESC;
SELECT activity, COUNT(*) AS count_activity FROM event_log WHERE resource IN ( SELECT resource FROM event_log WHERE activity LIKE '%funcionário%' ) GROUP BY activity ORDER BY count_activity DESC;
SELECT activity, COUNT(*) AS count FROM event_log WHERE activity LIKE '%funcionário%' OR activity LIKE '%supervisor%' OR activity LIKE '%administração%' OR activity LIKE '%pré-aprovador%' OR activity LIKE '%responsável pelo orçamento%' OR activity LIKE '%diretor%' GROUP BY activity ORDER BY count DESC
SELECT e1.idcase FROM event_log AS e1 JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Fim da viagem' AND idcase = '1' );
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' INTERSECT SELECT idcase FROM event_log WHERE timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem')
SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' INTERSECT SELECT idcase FROM event_log WHERE timestamp > (SELECT MAX(timestamp) FROM event_log WHERE activity = 'Fim da viagem')
SELECT idcase, timestamp FROM event_log WHERE activity = 'Fim da viagem' ORDER BY resource;
SELECT e1.activity, e1.resource, e1.idcase FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Fim da viagem' AND e1.timestamp > e2.timestamp;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND id IN (SELECT MAX(id) FROM event_log GROUP BY idcase)
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = ( SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Envio de lembrete' AND timestamp = (SELECT MAX(timestamp) FROM event_log WHERE idcase = event_log.idcase)
SELECT COUNT(DISTINCT e1.idcase) FROM event_log AS e1 INNER JOIN event_log AS e2 ON e1.idcase = e2.idcase WHERE e2.activity = 'Envio de lembrete' AND e1.activity LIKE '%declaração%' AND e1.timestamp < e2.timestamp;
SELECT DISTINCT resource FROM event_log WHERE timestamp < '2018-03-31'
SELECT resource FROM event_log WHERE timestamp NOT BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' GROUP BY resource HAVING COUNT(*) = 0;
SELECT resource FROM event_log WHERE NOT resource IN ( SELECT resource FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' );
SELECT resource FROM event_log WHERE timestamp = '2018-03-31' GROUP BY resource HAVING COUNT(*) = 0;
SELECT resource FROM event_log WHERE activity = 'Início da viagem' AND timestamp < '2018-03-31' AND idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp < '2018-03-31' );
SELECT resource FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59' ) AND timestamp BETWEEN '2018-03-31 00:00:00' AND '2018-03-31 23:59:59';
SELECT activity, COUNT(*) AS event_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'end' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Fim da viagem' AND timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS frequency FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity ORDER BY frequency DESC;
SELECT activity, COUNT(*) AS execution_count FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE timestamp BETWEEN '2018-12-01' AND '2018-12-05' AND activity = 'case_closed' ) GROUP BY activity;
SELECT activity, COUNT(DISTINCT idcase) FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log GROUP BY idcase HAVING strftime('%Y-%m-%d', MAX(timestamp)) BETWEEN '2018-12-01' AND '2018-12-05' ) GROUP BY activity;
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN ( SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado' );
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado';
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity = 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE activity <> 'Pagamento efetuado'
SELECT COUNT(DISTINCT idcase) FROM event_log WHERE idcase NOT IN (SELECT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT DISTINCT idcase FROM event_log WHERE activity = 'Fim da viagem' AND idcase NOT IN (SELECT DISTINCT idcase FROM event_log WHERE activity = 'Pagamento efetuado')
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT activity, COUNT(DISTINCT resource) AS num_resources FROM event_log GROUP BY activity;
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY activity
SELECT COUNT(DISTINCT resource) FROM event_log GROUP BY idcase
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT DISTINCT activity FROM event_log WHERE idcase IN ( SELECT idcase FROM event_log WHERE activity = 'Envio de lembrete' ) AND timestamp < ( SELECT timestamp FROM event_log WHERE activity = 'Envio de lembrete' );
SELECT DISTINCT activity FROM event_log WHERE activity LIKE '%declaração%'
SELECT count(*) AS "Quantidade de Eventos", idcase AS "ID do Caso" FROM event_log GROUP BY idcase ORDER BY "Quantidade de Eventos" DESC;
SELECT count(*) AS "event_count", idcase, COUNT(DISTINCT idcase) OVER (PARTITION BY count(*)) AS "case_count" FROM event_log GROUP BY idcase ORDER BY count(*) DESC;
SELECT count (*), idcase FROM event_log group by idcase
SELECT count (*), idcase FROM event_log group by idcase
SELECT COUNT(*) AS event_count, COUNT(DISTINCT idcase) AS case_count FROM event_log GROUP BY event_count
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG (SUM(cost)) FROM event_log group by idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(SUM(cost)) FROM event_log GROUP BY idcase
SELECT AVG(cost) FROM event_log
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource
SELECT resource, AVG(cost) FROM event_log GROUP BY resource;
SELECT resource, COUNT(*) AS count_resource FROM event_log GROUP BY resource ORDER BY count_resource DESC LIMIT 10
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS frequency FROM event_log GROUP BY resource ORDER BY frequency DESC LIMIT 10
SELECT resource, COUNT(*) AS event_count FROM event_log GROUP BY resource ORDER BY event_count DESC LIMIT 10;
SELECT resource, COUNT(*) AS num_activities FROM event_log GROUP BY resource ORDER BY num_activities DESC LIMIT 10;
SELECT count (*), date(timestamp) FROM event_log group by date(timestamp)
SELECT DATE(timestamp) AS date, COUNT(*) AS activity_count FROM event_log GROUP BY date ORDER BY date;
SELECT As ações mais comuns no processamento de declarações são: * **Selecionar:** Recuperar dados de uma tabela. * **Inserir:** Adicionar novos dados a uma tabela. * **Atualizar:** Modificar dados existentes em uma tabela. * **Excluir:** Remover dados de uma tabela. * **Criar:** Criar uma nova tabela ou índice. * **Destruir:** Remover uma tabela ou índice existente. * **Alterar:** Modificar a estrutura de uma tabela existente.
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT resource) = 1;
SELECT idcase FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) AND resource IN ( SELECT resource FROM event_log GROUP BY resource HAVING COUNT(*) > 1 ) GROUP BY idcase HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT idcase FROM event_log WHERE activity IN ( SELECT activity FROM event_log GROUP BY activity HAVING COUNT(*) > 1 ) GROUP BY idcase HAVING COUNT(*) > 1;
SELECT idcase, COUNT(*) AS event_count FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase;
SELECT COUNT(*) FROM event_log WHERE idcase IN (SELECT idcase FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor') AND timestamp < (SELECT timestamp FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' ORDER BY timestamp DESC LIMIT 1)
SELECT idcase, COUNT(*) AS num_interventions FROM event_log WHERE activity = 'Declaração final aprovada pelo diretor' GROUP BY idcase ORDER BY num_interventions DESC;
SELECT idcase, ( SELECT timestamp FROM event_log WHERE activity LIKE '%permissão aprovada pela administração%' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1 ) - ( SELECT timestamp FROM event_log WHERE activity LIKE '%permissão requisitada pelo funcionário%' AND idcase = e.idcase ORDER BY timestamp DESC LIMIT 1 ) AS time_elapsed FROM event_log AS e WHERE activity LIKE '%permissão requisitada pelo funcionário%' AND idcase IN ( SELECT idcase FROM event_log WHERE activity LIKE '%permissão aprovada pela administração%' );
SELECT idcase, (SELECT timestamp FROM event_log WHERE activity = 'Permissão aprovada pela administração' AND idcase = e.idcase) - (SELECT timestamp FROM event_log WHERE activity = 'Permissão requisitada pelo funcionário' AND idcase = e.idcase) AS time_interval FROM event_log e WHERE activity = 'Permissão requisitada pelo funcionário'
SELECT event_log1.timestamp AS timestamp_requisicao, event_log2.timestamp AS timestamp_aprovacao, (event_log2.timestamp - event_log1.timestamp) AS tempo_decorrido FROM event_log AS event_log1 JOIN event_log AS event_log2 ON event_log1.idcase = event_log2.idcase WHERE event_log1.activity LIKE '%requisitar permissão%' AND event_log2.activity LIKE '%aprovar permissão%' ORDER BY tempo_decorrido DESC;
SELECT idcase FROM event_log WHERE activity LIKE '%Retrabalho%' GROUP BY idcase
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT(idcase) FROM (SELECT idcase, activity, LEAD(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS next_activity FROM event_log) where activity = next_activity
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%retrabalho%'
SELECT DISTINCT idcase FROM event_log WHERE activity LIKE '%retrabalho%'
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(DISTINCT activity) = 1
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase, activity;
SELECT idcase FROM event_log GROUP BY idcase, activity HAVING COUNT(*) > 1 ORDER BY idcase;
SELECT idcase, activity, LAG(activity) OVER (PARTITION BY idcase ORDER BY timestamp) AS prev_activity FROM event_log WHERE activity = prev_activity;
SELECT idcase, resource, COUNT(*) AS num_interventions FROM event_log WHERE cost IS NULL GROUP BY idcase, resource
SELECT idcase FROM event_log GROUP BY idcase HAVING COUNT(*) >= 2 AND MIN(timestamp) < MAX(timestamp) AND MIN(timestamp) + (COUNT(*) - 1) * INTERVAL '1 DAY' < MAX(timestamp)
SELECT DISTINCT resource FROM event_log WHERE activity LIKE '%supervisor%'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração aprovada pelo supervisor'
SELECT DISTINCT resource FROM event_log WHERE activity = 'Declaração aprovada pelo responsável pelo orçamento';
SELECT DISTINCT resource FROM event_log WHERE activity = 'Budgeting'
